CREATE DATABASE  IF NOT EXISTS `sync_otp_mainnet` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;
USE `sync_otp_mainnet`;
-- MySQL dump 10.13  Distrib 8.0.32, for Win64 (x86_64)
--
-- Host: 127.0.0.1    Database: sync_otp_mainnet
-- ------------------------------------------------------
-- Server version	8.0.32

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Temporary view structure for view `_raw_v_nodes_stats_daily`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_daily` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_last30d`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_last30d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_last7d`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_last7d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_last7d_raw`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_last7d_raw`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d_raw`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_last7d_raw` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_latest`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_latest`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_latest`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_latest` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_daily`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_daily` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_hourly`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_hourly`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_hourly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_hourly` AS SELECT 
 1 AS `date`,
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_last24h`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_last24h`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_last24h` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_last30d`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_last30d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_last7d`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_last7d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_monthly`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_monthly`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_monthly` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `assertion_assertion_created`
--

DROP TABLE IF EXISTS `assertion_assertion_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `assertion_assertion_created` (
  `assertion_id` char(66) DEFAULT NULL,
  `size` int unsigned DEFAULT NULL,
  `triples_number` mediumint unsigned DEFAULT NULL,
  `chunks_number` mediumint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_assertion_assertion_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_assertion_assertion_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `assertion_tx`
--

DROP TABLE IF EXISTS `assertion_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `assertion_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_assertion_assertion_id` char(66) DEFAULT NULL,
  `create_assertion_size` int unsigned DEFAULT NULL,
  `create_assertion_triples_number` mediumint unsigned DEFAULT NULL,
  `create_assertion_chunks_number` mediumint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_assertion_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_assertion_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `block`
--

DROP TABLE IF EXISTS `block`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `block` (
  `number` int unsigned NOT NULL,
  `timestamp` int unsigned DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`number`),
  UNIQUE KEY `v_nodes_activity` (`timestamp` DESC,`number`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_commit_submitted`
--

DROP TABLE IF EXISTS `commit_manager_v1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_commit_submitted` (
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `score` int unsigned DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`identity_id`,`epoch`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_commit_submitted_contract_id` (`contract_id`),
  KEY `fk_commit_manager_v1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_tx`
--

DROP TABLE IF EXISTS `commit_manager_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_tx_contract_id` (`to_id`),
  KEY `fk_commit_manager_v1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_commit_submitted`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_commit_submitted` (
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `score` int unsigned DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`epoch`,`identity_id`,`state_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_commit_submitted_contract_id` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_state_finalized`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_state_finalized`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_state_finalized` (
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `state` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`epoch`,`state_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_state_finalized_asset_contract_id` (`asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_state_finalized_contract_id` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_state_finalized_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_state_finalized_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_tx`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `submit_update_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_update_commit_keyword` char(64) DEFAULT NULL,
  `submit_update_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_update_commit_epoch` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `submit_update_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_tx_contract_id` (`to_id`),
  KEY `fk_commit_manager_v1_u1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_tx_update_commit_asset_contract_id` (`submit_update_commit_asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_update_commit_asset_contract_id` FOREIGN KEY (`submit_update_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_burnt`
--

DROP TABLE IF EXISTS `content_asset_asset_burnt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_burnt` (
  `token_id` bigint unsigned NOT NULL,
  `returned_token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_burnt_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_burnt_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_burnt_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_burnt_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_minted`
--

DROP TABLE IF EXISTS `content_asset_asset_minted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_minted` (
  `token_id` bigint unsigned NOT NULL,
  `state` char(66) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`state`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_minted_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_minted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_minted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_minted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_state_update_canceled`
--

DROP TABLE IF EXISTS `content_asset_asset_state_update_canceled`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_state_update_canceled` (
  `token_id` bigint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `returned_token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`state_index`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_state_update_canceled_asset_contract_id` (`asset_contract_id`),
  KEY `fk_content_asset_asset_state_update_canceled_contract_id` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_update_canceled_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_update_canceled_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_state_updated`
--

DROP TABLE IF EXISTS `content_asset_asset_state_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_state_updated` (
  `token_id` bigint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `update_token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`state_index`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_state_updated_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_state_updated_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_updated_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_storing_period_extended`
--

DROP TABLE IF EXISTS `content_asset_asset_storing_period_extended`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_storing_period_extended` (
  `token_id` bigint unsigned NOT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_storing_period_extended_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_storing_period_extended_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_storing_period_extended_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_storing_period_extended_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_update_payment_increased`
--

DROP TABLE IF EXISTS `content_asset_asset_update_payment_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_update_payment_increased` (
  `token_id` bigint unsigned NOT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_update_payment_increased_contract_id` (`contract_id`),
  KEY `f_content_asset_asset_update_payment_increased_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `f_content_asset_asset_update_payment_increased_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_update_payment_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_payment_increased`
--

DROP TABLE IF EXISTS `content_asset_payment_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_payment_increased` (
  `token_id` bigint unsigned NOT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_payment_increased_contract_id` (`contract_id`),
  KEY `fk_content_asset_payment_increased_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_payment_increased_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_payment_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_storage_transfer`
--

DROP TABLE IF EXISTS `content_asset_storage_transfer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_storage_transfer` (
  `from` char(42) DEFAULT NULL,
  `to` char(42) DEFAULT NULL,
  `token_id` bigint unsigned NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_storage_transfer_contract_id` (`contract_id`),
  CONSTRAINT `fk_content_asset_storage_transfer_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_storage_tx`
--

DROP TABLE IF EXISTS `content_asset_storage_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_storage_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_storage_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_content_asset_storage_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_tx`
--

DROP TABLE IF EXISTS `content_asset_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_asset_assertion_id` char(66) DEFAULT NULL,
  `create_asset_size` int unsigned DEFAULT NULL,
  `create_asset_triples_number` mediumint unsigned DEFAULT NULL,
  `create_asset_chunks_number` mediumint unsigned DEFAULT NULL,
  `create_asset_epochs_number` smallint unsigned DEFAULT NULL,
  `create_asset_token_amount` decimal(27,0) DEFAULT NULL,
  `create_asset_score_function_id` tinyint unsigned DEFAULT NULL,
  `create_asset_immutable_` tinyint unsigned DEFAULT NULL,
  `burn_asset_token_id` bigint unsigned DEFAULT NULL,
  `cancel_asset_state_update_token_id` bigint unsigned DEFAULT NULL,
  `extend_asset_storing_period_token_id` bigint unsigned DEFAULT NULL,
  `extend_asset_storing_period_epochs_number` smallint unsigned DEFAULT NULL,
  `extend_asset_storing_period_token_amount` decimal(27,0) DEFAULT NULL,
  `increase_asset_token_amount_token_id` bigint unsigned DEFAULT NULL,
  `increase_asset_token_amount_token_amount` decimal(27,0) DEFAULT NULL,
  `increase_asset_update_token_amount_token_id` bigint unsigned DEFAULT NULL,
  `increase_asset_update_token_amount_token_amount` decimal(27,0) DEFAULT NULL,
  `update_asset_state_token_id` bigint unsigned DEFAULT NULL,
  `update_asset_state_assertion_id` char(66) DEFAULT NULL,
  `update_asset_state_size` int unsigned DEFAULT NULL,
  `update_asset_state_triples_number` mediumint unsigned DEFAULT NULL,
  `update_asset_state_chunks_number` mediumint unsigned DEFAULT NULL,
  `update_asset_state_update_token_amount` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_content_asset_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `contracts`
--

DROP TABLE IF EXISTS `contracts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `contracts` (
  `contract_id` tinyint unsigned NOT NULL AUTO_INCREMENT,
  `contract_address` char(42) NOT NULL,
  PRIMARY KEY (`contract_id`),
  UNIQUE KEY `contract_address` (`contract_address`)
) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_asset_storage_changed`
--

DROP TABLE IF EXISTS `hub_asset_storage_changed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_asset_storage_changed` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_hub_asset_storage_changed_contract_id` (`contract_id`),
  CONSTRAINT `fk_hub_asset_storage_changed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_contract_changed`
--

DROP TABLE IF EXISTS `hub_contract_changed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_contract_changed` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_contract_changed_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_contract_changed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_new_asset_storage`
--

DROP TABLE IF EXISTS `hub_new_asset_storage`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_new_asset_storage` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_new_asset_storage_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_new_asset_storage_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_new_contract`
--

DROP TABLE IF EXISTS `hub_new_contract`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_new_contract` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_new_contract_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_new_contract_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_tx`
--

DROP TABLE IF EXISTS `hub_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `set_contract_address_contract_name` varchar(255) DEFAULT NULL,
  `set_contract_address_new_contract_address` varchar(42) DEFAULT NULL,
  `set_asset_storage_address_asset_storage_name` varchar(255) DEFAULT NULL,
  `set_asset_storage_address_asset_storage_address` varchar(42) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_hub_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_hub_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_identity_created`
--

DROP TABLE IF EXISTS `identity_identity_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_identity_created` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `operational_key` char(66) DEFAULT NULL,
  `admin_key` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_identity_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_identity_identity_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_identity_deleted`
--

DROP TABLE IF EXISTS `identity_identity_deleted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_identity_deleted` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_identity_deleted_contract_id` (`contract_id`),
  CONSTRAINT `fk_identity_identity_deleted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_key_added`
--

DROP TABLE IF EXISTS `identity_storage_key_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_key_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `key` char(66) DEFAULT NULL,
  `purpose` tinyint unsigned DEFAULT NULL,
  `key_type` tinyint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_identity_storage_key_added_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_identity_storage_key_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_key_removed`
--

DROP TABLE IF EXISTS `identity_storage_key_removed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_key_removed` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `key` char(66) DEFAULT NULL,
  `purpose` tinyint unsigned DEFAULT NULL,
  `key_type` tinyint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_identity_storage_key_removed_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_identity_storage_key_removed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_tx`
--

DROP TABLE IF EXISTS `identity_storage_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `delete_identity` smallint unsigned DEFAULT NULL,
  `set_operational_key_identity_id_operational_key` char(66) DEFAULT NULL,
  `set_operational_key_identity_id_identity_id` smallint unsigned DEFAULT NULL,
  `remote_operational_key_identity_id_operational_key` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_storage_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_identity_storage_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_tx`
--

DROP TABLE IF EXISTS `identity_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_key_identity_id` smallint unsigned DEFAULT NULL,
  `add_key_key` char(66) DEFAULT NULL,
  `add_key_key_purpose` tinyint unsigned DEFAULT NULL,
  `add_key_key_type` tinyint unsigned DEFAULT NULL,
  `create_identity_operational` char(42) DEFAULT NULL,
  `create_identity_admin` char(42) DEFAULT NULL,
  `delete_identity_identity_id` smallint unsigned DEFAULT NULL,
  `remove_key_identity_id` smallint unsigned DEFAULT NULL,
  `remove_key_key` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_identity_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `manual_bad_txs`
--

DROP TABLE IF EXISTS `manual_bad_txs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `manual_bad_txs` (
  `transaction_hash` varchar(66) NOT NULL,
  `comment` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`transaction_hash`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `other_tx`
--

DROP TABLE IF EXISTS `other_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `other_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `input` text NOT NULL,
  `to` char(42) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_ask_updated`
--

DROP TABLE IF EXISTS `profile_ask_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_ask_updated` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `ask` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_ask_updated_contract_id` (`contract_id`),
  KEY `v_nodes` (`identity_id`,`ask`,`block_number`),
  CONSTRAINT `fk_profile_ask_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_profile_created`
--

DROP TABLE IF EXISTS `profile_profile_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_profile_created` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_profile_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_profile_profile_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_profile_deleted`
--

DROP TABLE IF EXISTS `profile_profile_deleted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_profile_deleted` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_profile_deleted_contract_id` (`contract_id`),
  CONSTRAINT `fk_profile_profile_deleted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_tx`
--

DROP TABLE IF EXISTS `profile_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_profile_admin_wallet` char(42) DEFAULT NULL,
  `create_profile_node_id` char(94) DEFAULT NULL,
  `create_profile_shares_token_name` varchar(255) DEFAULT NULL,
  `create_profile_shares_token_symbol` varchar(255) DEFAULT NULL,
  `set_ask_identity_id` smallint unsigned DEFAULT NULL,
  `set_ask_ask` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_profile_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_proof_submitted`
--

DROP TABLE IF EXISTS `proof_manager_v1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_proof_manager_v1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_tx`
--

DROP TABLE IF EXISTS `proof_manager_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `get_challenge_sender` char(42) DEFAULT NULL,
  `get_challenge_token_id` bigint unsigned DEFAULT NULL,
  `get_challenge_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `get_challenge_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_tx_contract_id` (`to_id`),
  KEY `fk_proof_manager_v1_tx_get_challenge_asset_contract_id` (`get_challenge_asset_contract_id`),
  KEY `fk_proof_manager_v1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_get_challenge_asset_contract_id` FOREIGN KEY (`get_challenge_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_u1_proof_submitted`
--

DROP TABLE IF EXISTS `proof_manager_v1_u1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_u1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `state_index` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_u1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_proof_manager_v1_u1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_u1_tx`
--

DROP TABLE IF EXISTS `proof_manager_v1_u1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_u1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `get_challenge_token_id` bigint unsigned DEFAULT NULL,
  `get_challenge_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `get_challenge_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_u1_tx_contract_id` (`to_id`),
  KEY `fk_proof_manager_v1_u1_tx_get_challenge_asset_contract_id` (`get_challenge_asset_contract_id`),
  KEY `fk_proof_manager_v1_u1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_get_challenge_asset_contract_id` FOREIGN KEY (`get_challenge_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_commit_submitted`
--

DROP TABLE IF EXISTS `service_agreement_v1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_commit_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `score` int unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_commit_submitted_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_proof_submitted`
--

DROP TABLE IF EXISTS `service_agreement_v1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_created`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_created` (
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `start_time` int unsigned DEFAULT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `epoch_length` int unsigned DEFAULT NULL,
  `token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_service_agreement_v1_created_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_created_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_created_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_service_agreement_v1_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_extended`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_extended`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_extended` (
  `agreement_id` char(66) DEFAULT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_ervice_agreement_v1_service_agreement_v1_extended_contract_id` (`contract_id`),
  CONSTRAINT `fk_ervice_agreement_v1_service_agreement_v1_extended_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_reward_raised`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_reward_raised`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_reward_raised` (
  `agreement_id` char(66) DEFAULT NULL,
  `token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_e_agreement_v1_service_agreement_v1_reward_raised_contract_id` (`contract_id`),
  CONSTRAINT `fk_e_agreement_v1_service_agreement_v1_reward_raised_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_terminated`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_terminated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_terminated` (
  `agreement_id` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_vice_agreement_v1_service_agreement_v1_terminated_contract_id` (`contract_id`),
  CONSTRAINT `fk_vice_agreement_v1_service_agreement_v1_terminated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_update_reward_raised`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_update_reward_raised`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_update_reward_raised` (
  `agreement_id` char(66) DEFAULT NULL,
  `update_token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_ment_v1_service_agreement_v1_update_reward_raised_contract_id` (`contract_id`),
  CONSTRAINT `fk_ment_v1_service_agreement_v1_update_reward_raised_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_tx`
--

DROP TABLE IF EXISTS `service_agreement_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_tokens_asset_owner` char(42) DEFAULT NULL,
  `add_tokens_agreement_id` char(66) DEFAULT NULL,
  `add_tokens_token_amount` decimal(27,0) DEFAULT NULL,
  `add_update_tokens_asset_owner` char(42) DEFAULT NULL,
  `add_update_tokens_agreement_id` char(66) DEFAULT NULL,
  `add_update_tokens_token_amount` decimal(27,0) DEFAULT NULL,
  `create_service_agreement_asset_creator` char(42) DEFAULT NULL,
  `create_service_agreement_token_id` bigint unsigned DEFAULT NULL,
  `create_service_agreement_keyword` char(64) DEFAULT NULL,
  `create_service_agreement_hash_function_id` tinyint unsigned DEFAULT NULL,
  `create_service_agreement_epochs_number` smallint unsigned DEFAULT NULL,
  `create_service_agreement_token_amount` decimal(27,0) DEFAULT NULL,
  `create_service_agreement_score_function_id` tinyint unsigned DEFAULT NULL,
  `extend_storing_period_asset_owner` char(42) DEFAULT NULL,
  `extend_storing_agreement_id` char(66) DEFAULT NULL,
  `extend_storing_epochs_number` smallint unsigned DEFAULT NULL,
  `extend_storing_token_amount` decimal(27,0) DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `terminate_agreement_asset_owner` char(42) DEFAULT NULL,
  `terminate_agreement_agreement_id` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `create_service_agreement_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_tx_contract_id` (`to_id`),
  KEY `fk_service_agreement_v1_tx_create_asset_contract_id` (`create_service_agreement_asset_contract_id`),
  KEY `fk_service_agreement_v1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  KEY `fk_service_agreement_v1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_create_asset_contract_id` FOREIGN KEY (`create_service_agreement_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_node_added`
--

DROP TABLE IF EXISTS `sharding_table_node_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_node_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `ask` decimal(27,0) DEFAULT NULL,
  `stake` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_node_added_contract_id` (`contract_id`),
  CONSTRAINT `fk_sharding_table_node_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_node_removed`
--

DROP TABLE IF EXISTS `sharding_table_node_removed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_node_removed` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_node_removed_contract_id` (`contract_id`),
  CONSTRAINT `fk_sharding_table_node_removed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_tx`
--

DROP TABLE IF EXISTS `sharding_table_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `push_back_identity_id` smallint unsigned DEFAULT NULL,
  `push_front_identity_id` smallint unsigned DEFAULT NULL,
  `remove_node_identity_id` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_sharding_table_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_commit_submitted`
--

DROP TABLE IF EXISTS `staging_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_commit_submitted` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `hash_function_id` tinyint unsigned NOT NULL,
  `epoch` smallint unsigned NOT NULL,
  `score` int unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `rank` smallint DEFAULT NULL,
  `estimated_earnings_any_epoch` decimal(27,18) DEFAULT NULL,
  `estimated_earnings_1st_epoch_only` decimal(27,18) DEFAULT NULL,
  `commit_any_epoch` bit(1) DEFAULT NULL,
  `commit_1st_epoch` bit(1) DEFAULT NULL,
  `commit_any_epoch_incl_out_of_top3` bit(1) DEFAULT NULL,
  `commit_1st_epoch_incl_out_of_top3` bit(1) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`,`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_sp_update_staging1` (`block_number`,`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`score`,`transaction_index`),
  KEY `idx_sp_update_staging2` (`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`),
  KEY `v_nodes_stats_hourly_7d` (`block_date`,`identity_id`,`block_ts_hour`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`),
  KEY `v_chart_earnings_payouts_daily` (`block_date`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`),
  KEY `v_nodes_assets` (`identity_id`,`token_id`,`asset_contract_id`,`epoch`),
  KEY `v_nodes_stats_hourly_7d_avgnode` (`block_date`,`block_ts_hour`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_proof_submitted`
--

DROP TABLE IF EXISTS `staging_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_proof_submitted` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `epoch` smallint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `transaction_index` smallint NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `value` decimal(27,18) NOT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`,`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_sp_update_staging1` (`block_number`,`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`value`,`transaction_index`),
  KEY `v_nodes_stats_hourly_7d` (`block_date`,`identity_id`,`block_ts_hour`,`value`),
  KEY `v_chart_earnings_payouts_daily` (`block_date`,`value`),
  KEY `v_nodes_assets` (`identity_id`,`token_id`,`asset_contract_id`,`epoch`,`value`),
  KEY `v_nodes_stats_hourly_7d_avgnode` (`block_date`,`block_ts_hour`,`value`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_pub`
--

DROP TABLE IF EXISTS `staging_pub`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_pub` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `size` int unsigned NOT NULL,
  `triples_number` mediumint unsigned NOT NULL,
  `chunks_number` mediumint unsigned NOT NULL,
  `hash_function_id` tinyint unsigned NOT NULL,
  `epochs_number` smallint unsigned NOT NULL,
  `epoch_length` int unsigned NOT NULL,
  `token_amount` decimal(27,18) NOT NULL,
  `bid` decimal(27,18) NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `state` char(66) NOT NULL,
  `previous_states` varchar(8000) DEFAULT NULL,
  `from` char(42) NOT NULL,
  `owner` char(42) DEFAULT NULL,
  `winners` varchar(2300) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  KEY `idx_v_pubs_stats` (`block_date`,`size`,`epochs_number`,`token_amount`,`bid`),
  KEY `idx_v_pubs_stats_hourly` (`block_date`,`block_ts_hour`,`size`,`epochs_number`,`token_amount`,`bid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_stake`
--

DROP TABLE IF EXISTS `staging_stake`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_stake` (
  `identity_id` smallint unsigned NOT NULL,
  `block_date` date NOT NULL,
  `block_ts_hour` datetime NOT NULL,
  `stake_change` decimal(27,18) DEFAULT NULL,
  `stake` decimal(27,18) DEFAULT NULL,
  `ask` decimal(27,18) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`),
  UNIQUE KEY `v_nodes` (`block_date`,`block_ts_hour`,`identity_id`,`stake`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_accumulated_operator_fee_increased`
--

DROP TABLE IF EXISTS `staking_accumulated_operator_fee_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_accumulated_operator_fee_increased` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `old_accumulated_operator_fee` decimal(27,0) DEFAULT NULL,
  `new_accumulated_operator_fee` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_accumulated_operator_fee_increased_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_accumulated_operator_fee_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_accumulated_operator_fee_updated`
--

DROP TABLE IF EXISTS `staking_accumulated_operator_fee_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_accumulated_operator_fee_updated` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `operator_fee` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_accumulated_operator_fee_updated_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_accumulated_operator_fee_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_reward_added`
--

DROP TABLE IF EXISTS `staking_reward_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_reward_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `reward_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_reward_added_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`reward_amount`),
  CONSTRAINT `fk_staking_reward_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_increased`
--

DROP TABLE IF EXISTS `staking_stake_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_increased` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `old_stake` decimal(27,0) DEFAULT NULL,
  `new_stake` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_increased_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`new_stake`,`old_stake`),
  CONSTRAINT `fk_staking_stake_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_withdrawal_started`
--

DROP TABLE IF EXISTS `staking_stake_withdrawal_started`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_withdrawal_started` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `old_stake` decimal(27,0) DEFAULT NULL,
  `new_stake` decimal(27,0) DEFAULT NULL,
  `stake_amount` decimal(27,0) DEFAULT NULL,
  `withdrawal_period_end` bigint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_withdrawal_started_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_stake_withdrawal_started_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_withdrawn`
--

DROP TABLE IF EXISTS `staking_stake_withdrawn`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_withdrawn` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `withdrawn_stake_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_withdrawn_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`withdrawn_stake_amount`),
  CONSTRAINT `fk_staking_stake_withdrawn_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_tx`
--

DROP TABLE IF EXISTS `staking_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_reward_agreement_id` char(66) DEFAULT NULL,
  `add_reward_identity_id` smallint unsigned DEFAULT NULL,
  `add_reward_reward_amount` decimal(27,0) DEFAULT NULL,
  `add_stake_identity_id` smallint unsigned DEFAULT NULL,
  `add_stake_stake_amount` decimal(27,0) DEFAULT NULL,
  `set_operator_fee_identity_id` smallint unsigned DEFAULT NULL,
  `set_operator_fee_operator_fee` decimal(27,0) DEFAULT NULL,
  `slash_identity_id` smallint unsigned DEFAULT NULL,
  `start_stake_withdrawal_identity_id` smallint unsigned DEFAULT NULL,
  `start_stake_withdrawal_shares_to_burn` decimal(27,0) DEFAULT NULL,
  `withdraw_stake_identity_id` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_staking_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `stats_node`
--

DROP TABLE IF EXISTS `stats_node`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `stats_node` (
  `identity_id` smallint unsigned NOT NULL,
  `block_date` date NOT NULL,
  `node_stake` decimal(27,18) DEFAULT '0.000000000000000000',
  `commit_any_epoch` int unsigned DEFAULT '0',
  `commit_1st_epoch` int unsigned DEFAULT '0',
  `estimated_earnings_any_epoch` decimal(27,18) DEFAULT '0.000000000000000000',
  `estimated_earnings_1st_epoch_only` decimal(27,18) DEFAULT '0.000000000000000000',
  `payouts` decimal(27,18) DEFAULT '0.000000000000000000',
  `proofs_submitted` int unsigned DEFAULT '0',
  `ask` decimal(27,18) DEFAULT '0.000000000000000000',
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`),
  KEY `block_date` (`block_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `stats_pub`
--

DROP TABLE IF EXISTS `stats_pub`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `stats_pub` (
  `block_date` date NOT NULL,
  `block_ts_hour` datetime NOT NULL,
  `total_size` int unsigned DEFAULT '0',
  `total_epochs` int unsigned DEFAULT '0',
  `total_bid` decimal(27,18) DEFAULT '0.000000000000000000',
  `total_pubs` int unsigned DEFAULT '0',
  `total_trac_spent` decimal(27,18) DEFAULT '0.000000000000000000',
  `private_pubs` int unsigned DEFAULT '0',
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`block_date`,`block_ts_hour`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sync_status`
--

DROP TABLE IF EXISTS `sync_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sync_status` (
  `parameter` varchar(255) DEFAULT NULL,
  `block_num` int DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_approval`
--

DROP TABLE IF EXISTS `token_approval`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_approval` (
  `owner` char(42) DEFAULT NULL,
  `spender` char(42) DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_token_approval_contract_id` (`contract_id`),
  CONSTRAINT `fk_token_approval_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_transfer`
--

DROP TABLE IF EXISTS `token_transfer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_transfer` (
  `from` char(42) DEFAULT NULL,
  `to` char(42) DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_token_transfer_contract_id` (`contract_id`),
  CONSTRAINT `fk_token_transfer_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_tx`
--

DROP TABLE IF EXISTS `token_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `transfer_to` char(42) DEFAULT NULL,
  `transfer_amount` decimal(27,0) DEFAULT NULL,
  `transfer_from_from` char(42) DEFAULT NULL,
  `transfer_from_to` char(42) DEFAULT NULL,
  `transfer_from_amount` decimal(27,0) DEFAULT NULL,
  `allowance_owner` char(42) DEFAULT NULL,
  `allowance_spender` char(42) DEFAULT NULL,
  `approve_spender` char(42) DEFAULT NULL,
  `approve_amount` decimal(27,0) DEFAULT NULL,
  `mint_to` char(42) DEFAULT NULL,
  `mint_amount` decimal(27,0) DEFAULT NULL,
  `decrease_allowance_subtracted_value` decimal(27,0) DEFAULT NULL,
  `increase_allowance_added_value` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `increase_allowance_spender_id` tinyint unsigned DEFAULT NULL,
  `decrease_allowance_spender_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_token_tx_contract_id` (`to_id`),
  KEY `fk_token_tx_increase_allowance_spender_id` (`increase_allowance_spender_id`),
  KEY `fk_token_tx_decrease_allowance_spender_id` (`decrease_allowance_spender_id`),
  CONSTRAINT `fk_token_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_token_tx_decrease_allowance_spender_id` FOREIGN KEY (`decrease_allowance_spender_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_token_tx_increase_allowance_spender_id` FOREIGN KEY (`increase_allowance_spender_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Temporary view structure for view `v_asset_history`
--

DROP TABLE IF EXISTS `v_asset_history`;
/*!50001 DROP VIEW IF EXISTS `v_asset_history`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_asset_history` AS SELECT 
 1 AS `event`,
 1 AS `token_id`,
 1 AS `asset_contract`,
 1 AS `log_index`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `address`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `block_ts`,
 1 AS `block_date`,
 1 AS `block_ts_hour`,
 1 AS `minted_state`,
 1 AS `minted_keyword`,
 1 AS `minted_hash_function_id`,
 1 AS `minted_start_time`,
 1 AS `minted_epochs_number`,
 1 AS `minted_epoch_length`,
 1 AS `minted_token_amount`,
 1 AS `minted_size`,
 1 AS `minted_triples_number`,
 1 AS `minted_chunks_number`,
 1 AS `transfer_from`,
 1 AS `transfer_to`,
 1 AS `state_updated_state_index`,
 1 AS `state_updated_update_token_amount`,
 1 AS `state_updated_finalized`,
 1 AS `update_cancelled_state_index`,
 1 AS `update_cancelled_returned_token_amount`,
 1 AS `storing_period_extended_epochs_number`,
 1 AS `storing_period_extended_token_amount`,
 1 AS `asset_update_payment_increased_token_amount`,
 1 AS `payment_increased_token_amount`,
 1 AS `burnt_returned_token_amount`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes`
--

DROP TABLE IF EXISTS `v_nodes`;
/*!50001 DROP VIEW IF EXISTS `v_nodes`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `createProfile_adminWallet`,
 1 AS `createProfile_adminWallet_hash`,
 1 AS `current_adminWallet_hashes`,
 1 AS `createProfile_blockNumber`,
 1 AS `createProfile_txHash`,
 1 AS `createProfile_ts`,
 1 AS `createProfile_date`,
 1 AS `nodeAgeDays`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_activity_last1min`
--

DROP TABLE IF EXISTS `v_nodes_activity_last1min`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last1min`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_activity_last1min` AS SELECT 
 1 AS `chain_id`,
 1 AS `nodeId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_activity_last24h`
--

DROP TABLE IF EXISTS `v_nodes_activity_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_activity_last24h` AS SELECT 
 1 AS `chain_id`,
 1 AS `nodeId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_barebone`
--

DROP TABLE IF EXISTS `v_nodes_barebone`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_barebone`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_barebone` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `createProfile_adminWallet`,
 1 AS `createProfile_adminWallet_hash`,
 1 AS `current_adminWallet_hashes`,
 1 AS `createProfile_blockNumber`,
 1 AS `createProfile_txHash`,
 1 AS `createProfile_ts`,
 1 AS `createProfile_date`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stake`
--

DROP TABLE IF EXISTS `v_nodes_stake`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stake`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stake` AS SELECT 
 1 AS `nodeId`,
 1 AS `date`,
 1 AS `nodeStake`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_daily`
--

DROP TABLE IF EXISTS `v_nodes_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_daily` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_daily`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_daily`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_daily` AS SELECT 
 1 AS `date`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_hourly_7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_hourly_7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_hourly_7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_hourly_7d` AS SELECT 
 1 AS `date`,
 1 AS `datetime`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_monthly`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_monthly` AS SELECT 
 1 AS `date`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_total`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_total`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_total`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_total` AS SELECT 
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `proofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_hourly_7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_hourly_7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_hourly_7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_hourly_7d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `datetime`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last1h`
--

DROP TABLE IF EXISTS `v_nodes_stats_last1h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last1h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last1h` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last24h`
--

DROP TABLE IF EXISTS `v_nodes_stats_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last24h` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last30d`
--

DROP TABLE IF EXISTS `v_nodes_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last30d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last7d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_latest`
--

DROP TABLE IF EXISTS `v_nodes_stats_latest`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_latest`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_latest` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_monthly`
--

DROP TABLE IF EXISTS `v_nodes_stats_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_monthly` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs`
--

DROP TABLE IF EXISTS `v_pubs`;
/*!50001 DROP VIEW IF EXISTS `v_pubs`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs` AS SELECT 
 1 AS `contract_address`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `UAL`,
 1 AS `chain_id`,
 1 AS `chain_name`,
 1 AS `size`,
 1 AS `triples_number`,
 1 AS `chunks_number`,
 1 AS `hash_function_id`,
 1 AS `epochs_number`,
 1 AS `epoch_length`,
 1 AS `epoch_length_days`,
 1 AS `token_amount`,
 1 AS `bid`,
 1 AS `transaction_hash`,
 1 AS `transaction_index`,
 1 AS `block_number`,
 1 AS `block_timestamp`,
 1 AS `block_ts`,
 1 AS `block_date`,
 1 AS `block_ts_hour`,
 1 AS `state_index`,
 1 AS `state`,
 1 AS `previous_states`,
 1 AS `publisher`,
 1 AS `publisher_short`,
 1 AS `owner`,
 1 AS `winners`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_activity_last1min`
--

DROP TABLE IF EXISTS `v_pubs_activity_last1min`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last1min`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_activity_last1min` AS SELECT 
 1 AS `chain_id`,
 1 AS `signer`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_activity_last24h`
--

DROP TABLE IF EXISTS `v_pubs_activity_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_activity_last24h` AS SELECT 
 1 AS `chain_id`,
 1 AS `signer`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_daily`
--

DROP TABLE IF EXISTS `v_pubs_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_daily` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_hourly`
--

DROP TABLE IF EXISTS `v_pubs_stats_hourly`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_hourly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_hourly` AS SELECT 
 1 AS `date`,
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last1h`
--

DROP TABLE IF EXISTS `v_pubs_stats_last1h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last1h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last1h` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last24h`
--

DROP TABLE IF EXISTS `v_pubs_stats_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last24h` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last30d`
--

DROP TABLE IF EXISTS `v_pubs_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last30d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last7d`
--

DROP TABLE IF EXISTS `v_pubs_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last7d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_monthly`
--

DROP TABLE IF EXISTS `v_pubs_stats_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_monthly` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_total`
--

DROP TABLE IF EXISTS `v_pubs_stats_total`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_total`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_total` AS SELECT 
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_notif_contracts_change`
--

DROP TABLE IF EXISTS `v_sys_notif_contracts_change`;
/*!50001 DROP VIEW IF EXISTS `v_sys_notif_contracts_change`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_notif_contracts_change` AS SELECT 
 1 AS `block_date`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_date`
--

DROP TABLE IF EXISTS `v_sys_staging_date`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_date`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_date` AS SELECT 
 1 AS `number`,
 1 AS `timestamp`,
 1 AS `block_date`,
 1 AS `block_ts`,
 1 AS `block_ts_hour`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_commit_submitted`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_commit_submitted`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_commit_submitted`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_commit_submitted` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `identity_id`,
 1 AS `keyword`,
 1 AS `hash_function_id`,
 1 AS `epoch`,
 1 AS `score`,
 1 AS `state_index`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `contract_id`,
 1 AS `block_number`,
 1 AS `timestamp`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_proof_submitted`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_proof_submitted`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_proof_submitted`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_proof_submitted` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `epoch`,
 1 AS `identity_id`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `contract_id`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `value`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_pub`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_pub`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_pub`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_pub` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `size`,
 1 AS `triples_number`,
 1 AS `chunks_number`,
 1 AS `hash_function_id`,
 1 AS `epochs_number`,
 1 AS `epoch_length`,
 1 AS `token_amount`,
 1 AS `bid`,
 1 AS `transaction_hash`,
 1 AS `transaction_index`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `state_index`,
 1 AS `state`,
 1 AS `previous_states`,
 1 AS `from`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_update_dead`
--

DROP TABLE IF EXISTS `v_sys_staging_update_dead`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_update_dead`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_update_dead` AS SELECT 
 1 AS `sync_delta`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_sync_date`
--

DROP TABLE IF EXISTS `v_sys_sync_date`;
/*!50001 DROP VIEW IF EXISTS `v_sys_sync_date`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_sync_date` AS SELECT 
 1 AS `number`,
 1 AS `timestamp`,
 1 AS `block_date`,
 1 AS `block_ts`,
 1 AS `block_ts_hour`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_tx_all`
--

DROP TABLE IF EXISTS `v_tx_all`;
/*!50001 DROP VIEW IF EXISTS `v_tx_all`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_tx_all` AS SELECT 
 1 AS `block_number`,
 1 AS `hash`,
 1 AS `table`*/;
SET character_set_client = @saved_cs_client;

--
-- Dumping events for database 'sync_otp_mainnet'
--
/*!50106 SET @save_time_zone= @@TIME_ZONE */ ;
/*!50106 DROP EVENT IF EXISTS `update_staging_tables` */;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8mb4 */ ;;
/*!50003 SET character_set_results = utf8mb4 */ ;;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `update_staging_tables` ON SCHEDULE EVERY 30 SECOND STARTS '2023-07-04 08:54:21' ON COMPLETION NOT PRESERVE ENABLE DO CALL sp_update_staging() */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
DELIMITER ;
/*!50106 SET TIME_ZONE= @save_time_zone */ ;

--
-- Dumping routines for database 'sync_otp_mainnet'
--
/*!50003 DROP PROCEDURE IF EXISTS `sp_clear_all_tables` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_clear_all_tables`(IN procedure_input varchar(250))
BEGIN
    IF procedure_input = 'just do it' THEN
        DELETE FROM `contracts`;
        DELETE FROM `sync_status`;
        DELETE FROM `block`;
        DELETE FROM `other_tx`;
		DELETE FROM `assertion_tx`;
		DELETE FROM `assertion_assertion_created`;
		DELETE FROM `commit_manager_v1_tx`;
		DELETE FROM `commit_manager_v1_commit_submitted`;
		DELETE FROM `commit_manager_v1_u1_tx`;
		DELETE FROM `commit_manager_v1_u1_commit_submitted`;
        DELETE FROM `commit_manager_v1_u1_state_finalized`;
		DELETE FROM `content_asset_tx`;
		DELETE FROM `content_asset_asset_burnt`;
		DELETE FROM `content_asset_asset_minted`;
		DELETE FROM `content_asset_payment_increased`;
		DELETE FROM `content_asset_asset_state_updated`;
		DELETE FROM `content_asset_asset_state_update_canceled`;
		DELETE FROM `content_asset_asset_storing_period_extended`;
		DELETE FROM `content_asset_asset_update_payment_increased`;
		DELETE FROM `hub_tx`;
		DELETE FROM `hub_new_contract`;
		DELETE FROM `hub_asset_storage_changed`;
		DELETE FROM `hub_contract_changed`;
		DELETE FROM `hub_new_asset_storage`;
		DELETE FROM `identity_tx`;
		DELETE FROM `identity_identity_created`;
		DELETE FROM `identity_identity_deleted`;
		DELETE FROM `identity_storage_tx`;
		DELETE FROM `identity_storage_key_added`;
		DELETE FROM `identity_storage_key_removed`;
		DELETE FROM `profile_tx`;
		DELETE FROM `profile_ask_updated`;
		DELETE FROM `profile_profile_created`;
		DELETE FROM `profile_profile_deleted`;
		DELETE FROM `proof_manager_v1_tx`;
		DELETE FROM `proof_manager_v1_proof_submitted`;
		DELETE FROM `proof_manager_v1_u1_tx`;
		DELETE FROM `proof_manager_v1_u1_proof_submitted`;
		DELETE FROM `staking_tx`;
		DELETE FROM `staking_accumulated_operator_fee_increased`;
		DELETE FROM `staking_accumulated_operator_fee_updated`;
		DELETE FROM `staking_stake_increased`;
		DELETE FROM `staking_stake_withdrawal_started`;
		DELETE FROM `staking_stake_withdrawn`;
        DELETE FROM `staking_reward_added`;
		DELETE FROM `sharding_table_tx`;
		DELETE FROM `sharding_table_node_added`;
		DELETE FROM `sharding_table_node_removed`;
		DELETE FROM `service_agreement_v1_tx`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_created`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_extended`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_reward_raised`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_terminated`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_update_reward_raised`;
		DELETE FROM `service_agreement_v1_proof_submitted`;
        DELETE FROM `service_agreement_v1_commit_submitted`;
		DELETE FROM `token_tx`;
		DELETE FROM `token_approval`;
		DELETE FROM `token_transfer`;
        
        -- Output a success message
        SELECT 'Data deleted successfully.';
    ELSE
        -- Output a message if the input does not match the condition
        SELECT 'Invalid procedure input.';
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_delete_from_tables_starting_block` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delete_from_tables_starting_block`(IN block_num int)
BEGIN
	
    DELETE FROM `block` where `number`>=block_num;
	DELETE FROM `other_tx` where block_number >= block_num;
	DELETE FROM `assertion_tx` where block_number >= block_num;
	DELETE FROM `assertion_assertion_created` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_tx` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_commit_submitted` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_u1_tx` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_u1_commit_submitted` where block_number >= block_num;
    DELETE FROM `commit_manager_v1_u1_state_finalized` where block_number >= block_num;
	DELETE FROM `content_asset_tx` where block_number >= block_num;
	DELETE FROM `content_asset_asset_burnt` where block_number >= block_num;
	DELETE FROM `content_asset_asset_minted` where block_number >= block_num;
	DELETE FROM `content_asset_payment_increased` where block_number >= block_num;
	DELETE FROM `content_asset_asset_state_updated` where block_number >= block_num;
	DELETE FROM `content_asset_asset_state_update_canceled` where block_number >= block_num;
	DELETE FROM `content_asset_asset_storing_period_extended` where block_number >= block_num;
	DELETE FROM `content_asset_asset_update_payment_increased` where block_number >= block_num;
	DELETE FROM `hub_tx` where block_number >= block_num;
	DELETE FROM `hub_new_contract` where block_number >= block_num;
	DELETE FROM `hub_asset_storage_changed` where block_number >= block_num;
	DELETE FROM `hub_contract_changed` where block_number >= block_num;
	DELETE FROM `hub_new_asset_storage` where block_number >= block_num;
	DELETE FROM `identity_tx` where block_number >= block_num;
	DELETE FROM `identity_identity_created` where block_number >= block_num;
	DELETE FROM `identity_identity_deleted` where block_number >= block_num;
	DELETE FROM `identity_storage_tx` where block_number >= block_num;
	DELETE FROM `identity_storage_key_added` where block_number >= block_num;
	DELETE FROM `identity_storage_key_removed` where block_number >= block_num;
	DELETE FROM `profile_tx` where block_number >= block_num;
	DELETE FROM `profile_ask_updated` where block_number >= block_num;
	DELETE FROM `profile_profile_created` where block_number >= block_num;
	DELETE FROM `profile_profile_deleted` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_tx` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_proof_submitted` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_u1_tx` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_u1_proof_submitted` where block_number >= block_num;
	DELETE FROM `staking_tx` where block_number >= block_num;
	DELETE FROM `staking_accumulated_operator_fee_increased` where block_number >= block_num;
	DELETE FROM `staking_accumulated_operator_fee_updated` where block_number >= block_num;
	DELETE FROM `staking_stake_increased` where block_number >= block_num;
	DELETE FROM `staking_stake_withdrawal_started` where block_number >= block_num;
	DELETE FROM `staking_stake_withdrawn` where block_number >= block_num;
    DELETE FROM `staking_reward_added` where block_number >= block_num;
	DELETE FROM `sharding_table_tx` where block_number >= block_num;
	DELETE FROM `sharding_table_node_added` where block_number >= block_num;
	DELETE FROM `sharding_table_node_removed` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_tx` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_created` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_extended` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_reward_raised` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_terminated` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_update_reward_raised` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_proof_submitted` where block_number >= block_num;
    DELETE FROM `service_agreement_v1_commit_submitted` where block_number >= block_num;
	DELETE FROM `token_tx` where block_number >= block_num;
	DELETE FROM `token_approval` where block_number >= block_num;
	DELETE FROM `token_transfer` where block_number >= block_num;
    DELETE FROM `content_asset_storage_transfer` where block_number >= block_num;
    DELETE FROM `content_asset_storage_tx` where block_number >= block_num;
    update sync_status set block_num = (block_num-1) where parameter = 'last_synced_block';

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_list_contracts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_list_contracts`(IN b1 int, IN win int)
BEGIN
#SET @b1 = 3151717;
#SET @win = 100;    
with 
new_and_changed as (
select contract_name, block_number, new_contract_address from hub_new_contract
UNION ALL select contract_name, block_number, new_contract_address from hub_contract_changed
UNION ALL select contract_name, block_number, new_contract_address  from hub_new_asset_storage
UNION ALL select contract_name, block_number, new_contract_address  from hub_asset_storage_changed
),

cte_a as (SELECT 
row_number() over (partition by contract_name order by block_number desc) as rn
, case when b1 <= block_number then 1 else 0 end as 'range_starts_before'
, case when b1 + win > block_number then 1 else 0 end as 'range_ends_after'
, contract_name, new_contract_address as 'contract_address', block_number
from new_and_changed
where block_number < b1 + win
),

cte_b as (select 
case 
    when range_starts_before = 1 and range_ends_after = 1 then 'block_range_hit_new_contract'
    when rn = 1 then 'latest_contract'
    end as 'label'
,block_number,contract_name,contract_address#, rn, range_starts_before, range_ends_after
from cte_a),

cte_c as (
select 
contract_address
,contract_name
,case when Lead(`label`,1) over (partition by contract_name order by block_number) = 'block_range_hit_new_contract' or `label` in ('latest_contract','block_range_hit_new_contract') then 1 else 0 end as 'final'
,Lead(`label`,1) over (partition by contract_name order by block_number) as 'p'
,`label`
,block_number
from cte_b
),

cte_d as (
select distinct contract_address,contract_name from (
select contract_address,contract_name from cte_c where final=1) as t 
UNION select contract_address, 'Hub' from contracts where contract_id=1
)

select a.contract_address, a.contract_name, b.contract_id
from cte_d as a
left join contracts as b on a.contract_address=b.contract_address
;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_standard_modification_event` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_standard_modification_event`(IN tableName varchar(255))
BEGIN

SET @q = CONCAT('DROP INDEX `PRIMARY` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('DROP INDEX `idx_block_num` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName, ' add column contract_id tinyint UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;
                 
SET @q = CONCAT('UPDATE ', tableName, ' as a JOIN contracts as b ON a.address = b.contract_address SET a.contract_id = b.contract_id');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ',tableName, ' ADD CONSTRAINT fk_',right(tableName,49),'_contract_id FOREIGN KEY (contract_id) REFERENCES contracts (contract_id)');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
            'ALTER TABLE ', tableName,
            ' DROP COLUMN `event`,',
            ' DROP COLUMN `transaction_hash`,',
            ' DROP COLUMN `block_hash`,',
            ' DROP COLUMN `block_ts`,',
            ' DROP COLUMN `block_date`,',
            ' DROP COLUMN `block_ts_hour`,',
            ' DROP COLUMN `updated_at`,',
            ' DROP COLUMN `created_at`,',
            ' DROP COLUMN `block_timestamp`,',
            ' MODIFY COLUMN `log_index` SMALLINT UNSIGNED,',
            ' MODIFY COLUMN `transaction_index` SMALLINT UNSIGNED,',
            ' MODIFY COLUMN `block_number` INT UNSIGNED,',
			' DROP COLUMN `address`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_standard_modification_tx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_standard_modification_tx`(IN tableName varchar(255))
BEGIN

SET @q = CONCAT('DROP INDEX `PRIMARY` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('DROP INDEX `idx_block_num` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'ALTER TABLE ', tableName,
    ' DROP COLUMN `block_hash`,',
    ' DROP COLUMN `input`,',
    ' DROP COLUMN `nonce`,',
    ' DROP COLUMN `public_key`,',
    ' DROP COLUMN `r`,',
    ' DROP COLUMN `raw`,',
    ' DROP COLUMN `s`,',
    ' DROP COLUMN `standard_v`,',
    ' DROP COLUMN `type`,',
    ' DROP COLUMN `v`,',
    ' DROP COLUMN `value`,',
    ' DROP COLUMN `block_ts`,',
    ' DROP COLUMN `block_date`,',
    ' DROP COLUMN `block_ts_hour`,',
    ' DROP COLUMN `created_at`,',
    ' DROP COLUMN `block_timestamp`,',
    ' DROP COLUMN `updated_at`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName,' ADD COLUMN to_id TINYINT UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'UPDATE ', tableName, ' AS a',
    ' JOIN contracts AS b ON a.`to` = b.contract_address',
    ' SET a.to_id = b.contract_id');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ',tableName, ' ADD CONSTRAINT fk_',right(tableName,49),'_contract_id FOREIGN KEY (`to_id`) REFERENCES contracts (contract_id)');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName, ' DROP COLUMN `to`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'ALTER TABLE ', tableName,
    ' MODIFY COLUMN `block_number` INT UNSIGNED,',
    ' MODIFY COLUMN `chain_id` SMALLINT UNSIGNED,',
    ' MODIFY COLUMN `creates` CHAR(42),',
    ' MODIFY COLUMN `from` CHAR(42),',
    ' MODIFY COLUMN `gas` INT UNSIGNED,',
    ' MODIFY COLUMN `gas_price` INT UNSIGNED,',
    ' MODIFY COLUMN `hash` CHAR(66),',
    ' MODIFY COLUMN `transaction_index` SMALLINT UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_update_contracts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_update_contracts`()
BEGIN
INSERT INTO `contracts` (contract_address)
WITH
all_contacts as (
select distinct contract_address from (
SELECT contract_address from contracts
UNION ALL SELECT new_contract_address from hub_new_asset_storage
UNION ALL SELECT new_contract_address from hub_new_contract
UNION ALL SELECT new_contract_address from hub_contract_changed 
UNION ALL SELECT new_contract_address from hub_asset_storage_changed) as a),

new_contracts as (
select a.contract_address from all_contacts as a
left join contracts as b on a.contract_address=b.contract_address
where b.contract_address is null)

select contract_address from new_contracts;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_update_staging` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_update_staging`()
BEGIN
    -- Declare a handler for exceptions
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
		GET DIAGNOSTICS CONDITION 1
		@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
		SELECT @p1 as RETURNED_SQLSTATE  , @p2 as MESSAGE_TEXT;
	
        -- Handle the error here, rollback the transaction, log, etc.
        ROLLBACK;
    END;

START TRANSACTION;
SET @staging = (select block_num from sync_status where parameter ='staging_table' FOR UPDATE);#UNCOMMENT
SET @sync = (select block_num from sync_status where parameter ='last_synced_block' FOR UPDATE);   

SET @stats_start_window = (select block_ts_hour from v_sys_staging_date FOR UPDATE);
SET @stats_start_window_date = (select block_date from v_sys_staging_date FOR UPDATE); 
SET @stats_end_window = (select block_ts_hour from v_sys_sync_date FOR UPDATE);
SET @stats_end_window_date = (select block_date from v_sys_sync_date FOR UPDATE);
SET SESSION group_concat_max_len = 1000000;
#select @stats_start_window
#select @stats_end_window 
COMMIT;


#if i have new date to put into staging tables
IF @staging < @sync THEN
	START TRANSACTION;

	#insert all proofs
	INSERT INTO `staging_proof_submitted` #insert new submit proof rows into staging table
	(asset_contract_id, token_id, keyword, epoch, identity_id
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp ,`value`)
	select * from v_sys_staging_insert_new_proof_submitted where block_number>@staging and block_number<=@sync;
   
	#insert all submit commit for state_index=0, commits for for state_index>0 are excluded from here
	INSERT INTO `staging_commit_submitted` #insert new submit commit rows into staging table
	(asset_contract_id, token_id, identity_id, keyword, hash_function_id, epoch, score, state_index
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp)
	select * from v_sys_staging_insert_new_commit_submitted where block_number>@staging and block_number<=@sync;
  
	#insert all new pubs
	INSERT INTO `staging_pub` #insert new pub rows into staging table
	(asset_contract_id, token_id, keyword, size, triples_number, chunks_number, hash_function_id
	, epochs_number, epoch_length, token_amount,bid, transaction_hash, transaction_index, block_number
	, block_timestamp,state_index, state, previous_states, `from`)
	select * from v_sys_staging_insert_new_pub where block_number>@staging and block_number<=@sync;
    

    
	#update owner, grab latest owner of the asset and update value in staging table
	with
	owner_1 as (select token_id, contract_id, `to` as 'owner'
	,row_number() over (partition by token_id, contract_id order by block_number desc, transaction_index desc) as rn
	from content_asset_storage_transfer
	where block_number>@staging and block_number<=@sync   ),
	owner_2 as (select token_id,contract_id, `owner` from owner_1 where rn=1)

	update staging_pub as a
	INNER JOIN owner_2 as b on a.asset_contract_id=b.contract_id and a.token_id=b.token_id
	set a.`owner`=b.`owner`;
   
   	
	#add new blank rows into stats_pub table
	INSERT INTO stats_pub (`block_date`, `block_ts_hour`)
	WITH
	RECURSIVE new_datetime_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_ts_hour`), interval 1 hour) FROM stats_pub), @stats_start_window) AS timestamp_val #generate timetable
	UNION ALL SELECT TIMESTAMPADD(HOUR, 1, timestamp_val) FROM new_datetime_0 
	WHERE timestamp_val < @stats_end_window)
    	
    SELECT cast(timestamp_val as date), timestamp_val FROM new_datetime_0
    where timestamp_val<=@stats_end_window;

	#grab new pubs and update stats_pub table, i do ignore change in pub proparties due to pub update here
	#these changes are too small to make a difference, but it's significantly simplifies the process
	WITH
	new_pubs_data as (select 
	cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) as 'block_date'
	,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(ifnull(d.create_asset_size,0)) as 'total_size'
	,sum(a.epochs_number) as 'total_epochs'
	,sum(cast(cast(a.token_amount as decimal(45,18)) / epochs_number / 3 / (d.create_asset_size / 1024) / 1000000000000000000 as decimal(27,18))) as 'total_bid' 
	,count(token_id) as 'total_pubs'
	,cast(cast(sum(a.token_amount) as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as 'total_trac_spent'
	,sum(case when d.create_asset_size=145 then 1 else 0 end) as 'private_pubs'
	from service_agreement_v1_service_agreement_v1_created as a
	left join content_asset_tx as d on a.block_number=d.block_number and a.transaction_index=d.transaction_index
	left join `block` as bb on a.block_number=bb.`number`
	where a.block_number>@staging and a.block_number<=@sync
	group by 
	cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)
	,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00'))

	update stats_pub as a
	INNER JOIN new_pubs_data as b on a.`block_date`=b.`block_date` and a.`block_ts_hour`=b.`block_ts_hour`
	set
		a.total_size = a.total_size + b.total_size,
		a.total_epochs = a.total_epochs + b.total_epochs,
		a.total_bid = a.total_bid + b.total_bid,
		a.total_pubs = a.total_pubs + b.total_pubs,
		a.total_trac_spent = a.total_trac_spent + b.total_trac_spent,
		a.private_pubs = a.private_pubs + b.private_pubs;

  
	#insert new blank rows into node_stat table
	INSERT INTO stats_node (`identity_id`, `block_date`)
	WITH 
    RECURSIVE new_date_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_date`), interval 1 day) FROM stats_node), @stats_start_window_date)  AS date_val 
    UNION ALL SELECT DATE_ADD(date_val, INTERVAL 1 DAY) FROM new_date_0 
    WHERE date_val < @stats_end_window_date),
	
	identities as (select a.identity_id, cast(convert_tz(from_unixtime(`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) as 'block_date'
	from profile_profile_created as a 
    left join `block` as bb on a.block_number=bb.`number` where a.block_number<=@sync),
	new_date_2 as (SELECT a.identity_id, b.date_val  FROM identities as a CROSS JOIN new_date_0 as b WHERE b.date_val >= a.block_date)
    
    select identity_id , date_val as 'block_date' from new_date_2 where date_val <= @stats_end_window_date;
     
	#in case we have finalized updates for assets i'd need to update pubs table with new values and also update previous_states column
	# and update submit commits staging
	IF (select count(block_number) from commit_manager_v1_u1_state_finalized where block_number>@staging and block_number<=@sync) > 0 THEN
		with
		finalized_updates as (select 
		a.asset_contract_id,a.token_id,a.keyword
		,ifnull(d.update_asset_state_size,0) as `size`
        ,ifnull(d.update_asset_state_triples_number,0) as `triples_number`
        ,ifnull(d.update_asset_state_chunks_number,0) as `chunks_number`
		,a.hash_function_id
		,cast(cast(ifnull(d.update_asset_state_update_token_amount,0) as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as token_amount
		,d.`hash` as 'transaction_hash',b.transaction_index,b.block_number,bb.`timestamp` as 'block_timestamp'
		,a.state,a.state_index
		,row_number() over (partition by a.token_id, a.asset_contract_id order by a.state_index desc) as rn
		from commit_manager_v1_u1_state_finalized as a
		left join content_asset_asset_state_updated as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.state_index=b.state_index
		left join `block` as bb on b.block_number=bb.`number`
        left join content_asset_tx as d on b.block_number=d.block_number and b.transaction_index=d.transaction_index
        where a.block_number>@staging and a.block_number<=@sync),

		updates_except_latest_grp as (select asset_contract_id ,token_id,sum(token_amount) as 'token_amount'
		,group_concat(concat(',["state_idx":',state_index, ',"state":"',state,
							'","size":',size, ',"triples":',triples_number,
							',"chunks":',chunks_number, ',"hash_f":',hash_function_id,
							',"tokens":',token_amount, ',"tx_hash":"',transaction_hash,
							'","block":',block_number,',"block_ts_u":',block_timestamp,
							',"block_ts":"',convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),
							'"]') order by state_index asc) as `previous_states`
		from finalized_updates where rn>1
        group by asset_contract_id,token_id),

		data_to_update_pubs as (select a.asset_contract_id,a.token_id,a.size,a.triples_number,a.chunks_number,a.hash_function_id
		,a.token_amount + ifnull(b.token_amount,0) as token_amount,a.state_index, a.state,b.previous_states
		from finalized_updates as a
		left join updates_except_latest_grp as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id where a.rn=1)
		
        #updateing staging_pub with new post asset update values 
		update staging_pub as a
			INNER JOIN data_to_update_pubs as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
		SET
			a.previous_states = 
                CONCAT(ifnull(a.previous_states,''),
						(case when a.previous_states is not null then ',' else '' end),
                        '["state_idx":',a.state_index, ',"state":"',a.state,
						'","size":',a.size, ',"triples":',a.triples_number,
						',"chunks":',a.chunks_number, ',"hash_f":',a.hash_function_id,
						',"tokens":',a.token_amount, ',"tx_hash":"',a.transaction_hash,
						'","block":',a.block_number,',"block_tsu":',a.block_timestamp,
						',"block_ts":"',convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'"]',
                        ifnull(b.previous_states,''))
			,a.size = b.size,a.triples_number = b.triples_number
			,a.chunks_number = b.chunks_number,a.hash_function_id = b.hash_function_id
			,a.token_amount = a.token_amount+b.token_amount,a.state_index = b.state_index,a.state = b.state;

		#staging_pub is updated according to finalized pub data
        #but before i remove irrelevant commits from staging_commit_submitted i need to adjust stats_node table
        #and remove these commits stats
        WITH
        affected_commits as (
        select distinct asset_contract_id, token_id, epoch
        from commit_manager_v1_u1_state_finalized
		where block_number>@staging and block_number<=@sync),
        
        commit_stats_to_subtract_updated_pubs as ( select 
		b.identity_id,b.block_date
		,sum(b.commit_any_epoch) as 'commit_any_epoch'
		,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
		,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
		,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
		from affected_commits as a
		inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch
		group by b.identity_id, b.block_date)
        
    
        update stats_node as a
        inner join commit_stats_to_subtract_updated_pubs as b
        on a.block_date=b.block_date and a.identity_id=b.identity_id
        set
			a.commit_any_epoch = a.commit_any_epoch - ifnull(b.commit_any_epoch,0),
            a.commit_1st_epoch = a.commit_1st_epoch - ifnull(b.commit_1st_epoch,0),
            a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - ifnull(b.estimated_earnings_any_epoch,0),
            a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - ifnull(b.estimated_earnings_1st_epoch_only,0);
				
        #removing submitCommits for previous state index, they are no longer valid as this token_id-epoch could have different winners
        delete a from staging_commit_submitted as a
        INNER JOIN (select distinct asset_contract_id, token_id, epoch
					from commit_manager_v1_u1_state_finalized
					where block_number>@staging and block_number<=@sync) as b 
					ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch;
		
	END IF;
	 
	#adding latest submitCommits for updated assets
	INSERT INTO `staging_commit_submitted` 
	(asset_contract_id, token_id, identity_id, keyword, hash_function_id, epoch, score, state_index
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp)
	with
	post_update_commits as (select
	a.asset_contract_id, a.token_id, identity_id, keyword, hash_function_id, a.epoch, a.score
	,a.transaction_index, d.`hash` as 'transaction_hash', a.contract_id, a.block_number, bb.`timestamp` as 'block_timestamp'
	,dense_rank() over (partition by a.token_id, a.asset_contract_id, a.epoch order by a.state_index desc) as dr, a.state_index
	from commit_manager_v1_u1_commit_submitted as a
	left join `block` as bb on a.block_number=bb.`number`
	left join commit_manager_v1_u1_tx as d on a.block_number=d.block_number and a.transaction_index=d.transaction_index    
	where a.state_index>0 and a.block_number>@staging and a.block_number<=@sync),
	
	post_update_commits_latest as (select
	a.asset_contract_id, a.token_id, a.identity_id, a.keyword, a.hash_function_id, a.epoch, a.score, a.state_index
	,a.transaction_index, a.transaction_hash, a.contract_id, a.block_number, a.block_timestamp
	from post_update_commits as a where a.dr=1)
	select * from post_update_commits_latest;
    
	
    #before i update staging_commit_submitted i need to substract old values from stats table, then update staging_commit_submitted, then add new stats values
	WITH
    pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized 
    where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted 
    where block_number>@staging),
    
    commit_stats_to_subtract_updated_pubs as (select
	b.identity_id,b.block_date
	,sum(b.commit_any_epoch) as 'commit_any_epoch'
	,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch 
    group by b.identity_id,b.block_date)
    
	update stats_node as a
	inner join commit_stats_to_subtract_updated_pubs as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.commit_any_epoch = a.commit_any_epoch - ifnull(b.commit_any_epoch,0),
		a.commit_1st_epoch = a.commit_1st_epoch - ifnull(b.commit_1st_epoch,0),
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - ifnull(b.estimated_earnings_any_epoch,0),
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - ifnull(b.estimated_earnings_1st_epoch_only,0);
   
       
	#updating earnings in staging_commit_submitted
	WITH
	pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted where block_number>@staging), #need to update commits as new commits for this assets arrived
    
    pubs_to_update_token_amount as (select 
	a.asset_contract_id,a.token_id, cast(a.token_amount as decimal(27,18)) as 'token_amount'
	,a.epochs_number
	from staging_pub as a
	INNER JOIN (select distinct asset_contract_id, token_id from pubs_epochs_to_update) as b ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id),
   
    #adding earnings to commits
	update_commits_0 as (select
	a.asset_contract_id,a.token_id, a.block_number, a.transaction_index
	,row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc, block_number asc, transaction_index asc) as `rank`
	,case when (row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc,block_number asc, transaction_index asc)) <= 3 
		then c.token_amount / 3 / (c.epochs_number)
		else 0 end as estimated_earnings_any_epoch
	,case when a.epoch = 0 and (row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 
		then c.token_amount / 3 / (c.epochs_number)
		else 0 end as estimated_earnings_1st_epoch_only
	,case when (row_number() over (partition by token_id, asset_contract_id,  a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 then 1
		else 0 end as commit_any_epoch 
	,case when a.epoch = 0 and (row_number() over (partition by token_id, asset_contract_id,  a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 then 1
		else 0 end as commit_1st_epoch
	,1 as commit_any_epoch_incl_out_of_top3
	,case when a.epoch = 0 then 1 else 0 end as commit_1st_epoch_incl_out_of_top3
	from staging_commit_submitted as a
	INNER JOIN pubs_epochs_to_update as b ON a.asset_contract_id=b.asset_contract_id and a.token_id=b.token_id and a.epoch=b.epoch
	left join pubs_to_update_token_amount as c on a.asset_contract_id=c.asset_contract_id and a.token_id=c.token_id)


	#update commits records
	update staging_commit_submitted as a 
		INNER JOIN update_commits_0 as b
			ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.block_number=b.block_number and a.transaction_index=b.transaction_index
	SET
	a.`rank` = b.`rank`,
	a.`estimated_earnings_any_epoch` = b.`estimated_earnings_any_epoch`,
	a.`estimated_earnings_1st_epoch_only` = b.`estimated_earnings_1st_epoch_only`,
	a.`commit_any_epoch` = b.`commit_any_epoch`,
	a.`commit_1st_epoch` = b.`commit_1st_epoch`,
	a.`commit_any_epoch_incl_out_of_top3` = b.`commit_any_epoch_incl_out_of_top3`,
	a.`commit_1st_epoch_incl_out_of_top3` = b.`commit_1st_epoch_incl_out_of_top3`; 

	
    WITH
	#now i can add new values to stats_node table
    pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized 
    where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted 
    where block_number>@staging),
    
    commit_stats_to_add_updated_pubs as (select
	b.identity_id,b.block_date
	,sum(b.commit_any_epoch) as 'commit_any_epoch'
	,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch 
    group by b.identity_id,b.block_date)
    
	update stats_node as a
	inner join commit_stats_to_add_updated_pubs as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.commit_any_epoch = a.commit_any_epoch + b.commit_any_epoch,
		a.commit_1st_epoch = a.commit_1st_epoch + b.commit_1st_epoch,
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch + b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only + b.estimated_earnings_1st_epoch_only;
   
   
   
	#if i have new proof i need to update estimated earnings in staging_commit_submitted
    #but before that i need to substract from stats table current values
	with
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id
	from staging_proof_submitted where block_number>@staging),
   
	commit_stats_to_subtract_proof_arrived as (select
	b.identity_id,b.block_date
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_identity_id_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id=b.identity_id
	group by  b.identity_id,b.block_date)
    
    update stats_node as a
	inner join commit_stats_to_subtract_proof_arrived as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - b.estimated_earnings_1st_epoch_only;

   
	# now update staging_commit_submitted with earnings from proofs
	with
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id, `value` as 'paidout'
	from staging_proof_submitted where block_number>@staging)
       
    update staging_commit_submitted as a 
		INNER JOIN pubs_epochs_identity_id_to_update as b
		ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id = b.identity_id
	SET
	a.`estimated_earnings_any_epoch` = b.paidout,
	a.`estimated_earnings_1st_epoch_only` = (case when a.epoch=0 then b.paidout else a.`estimated_earnings_1st_epoch_only` end);
   

    #now i have updated data in staging_commit_submitted, time to update stats_node table
	WITH
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id
	from staging_proof_submitted where block_number>@staging),

	commit_stats_to_add_proof_arrived as (select
	b.identity_id,b.block_date
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_identity_id_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id=b.identity_id
	group by  b.identity_id,b.block_date)
   
	update stats_node as a
	inner join commit_stats_to_add_proof_arrived as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch + b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only + b.estimated_earnings_1st_epoch_only;
   


	#updating payouts in stats_node table in case proof arrived
	with
	payouts_to_update as (select
    block_date,identity_id,sum(`value`) as paidout, count(`value`) as proofs_submitted
    from staging_proof_submitted 
    where block_number>@staging
    group by block_date, identity_id)
    
    update stats_node as a
    INNER JOIN payouts_to_update as b on a.block_date=b.block_date and a.identity_id=b.identity_id
    set a.payouts = a.payouts + b.paidout,
		a.proofs_submitted = a.proofs_submitted + b.proofs_submitted;
    
            
	#once i have updated list of winners i need to update staging_pub table
	WITH
	pubs_to_update as (
	select distinct asset_contract_id, token_id
	from commit_manager_v1_u1_state_finalized
	where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select distinct asset_contract_id,token_id 
	from staging_commit_submitted where block_number>@staging),
   
	pub_commits_1 as (select a.asset_contract_id, a.token_id, a.epoch
	,CONCAT('[',group_concat(a.identity_id order by a.identity_id),']') as winners_epoch
	from staging_commit_submitted as a
	INNER JOIN pubs_to_update as b ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
	where a.commit_any_epoch=1
	group by a.asset_contract_id, a.token_id, a.epoch),

	pub_commits_2 as (select asset_contract_id, token_id ,CONCAT('[',group_concat(winners_epoch order by epoch),']') as winners
	from pub_commits_1 group by asset_contract_id, token_id)
   
	UPDATE staging_pub as a
		INNER JOIN (select distinct asset_contract_id,token_id from staging_commit_submitted where block_number>@staging) as b
			ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
		LEFT JOIN pub_commits_2 as c
            ON a.token_id=c.token_id and a.asset_contract_id=c.asset_contract_id
	SET 
	a.winners = c.winners;
   
   
    #this block is about updateing staging_stake table
    #adding new rows (if needed) and updateing staging_stake table
    #delete from staging_stake
	INSERT INTO staging_stake (identity_id, block_date, block_ts_hour, stake_change, stake)
	WITH
	RECURSIVE new_datetime_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_ts_hour`), interval 1 hour) FROM staging_stake), @stats_start_window) AS timestamp_val #generate timetable
	UNION ALL SELECT TIMESTAMPADD(HOUR, 1, timestamp_val) FROM new_datetime_0 
	WHERE timestamp_val < @stats_end_window),
    identities as (select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	from profile_profile_created as a left join `block` as bb on a.block_number=bb.`number`),
	staking_2 as (SELECT a.identity_id, b.timestamp_val as 'block_ts_hour' FROM identities as a CROSS JOIN new_datetime_0 as b WHERE b.timestamp_val >= a.block_ts_hour)
    
	#adding new rows to staging_stake table
	select a.identity_id, cast(a.block_ts_hour as date) as 'block_date' ,a.block_ts_hour, 0 as 'stake_change', Null  as 'stake' 
    from staking_2 as a
    WHERE a.block_ts_hour<=@stats_end_window;

	WITH #summarize new stake change data by identity_id and block_ts_hour, and update staging_stake
	stake_change_1 as (
	select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(case when old_stake is null then new_stake else new_stake - old_stake end) as 'stake'  
	from staking_stake_increased as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')
	
    UNION ALL select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(reward_amount) 
	from staking_reward_added as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')
	
    UNION ALL select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,-1 * sum(withdrawn_stake_amount) 
	from staking_stake_withdrawn as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')),

	stake_change_2 as (select identity_id, cast(block_ts_hour as date) as 'block_date', block_ts_hour
	#,cast(sum(stake) / 1000000000000000000 as decimal(27,18)) as 'stake_change' from stake_change_1 
    ,cast(cast(sum(stake) as decimal (45,18)) / 1000000000000000000 as decimal(27,18)) as 'stake_change' from stake_change_1 
	group by identity_id, cast(block_ts_hour as date), block_ts_hour)
	
	UPDATE staging_stake as a
	INNER JOIN stake_change_2 as b on a.identity_id=b.identity_id and a.block_date = b.block_date and a.block_ts_hour = b.block_ts_hour
	SET a.stake_change = a.stake_change+b.stake_change;
		
    WITH
	updated_stake as (select identity_id,block_date, block_ts_hour
    ,case when FIRST_VALUE(stake) OVER (partition by identity_id order by block_ts_hour asc) is Null #covers initial population of the table
		       then SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_date, block_ts_hour)
          else FIRST_VALUE(stake) OVER (partition by identity_id order by block_ts_hour asc)
		       + SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour)
               - FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc)
          end as 'stake'
    /*,stake_change
    ,`stake` as 'stake_original'
    ,FIRST_VALUE(stake) OVER ( partition by identity_id order by block_ts_hour asc) as 'first_val_stake'
    ,FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc) as 'first_val_stake_change'
    ,SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour) AS cumulative_stake_change
    ,FIRST_VALUE(stake) OVER ( partition by identity_id order by block_ts_hour asc)
		+ SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour)
        - FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc)
        as 'stake2'*/
	from staging_stake
	where block_date>=cast(date_add(@stats_start_window,interval -1 day) as date) and block_ts_hour>=date_add(@stats_start_window,interval -1 hour))
    
	UPDATE staging_stake as a
	INNER JOIN updated_stake as b on a.identity_id=b.identity_id and a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour
	SET a.stake = b.stake;
    
    #now update Ask in staging_stake table
    #update staging_stake set ask=Null
    WITH
    ask_1 as (select 
    cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS block_date
    ,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') as block_ts_hour
    ,row_number() OVER (PARTITION BY a.identity_id,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') ORDER BY bb.`timestamp` desc )  AS rn
	,a.identity_id
	,cast(cast(a.ask as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as 'ask'
	from profile_ask_updated a 
	left join block bb on a.block_number = bb.`number`
    where a.block_number>@staging and a.block_number<=@sync),
	ask_2 as (select identity_id, block_date, block_ts_hour, ask from ask_1 where rn = 1)
    
    update staging_stake as a
    inner join ask_2 as b on a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour and a.identity_id=b.identity_id
    set a.ask=b.ask;
    
    #fill gaps in Ask table
	WITH 
    ask_3 as (SELECT identity_id,block_date,block_ts_hour,ask
	,count(ask) OVER (PARTITION BY identity_id ORDER BY block_date asc, block_ts_hour asc )  AS value_partition 
    FROM staging_stake 
    where block_date>=@stats_start_window_date and block_ts_hour>=@stats_start_window),
        
    ask_4 as (select identity_id,block_date,block_ts_hour,ask
    ,first_value(ask) OVER (PARTITION BY identity_id, value_partition ORDER BY block_date,block_ts_hour)  AS ask_result 
    from ask_3)
	
    update staging_stake as a
    inner join ask_4 as b on a.identity_id=b.identity_id and a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour
    set a.ask=b.ask_result
    where a.ask is null;

   
    #now i can update node_stats nodeStake values based on staging_stake table
    WITH 
    latest_stake_ask_0 as (select block_date,identity_id, stake, ask
    ,row_number() over (partition by block_date, identity_id order by block_ts_hour desc) as rn
    from staging_stake
    where block_date>=@stats_start_window_date and block_ts_hour>=@stats_start_window),
    latest_stake_ask_1 as (select block_date,identity_id, stake, ask from latest_stake_ask_0 where rn=1)
    
    update stats_node as a
    inner join latest_stake_ask_1 as b on a.identity_id=b.identity_id and a.block_date=b.block_date
    set a.ask = b.ask, a.node_stake=b.stake;
     

    #update sync_status with new staging block_number
    UPDATE sync_status
    SET block_num = @sync
    WHERE parameter = 'staging_table';

   COMMIT;
END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Final view structure for view `_raw_v_nodes_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_daily` AS with `nodeids_dates_0` as (select `staging_stake`.`identity_id` AS `nodeId`,`staging_stake`.`block_date` AS `date_val`,`staging_stake`.`stake` AS `stake`,row_number() OVER (PARTITION BY `staging_stake`.`identity_id`,`staging_stake`.`block_date` ORDER BY `staging_stake`.`block_ts_hour` desc )  AS `rn` from `staging_stake`), `nodeids_dates` as (select `nodeids_dates_0`.`nodeId` AS `nodeId`,`nodeids_dates_0`.`date_val` AS `date_val`,`nodeids_dates_0`.`rn` AS `rn`,`nodeids_dates_0`.`stake` AS `stake` from `nodeids_dates_0` where (`nodeids_dates_0`.`rn` = 1)), `ask_1` as (select row_number() OVER (PARTITION BY `a`.`identity_id`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) ORDER BY `bb`.`timestamp` desc )  AS `rn`,`a`.`identity_id` AS `identity_id`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,`a`.`ask` AS `ask` from (`profile_ask_updated` `a` left join `block` `bb` on((`a`.`block_number` = `bb`.`number`)))), `ask_2` as (select `ask_1`.`identity_id` AS `identity_id`,`ask_1`.`block_date` AS `block_date`,`ask_1`.`ask` AS `ask` from `ask_1` where (`ask_1`.`rn` = 1)), `node_stats_0` as (select `a`.`nodeId` AS `nodeId`,`a`.`date_val` AS `date_val`,max(`a`.`stake`) AS `nodeStake`,sum(`c`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`c`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(sum(`c`.`estimated_earnings_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `estimated_earnings_any_epoch_cum`,sum(sum(`c`.`estimated_earnings_1st_epoch_only`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `estimated_earnings_1st_epoch_only_cum`,sum(`c`.`commit_any_epoch`) AS `commit_any_epoch`,sum(sum(`c`.`commit_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `commit_any_epoch_cum`,sum(`c`.`commit_1st_epoch`) AS `commit_1st_epoch`,sum(sum(`c`.`commit_1st_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `commit_1st_epoch_cum`,`e`.`paidout` AS `paidout`,sum(`e`.`paidout`) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `paidout_cum` from ((`nodeids_dates` `a` left join `staging_commit_submitted` `c` on(((`a`.`nodeId` = `c`.`identity_id`) and (`a`.`date_val` = `c`.`block_date`)))) left join (select `staging_proof_submitted`.`identity_id` AS `identity_id`,`staging_proof_submitted`.`block_date` AS `block_date`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` group by `staging_proof_submitted`.`identity_id`,`staging_proof_submitted`.`block_date`) `e` on(((`a`.`nodeId` = `e`.`identity_id`) and (`a`.`date_val` = `e`.`block_date`)))) group by `a`.`nodeId`,`a`.`date_val`), `node_stats_1` as (select `n`.`nodeId` AS `nodeId`,`n`.`date_val` AS `date_val`,`n`.`nodeStake` AS `nodeStake`,`n`.`estimated_earnings_any_epoch` AS `estimated_earnings_any_epoch`,`n`.`estimated_earnings_1st_epoch_only` AS `estimated_earnings_1st_epoch_only`,`n`.`estimated_earnings_any_epoch_cum` AS `estimated_earnings_any_epoch_cum`,`n`.`estimated_earnings_1st_epoch_only_cum` AS `estimated_earnings_1st_epoch_only_cum`,`n`.`commit_any_epoch` AS `commit_any_epoch`,`n`.`commit_any_epoch_cum` AS `commit_any_epoch_cum`,`n`.`commit_1st_epoch` AS `commit_1st_epoch`,`n`.`commit_1st_epoch_cum` AS `commit_1st_epoch_cum`,`n`.`paidout` AS `paidout`,`n`.`paidout_cum` AS `paidout_cum`,`ask_2`.`ask` AS `ask`,count(`ask_2`.`ask`) OVER (PARTITION BY `n`.`nodeId` ORDER BY `n`.`date_val` )  AS `value_partition` from (`node_stats_0` `n` left join `ask_2` on(((`n`.`nodeId` = `ask_2`.`identity_id`) and (`n`.`date_val` = `ask_2`.`block_date`))))), `node_stats_2` as (select `n`.`nodeId` AS `nodeId`,`n`.`date_val` AS `date_val`,`n`.`nodeStake` AS `nodeStake`,`n`.`estimated_earnings_any_epoch` AS `estimated_earnings_any_epoch`,`n`.`estimated_earnings_1st_epoch_only` AS `estimated_earnings_1st_epoch_only`,`n`.`estimated_earnings_any_epoch_cum` AS `estimated_earnings_any_epoch_cum`,`n`.`estimated_earnings_1st_epoch_only_cum` AS `estimated_earnings_1st_epoch_only_cum`,`n`.`commit_any_epoch` AS `commit_any_epoch`,`n`.`commit_any_epoch_cum` AS `commit_any_epoch_cum`,`n`.`commit_1st_epoch` AS `commit_1st_epoch`,`n`.`commit_1st_epoch_cum` AS `commit_1st_epoch_cum`,`n`.`paidout` AS `paidout`,`n`.`paidout_cum` AS `paidout_cum`,`n`.`ask` AS `ask`,`n`.`value_partition` AS `value_partition`,first_value(`n`.`ask`) OVER (PARTITION BY `n`.`nodeId`,`n`.`value_partition` ORDER BY `n`.`date_val` )  AS `ask_result` from `node_stats_1` `n`) select `a`.`nodeId` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date_val` AS `date`,`a`.`nodeStake` AS `nodeStake`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly`,ifnull(`a`.`commit_any_epoch_cum`,0) AS `cumulativePubsCommited`,ifnull(`a`.`commit_1st_epoch_cum`,0) AS `cumulativePubsCommited1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch_cum`,0) AS `cumulativeEstimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only_cum`,0) AS `cumulativeEstimatedEarnings1stEpochOnly`,ifnull(`a`.`paidout`,0) AS `payouts`,ifnull(`a`.`paidout_cum`,0) AS `cumulativePayouts`,cast((cast(`a`.`ask_result` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `ask` from (`node_stats_2` `a` left join `v_nodes_barebone` `b` on((`a`.`nodeId` = `b`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_last30d` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_last7d` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_last7d_raw`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d_raw`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_last7d_raw` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_latest`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_latest`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_latest` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` group by `staging_commit_submitted`.`identity_id`), `nodes_1` as (select `a`.`identity_id` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`commits` `a` left join `paidout` `b` on((`a`.`identity_id` = `b`.`identity_id`))) left join `v_nodes` `c` on((`a`.`identity_id` = `c`.`nodeId`)))) select `nodes_1`.`nodeId` AS `nodeId`,`nodes_1`.`networkId` AS `networkId`,`nodes_1`.`tokenName` AS `tokenName`,`nodes_1`.`tokenSymbol` AS `tokenSymbol`,`nodes_1`.`nodeOwner` AS `nodeOwner`,`nodes_1`.`nodeGroup` AS `nodeGroup`,`nodes_1`.`nodeStake` AS `nodeStake`,`nodes_1`.`nodeAsk` AS `nodeAsk`,`nodes_1`.`cumulativePayouts` AS `cumulativePayouts`,`nodes_1`.`estimatedEarnings` AS `estimatedEarnings`,`nodes_1`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`nodes_1`.`pubsCommited` AS `pubsCommited`,`nodes_1`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly` from `nodes_1` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_daily` AS with recursive `dates_cte` as (select (select cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) from `block` order by `block`.`number` limit 1) AS `date_val` union all select (`dates_cte`.`date_val` + interval 1 day) AS `DATE_ADD(date_val, INTERVAL 1 DAY)` from `dates_cte` where (`dates_cte`.`date_val` < (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`))), `dates_cte_2` as (select `a`.`date_val` AS `date_val` from (`dates_cte` `a` left join (select distinct `staging_pub`.`block_date` AS `block_date` from `staging_pub`) `b` on((`a`.`date_val` = `b`.`block_date`))) where ((`b`.`block_date` = 0) or (`b`.`block_date` is null))) select `a`.`block_date` AS `date`,avg(`a`.`size`) AS `avgPubSize`,avg(`a`.`epochs_number`) AS `avgEpochsNumber`,avg(`a`.`token_amount`) AS `avgPubPrice`,avg(`a`.`bid`) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,sum(`a`.`token_amount`) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` group by `a`.`block_date` union all select `dates_cte_2`.`date_val` AS `date_val`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0` from `dates_cte_2` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_hourly`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_hourly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_hourly` AS with recursive `dates_cte0` as (select (select date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') from `block` order by `block`.`number` limit 1) AS `ts_val` union all select (`dates_cte0`.`ts_val` + interval 1 hour) AS `DATE_ADD(ts_val, INTERVAL 1 HOUR)` from `dates_cte0` where (`dates_cte0`.`ts_val` < (select `v_sys_staging_date`.`block_ts_hour` from `v_sys_staging_date`))), `dates_cte` as (select cast(`dates_cte0`.`ts_val` as date) AS `date_val`,`dates_cte0`.`ts_val` AS `ts_val` from `dates_cte0`), `dates_cte_2` as (select `a`.`date_val` AS `date_val`,`a`.`ts_val` AS `ts_val` from (`dates_cte` `a` left join (select distinct `staging_pub`.`block_date` AS `block_date`,`staging_pub`.`block_ts_hour` AS `block_ts_hour` from `staging_pub`) `b` on(((`a`.`date_val` = `b`.`block_date`) and (`a`.`ts_val` = `b`.`block_ts_hour`)))) where ((`b`.`block_date` = 0) or (`b`.`block_date` is null))) select `a`.`block_date` AS `date`,`a`.`block_ts_hour` AS `datetime`,avg(`a`.`size`) AS `avgPubSize`,avg(`a`.`epochs_number`) AS `avgEpochsNumber`,avg(`a`.`token_amount`) AS `avgPubPrice`,avg(`a`.`bid`) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,sum(`a`.`token_amount`) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` group by `a`.`block_date`,`a`.`block_ts_hour` union all select `dates_cte_2`.`date_val` AS `date_val`,`dates_cte_2`.`ts_val` AS `ts_val`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0` from `dates_cte_2` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_last24h`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_last24h` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_ts` + interval -(2) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(25) hour) from `v_sys_staging_date`)) and (`a`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(1440) minute) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_last30d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_last7d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_ts` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(10080) minute) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_monthly`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_monthly` AS with recursive `dates_cte` as (select (select cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) from `block` order by `block`.`number` limit 1) AS `date_val` union all select (`dates_cte`.`date_val` + interval 1 day) AS `DATE_ADD(date_val, INTERVAL 1 DAY)` from `dates_cte` where (`dates_cte`.`date_val` < (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`))), `dates_cte_2` as (select `a`.`date_val` AS `date_val` from (`dates_cte` `a` left join (select distinct `staging_pub`.`block_date` AS `block_date` from `staging_pub`) `b` on((`a`.`date_val` = `b`.`block_date`))) where ((`b`.`block_date` = 0) or (`b`.`block_date` is null))), `daily` as (select `a`.`block_date` AS `date`,sum(`a`.`size`) AS `size`,sum(`a`.`epochs_number`) AS `epochs_number`,sum(`a`.`token_amount`) AS `token_amount`,sum(`a`.`bid`) AS `bid`,count(`a`.`token_id`) AS `totalPubs`,sum(`a`.`token_amount`) AS `totalTracSpent`,sum((case when (`a`.`size` = 145) then 1 else 0 end)) AS `privatePubs` from `staging_pub` `a` group by `a`.`block_date` union all select `dates_cte_2`.`date_val` AS `date_val`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0` from `dates_cte_2`) select date_format(`daily`.`date`,'%Y-%m-01') AS `date`,(sum(`daily`.`size`) / sum(`daily`.`totalPubs`)) AS `avgPubSize`,(sum(`daily`.`epochs_number`) / sum(`daily`.`totalPubs`)) AS `avgEpochsNumber`,(sum(`daily`.`token_amount`) / sum(`daily`.`totalPubs`)) AS `avgPubPrice`,(sum(`daily`.`bid`) / sum(`daily`.`totalPubs`)) AS `avgBid`,sum(`daily`.`totalPubs`) AS `totalPubs`,sum(`daily`.`totalTracSpent`) AS `totalTracSpent`,round(((sum(`daily`.`privatePubs`) / sum(`daily`.`totalPubs`)) * 100),0) AS `privatePubsPercentage` from `daily` group by date_format(`daily`.`date`,'%Y-%m-01') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_asset_history`
--

/*!50001 DROP VIEW IF EXISTS `v_asset_history`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_asset_history` AS select 'AssetMinted' AS `event`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`d`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,`a`.`state` AS `minted_state`,concat(`ac`.`contract_address`,`c`.`keyword`) AS `minted_keyword`,`c`.`hash_function_id` AS `minted_hash_function_id`,`c`.`start_time` AS `minted_start_time`,`c`.`epochs_number` AS `minted_epochs_number`,`c`.`epoch_length` AS `minted_epoch_length`,`c`.`token_amount` AS `minted_token_amount`,`c`.`size` AS `minted_size`,`c`.`triples_number` AS `minted_triples_number`,`c`.`chunks_number` AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((((`content_asset_asset_minted` `a` left join (select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`start_time` AS `start_time`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,`a`.`token_amount` AS `token_amount`,`b`.`create_asset_size` AS `size`,`b`.`create_asset_triples_number` AS `triples_number`,`b`.`create_asset_chunks_number` AS `chunks_number` from (`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`))))) `c` on(((`a`.`asset_contract_id` = `c`.`asset_contract_id`) and (`a`.`token_id` = `c`.`token_id`)))) left join `content_asset_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'Transfer' AS `Transfer`,`a`.`token_id` AS `token_id`,`addc`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,`a`.`from` AS `transfer_from`,`a`.`to` AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((`content_asset_storage_transfer` `a` left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `content_asset_storage_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`from` <> '0x0000000000000000000000000000000000000000') union all select 'AssetStateUpdated' AS `event`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`c`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,`a`.`state_index` AS `state_updated_state_index`,`a`.`update_token_amount` AS `state_updated_update_token_amount`,(case when (`b`.`token_id` is not null) then 'StateFinalized' end) AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((((`content_asset_asset_state_updated` `a` left join `commit_manager_v1_u1_state_finalized` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`) and (`a`.`state_index` = `b`.`state_index`)))) left join `content_asset_tx` `c` on(((`a`.`block_number` = `c`.`block_number`) and (`a`.`transaction_index` = `c`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetStateUpdatedCencelled' AS `AssetStateUpdatedCencelled`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,`a`.`state_index` AS `update_cancelled_state_index`,`a`.`returned_token_amount` AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_state_update_canceled` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetStoringPeriodExtended' AS `AssetStoringPeriodExtended`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,`a`.`epochs_number` AS `storing_period_extended_epochs_number`,`a`.`token_amount` AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_storing_period_extended` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetUpdatePaymentIncreased' AS `AssetUpdatePaymentIncreased`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,`a`.`token_amount` AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_update_payment_increased` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetPaymentIncreased' AS `AssetPaymentIncreased`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,`a`.`token_amount` AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_payment_increased` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetBurnt' AS `AssetBurnt`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,`a`.`returned_token_amount` AS `burnt_returned_token_amount` from ((((`content_asset_asset_burnt` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes` AS with `latest_stake_0` as (select `staging_stake`.`identity_id` AS `identity_id`,`staging_stake`.`stake` AS `stake`,`staging_stake`.`ask` AS `ask` from `staging_stake` where ((`staging_stake`.`block_date` = (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` = (select `v_sys_staging_date`.`block_ts_hour` from `v_sys_staging_date`)))), `nodes_0` as (select `a`.`nodeId` AS `nodeId`,`a`.`networkId` AS `networkId`,`a`.`tokenName` AS `tokenName`,`a`.`tokenSymbol` AS `tokenSymbol`,`a`.`nodeOwner` AS `nodeOwner`,`a`.`nodeGroup` AS `nodeGroup`,`a`.`createProfile_adminWallet` AS `createProfile_adminWallet`,`a`.`createProfile_adminWallet_hash` AS `createProfile_adminWallet_hash`,`a`.`current_adminWallet_hashes` AS `current_adminWallet_hashes`,`a`.`createProfile_blockNumber` AS `createProfile_blockNumber`,`a`.`createProfile_txHash` AS `createProfile_txHash`,`a`.`createProfile_ts` AS `createProfile_ts`,`a`.`createProfile_date` AS `createProfile_date`,((to_days(curdate()) - to_days(`a`.`createProfile_date`)) + 1) AS `nodeAgeDays`,`b`.`stake` AS `nodeStake`,`b`.`ask` AS `nodeAsk` from (`v_nodes_barebone` `a` left join `latest_stake_0` `b` on((`a`.`nodeId` = `b`.`identity_id`))) where (`b`.`ask` is not null)) select `nodes_0`.`nodeId` AS `nodeId`,`nodes_0`.`networkId` AS `networkId`,`nodes_0`.`tokenName` AS `tokenName`,`nodes_0`.`tokenSymbol` AS `tokenSymbol`,`nodes_0`.`nodeOwner` AS `nodeOwner`,`nodes_0`.`nodeGroup` AS `nodeGroup`,`nodes_0`.`createProfile_adminWallet` AS `createProfile_adminWallet`,`nodes_0`.`createProfile_adminWallet_hash` AS `createProfile_adminWallet_hash`,`nodes_0`.`current_adminWallet_hashes` AS `current_adminWallet_hashes`,`nodes_0`.`createProfile_blockNumber` AS `createProfile_blockNumber`,`nodes_0`.`createProfile_txHash` AS `createProfile_txHash`,`nodes_0`.`createProfile_ts` AS `createProfile_ts`,`nodes_0`.`createProfile_date` AS `createProfile_date`,`nodes_0`.`nodeAgeDays` AS `nodeAgeDays`,`nodes_0`.`nodeStake` AS `nodeStake`,`nodes_0`.`nodeAsk` AS `nodeAsk` from `nodes_0` union all select 0 AS `NodeId`,'avgNode' AS `NetworkId`,'avgNode' AS `TokenName`,'avgNode' AS `TokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,NULL AS `createProfile_adminWallet`,NULL AS `createProfile_adminWallet_hash`,NULL AS `current_adminWallet_hashes`,NULL AS `createProfile_blockNumber`,NULL AS `createProfile_txHash`,NULL AS `createProfile_ts`,NULL AS `createProfile_date`,0 AS `nodeAgeDays`,avg(`nodes_0`.`nodeStake`) AS `nodeStake`,avg(`nodes_0`.`nodeAsk`) AS `nodeAsk` from `nodes_0` where (`nodes_0`.`nodeStake` >= 50000) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_activity_last1min`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last1min`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_activity_last1min` AS with `activity_1` as (select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_commit_submitted` `a` join `commit_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_u1_commit_submitted` `a` join `commit_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_proof_submitted` `a` join `proof_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_u1_proof_submitted` `a` join `proof_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AskUpdated' AS `event_name`,cast((cast(`a`.`ask` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`profile_ask_updated` `a` join `profile_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'KeyAdded' AS `event_name`,`a`.`key` AS `event_value_1` from ((`identity_storage_key_added` `a` join `identity_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'StakeIncreased' AS `event_name`,cast((cast(`a`.`new_stake` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`staking_stake_increased` `a` left join (select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_tx`.`hash` AS `hash` from `proof_manager_v1_tx` where (`proof_manager_v1_tx`.`block_number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_u1_tx`.`hash` AS `hash` from `proof_manager_v1_u1_tx` where (`proof_manager_v1_u1_tx`.`block_number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`))))) `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`br`.`nodeId` AS `nodeId`,`br`.`tokenName` AS `tokenName`,`br`.`tokenSymbol` AS `tokenSymbol`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from ((((`activity_1` `a` left join `v_nodes_barebone` `br` on((`a`.`identity_id` = `br`.`nodeId`))) left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_activity_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_activity_last24h` AS with `activity_1` as (select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_commit_submitted` `a` join `commit_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_u1_commit_submitted` `a` join `commit_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_proof_submitted` `a` join `proof_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_u1_proof_submitted` `a` join `proof_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AskUpdated' AS `event_name`,cast((cast(`a`.`ask` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`profile_ask_updated` `a` join `profile_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'KeyAdded' AS `event_name`,`a`.`key` AS `event_value_1` from ((`identity_storage_key_added` `a` join `identity_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'StakeIncreased' AS `event_name`,cast((cast(`a`.`new_stake` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`staking_stake_increased` `a` left join (select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_tx`.`hash` AS `hash` from `proof_manager_v1_tx` where (`proof_manager_v1_tx`.`block_number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_u1_tx`.`hash` AS `hash` from `proof_manager_v1_u1_tx` where (`proof_manager_v1_u1_tx`.`block_number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`))))) `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`br`.`nodeId` AS `nodeId`,`br`.`tokenName` AS `tokenName`,`br`.`tokenSymbol` AS `tokenSymbol`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from ((((`activity_1` `a` left join `v_nodes_barebone` `br` on((`a`.`identity_id` = `br`.`nodeId`))) left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_barebone`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_barebone`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_barebone` AS with `added_admin_keys` as (select `identity_storage_key_added`.`identity_id` AS `identity_id`,`identity_storage_key_added`.`key` AS `key` from `identity_storage_key_added` where (`identity_storage_key_added`.`purpose` = 1)), `removed_keys` as (select `a`.`identity_id` AS `identity_id`,`b`.`remove_key_key` AS `remove_key_key` from (`identity_storage_key_removed` `a` left join `identity_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`) and (`b`.`function` = 'removeKey'))))), `actual_keys` as (select `a`.`identity_id` AS `identity_id`,`a`.`key` AS `key` from (`added_admin_keys` `a` left join `removed_keys` `b` on(((`a`.`identity_id` = `b`.`identity_id`) and (`a`.`key` = `b`.`remove_key_key`)))) where (`b`.`identity_id` is null)), `actual_keys_concat` as (select `actual_keys`.`identity_id` AS `identity_id`,group_concat(`actual_keys`.`key` separator ',') AS `admin_keys_hashes` from `actual_keys` group by `actual_keys`.`identity_id`) select `a`.`identity_id` AS `nodeId`,(case when (`b`.`create_profile_node_id` = '0x5cac41237127f94c2d21dae0b14bfefa998806302e357127ed9d44860b322a2314a5ce338d2aec67cd3ded5c9adeed60718ce26c') then 'invalidNetworkID1' else convert(unhex(substr(`b`.`create_profile_node_id`,3,92)) using utf8mb4) end) AS `networkId`,`b`.`create_profile_shares_token_name` AS `tokenName`,`b`.`create_profile_shares_token_symbol` AS `tokenSymbol`,NULL AS `nodeOwner`,(case when (left(`b`.`create_profile_shares_token_symbol`,6) = 'TLNODE') then 'Trace Labs' when (`b`.`create_profile_shares_token_symbol` in ('TechnoTesseract','QuantumRealm','CyberstormCentral','StellarSynapse','SynthwaveSanctuary','GalacticGateway','CyberVortex','ViperVerse','DreamMachine','OrionBreeze','NovaLuna','AstroSphere','SolarFlare','Tars','GalacticCore','CometCruiser','CelestialCloud','LunaLander','CosmoCluster','SaturnStation','StarshipSynth','CosmicCrypt','InterstellarNode','FusionLink','ElextraStream','TitanLink','PulsarVertex','CodeDynamo','AuroraByte','EonSecure')) then 'Trace Labs' else 'Community' end) AS `nodeGroup`,`b`.`create_profile_admin_wallet` AS `createProfile_adminWallet`,`c`.`admin_key` AS `createProfile_adminWallet_hash`,`d`.`admin_keys_hashes` AS `current_adminWallet_hashes`,`a`.`block_number` AS `createProfile_blockNumber`,`b`.`hash` AS `createProfile_txHash`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `createProfile_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `createProfile_date` from ((((`profile_profile_created` `a` left join `profile_tx` `b` on(((`a`.`contract_id` = `b`.`to_id`) and (`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `identity_identity_created` `c` on(((`a`.`block_number` = `c`.`block_number`) and (`a`.`transaction_index` = `c`.`transaction_index`)))) left join `actual_keys_concat` `d` on((`a`.`identity_id` = `d`.`identity_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stake`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stake`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stake` AS select `stats_node`.`identity_id` AS `nodeId`,`stats_node`.`block_date` AS `date`,`stats_node`.`node_stake` AS `nodeStake` from `stats_node` union all select 0 AS `nodeId`,`stats_node`.`block_date` AS `date`,avg(`stats_node`.`node_stake`) AS `nodeStake` from `stats_node` where (`stats_node`.`node_stake` >= 50000) group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_daily` AS with `nodes_0` as (select `a`.`identity_id` AS `nodeId`,`a`.`block_date` AS `date`,`a`.`node_stake` AS `nodeStake`,`a`.`commit_any_epoch` AS `pubsCommited`,`a`.`commit_1st_epoch` AS `pubsCommited1stEpochOnly`,sum(`a`.`commit_any_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePubsCommited`,sum(`a`.`commit_1st_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimated_earnings_any_epoch` AS `estimatedEarnings`,`a`.`estimated_earnings_1st_epoch_only` AS `estimatedEarnings1stEpochOnly`,sum(`a`.`estimated_earnings_any_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativeEstimatedEarnings`,sum(`a`.`estimated_earnings_1st_epoch_only`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,sum(`a`.`payouts`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePayouts`,`a`.`ask` AS `ask` from `stats_node` `a`) select `a`.`nodeId` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date` AS `date`,`a`.`nodeStake` AS `nodeStake`,`a`.`pubsCommited` AS `pubsCommited`,`a`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`a`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`a`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimatedEarnings` AS `estimatedEarnings`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`a`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`a`.`ask` AS `ask` from (`nodes_0` `a` join `v_nodes_barebone` `b` on((`a`.`nodeId` = `b`.`nodeId`))) union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`stats_node`.`block_date` AS `date`,avg(`stats_node`.`node_stake`) AS `nodeStake`,avg(`stats_node`.`commit_any_epoch`) AS `pubsCommited`,avg(`stats_node`.`commit_1st_epoch`) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_node`.`estimated_earnings_any_epoch`) AS `estimatedEarnings`,avg(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_node`.`payouts`) AS `payouts`,NULL AS `NULL`,avg(`stats_node`.`ask`) AS `ask` from `stats_node` where (`stats_node`.`node_stake` >= 50000) group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_daily` AS select `stats_node`.`block_date` AS `date`,sum(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`stats_node`.`estimated_earnings_any_epoch`) - sum(`stats_node`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`stats_node`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,sum(sum(`stats_node`.`commit_1st_epoch`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum((sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`))) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeCommitsSubmitted2plusEpochs`,sum(`stats_node`.`payouts`) AS `payouts`,sum(sum(`stats_node`.`payouts`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativePayouts`,sum(`stats_node`.`proofs_submitted`) AS `proofsSubmitted`,sum(sum(`stats_node`.`proofs_submitted`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeProofsSubmitted`,sum(`stats_node`.`node_stake`) AS `combinedNodesStake`,(sum(`stats_node`.`node_stake`) / sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end))) AS `avgNodeStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk`,(sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) / sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end))) AS `avgAsk` from `stats_node` group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_hourly_7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_hourly_7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_hourly_7d` AS with `dates` as (select `staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,sum(`staging_stake`.`stake`) AS `stake`,sum((case when (`staging_stake`.`stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`staging_stake`.`stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`staging_stake`.`stake` >= 50000) then `staging_stake`.`ask` else 0 end)) AS `combined_ask` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`))) group by `staging_stake`.`block_date`,`staging_stake`.`block_ts_hour`), `commits` as (select `staging_commit_submitted`.`block_date` AS `block_date`,`staging_commit_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_commit_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_commit_submitted`.`block_date`,`staging_commit_submitted`.`block_ts_hour`), `paidouts` as (select `staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout`,count(`staging_proof_submitted`.`value`) AS `proofs_submitted` from `staging_proof_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_proof_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`) select `a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`c`.`estimated_earnings_1st_epoch_only` AS `estimatedEarnings1stEpochOnly`,(`c`.`estimated_earnings_any_epoch` - `c`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings2plusEpochs`,`c`.`commit_1st_epoch` AS `commitsSubmitted1stEpochOnly`,sum(`c`.`commit_1st_epoch`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(`c`.`commit_any_epoch` - `c`.`commit_1st_epoch`) AS `commitsSubmitted2plusEpochs`,sum((`c`.`commit_any_epoch` - `c`.`commit_1st_epoch`)) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeCommitsSubmitted2plusEpochs`,`p`.`paidout` AS `payouts`,sum(`p`.`paidout`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativePayouts`,`p`.`proofs_submitted` AS `proofsSubmitted`,sum(`p`.`proofs_submitted`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeProofsSubmitted`,`a`.`stake` AS `combinedNodesStake`,(`a`.`stake` / `a`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`a`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`a`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`a`.`combined_ask` AS `combinedAsk`,(`a`.`combined_ask` / `a`.`nodesWithMoreThan50kStake`) AS `avgAsk` from ((`dates` `a` left join `commits` `c` on(((`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join `paidouts` `p` on(((`a`.`date_val` = `p`.`block_date`) and (`a`.`ts_val` = `p`.`block_ts_hour`)))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_monthly` AS with `stake_0` as (select `stats_node`.`block_date` AS `block_date`,sum(`stats_node`.`node_stake`) AS `node_stake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk`,row_number() OVER (PARTITION BY date_format(`stats_node`.`block_date`,'%Y-%m-01') ORDER BY `stats_node`.`block_date` desc )  AS `rn` from `stats_node` group by `stats_node`.`block_date`), `stake_1` as (select date_format(`stake_0`.`block_date`,'%Y-%m-01') AS `date`,`stake_0`.`node_stake` AS `node_stake`,`stake_0`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`stake_0`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`stake_0`.`combinedAsk` AS `combinedAsk` from `stake_0` where (`stake_0`.`rn` = 1)), `grouped_0` as (select date_format(`a`.`block_date`,'%Y-%m-01') AS `date`,sum(`a`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`a`.`estimated_earnings_any_epoch`) - sum(`a`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`a`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,sum(sum(`a`.`commit_1st_epoch`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(sum(`a`.`commit_any_epoch`) - sum(`a`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum((sum(`a`.`commit_any_epoch`) - sum(`a`.`commit_1st_epoch`))) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeCommitsSubmitted2plusEpochs`,sum(`a`.`payouts`) AS `payouts`,sum(sum(`a`.`payouts`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePayouts`,sum(`a`.`proofs_submitted`) AS `proofsSubmitted`,sum(sum(`a`.`proofs_submitted`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeProofsSubmitted` from `stats_node` `a` group by date_format(`a`.`block_date`,'%Y-%m-01')) select `a`.`date` AS `date`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`estimatedEarnings2plusEpochs` AS `estimatedEarnings2plusEpochs`,`a`.`commitsSubmitted1stEpochOnly` AS `commitsSubmitted1stEpochOnly`,`a`.`cumulativeCommitsSubmitted1stEpochOnly` AS `cumulativeCommitsSubmitted1stEpochOnly`,`a`.`commitsSubmitted2plusEpochs` AS `commitsSubmitted2plusEpochs`,`a`.`cumulativeCommitsSubmitted2plusEpochs` AS `cumulativeCommitsSubmitted2plusEpochs`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`a`.`proofsSubmitted` AS `proofsSubmitted`,`a`.`cumulativeProofsSubmitted` AS `cumulativeProofsSubmitted`,`b`.`node_stake` AS `combinedNodesStake`,(`b`.`node_stake` / `b`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`b`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`b`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`b`.`combinedAsk` AS `combinedAsk`,(`b`.`combinedAsk` / `b`.`nodesWithMoreThan50kStake`) AS `avgAsk` from (`grouped_0` `a` join `stake_1` `b` on((`a`.`date` = `b`.`date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_total`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_total`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_total` AS with `stake_0` as (select sum(`stats_node`.`node_stake`) AS `node_stake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk` from `stats_node` where (`stats_node`.`block_date` = (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`)) group by `stats_node`.`block_date`), `grouped_0` as (select sum(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`stats_node`.`estimated_earnings_any_epoch`) - sum(`stats_node`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`stats_node`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,(sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum(`stats_node`.`payouts`) AS `payouts`,sum(`stats_node`.`proofs_submitted`) AS `proofsSubmitted` from `stats_node`) select `a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`estimatedEarnings2plusEpochs` AS `estimatedEarnings2plusEpochs`,`a`.`commitsSubmitted1stEpochOnly` AS `commitsSubmitted1stEpochOnly`,`a`.`commitsSubmitted2plusEpochs` AS `commitsSubmitted2plusEpochs`,`a`.`payouts` AS `payouts`,`a`.`proofsSubmitted` AS `proofsSubmitted`,`b`.`node_stake` AS `combinedNodesStake`,(`b`.`node_stake` / `b`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`b`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`b`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`b`.`combinedAsk` AS `combinedAsk`,(`b`.`combinedAsk` / `b`.`nodesWithMoreThan50kStake`) AS `avgAsk` from (`grouped_0` `a` join `stake_0` `b`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_hourly_7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_hourly_7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_hourly_7d` AS with `nodeids_dates` as (select `staging_stake`.`identity_id` AS `nodeId`,`staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,`staging_stake`.`stake` AS `stake`,`staging_stake`.`ask` AS `ask` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`)))), `node_stats_0` as (select `a`.`nodeId` AS `nodeId`,`a`.`date_val` AS `date_val`,`a`.`ts_val` AS `ts_val`,max(`a`.`stake`) AS `nodeStake`,max(`a`.`ask`) AS `ask`,sum(`c`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`c`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(sum(`c`.`estimated_earnings_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `estimated_earnings_any_epoch_cum`,sum(sum(`c`.`estimated_earnings_1st_epoch_only`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `estimated_earnings_1st_epoch_only_cum`,sum(`c`.`commit_any_epoch`) AS `commit_any_epoch`,sum(sum(`c`.`commit_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `commit_any_epoch_cum`,sum(`c`.`commit_1st_epoch`) AS `commit_1st_epoch`,sum(sum(`c`.`commit_1st_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `commit_1st_epoch_cum`,`e`.`paidout` AS `paidout`,sum(`e`.`paidout`) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `paidout_cum` from ((`nodeids_dates` `a` left join `staging_commit_submitted` `c` on(((`a`.`nodeId` = `c`.`identity_id`) and (`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join (select `staging_proof_submitted`.`identity_id` AS `identity_id`,`staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where (`staging_proof_submitted`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) group by `staging_proof_submitted`.`identity_id`,`staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`) `e` on(((`a`.`nodeId` = `e`.`identity_id`) and (`a`.`date_val` = `e`.`block_date`) and (`a`.`ts_val` = `e`.`block_ts_hour`)))) where ((`c`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) or (`c`.`block_date` is null)) group by `a`.`nodeId`,`a`.`date_val`,`a`.`ts_val`), `dates_avg_node` as (select `staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,avg(`staging_stake`.`stake`) AS `stake`,avg(`staging_stake`.`ask`) AS `ask`,count(`staging_stake`.`block_date`) AS `node_count` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`)) and (`staging_stake`.`stake` >= 50000)) group by `staging_stake`.`block_date`,`staging_stake`.`block_ts_hour`), `commits_avg_node` as (select `staging_commit_submitted`.`block_date` AS `block_date`,`staging_commit_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_commit_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_commit_submitted`.`block_date`,`staging_commit_submitted`.`block_ts_hour`), `paidout_avg_node` as (select `staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_proof_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`), `node_stats_0_avg_node` as (select `a`.`date_val` AS `date_val`,`a`.`ts_val` AS `ts_val`,`a`.`stake` AS `nodeStake`,`a`.`ask` AS `ask`,(`c`.`estimated_earnings_any_epoch` / `a`.`node_count`) AS `estimated_earnings_any_epoch`,(`c`.`estimated_earnings_1st_epoch_only` / `a`.`node_count`) AS `estimated_earnings_1st_epoch_only`,(`c`.`commit_any_epoch` / `a`.`node_count`) AS `commit_any_epoch`,(`c`.`commit_1st_epoch` / `a`.`node_count`) AS `commit_1st_epoch`,(`p`.`paidout` / `a`.`node_count`) AS `paidout` from ((`dates_avg_node` `a` left join `commits_avg_node` `c` on(((`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join `paidout_avg_node` `p` on(((`a`.`date_val` = `p`.`block_date`) and (`a`.`ts_val` = `p`.`block_ts_hour`))))) select `a`.`nodeId` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`a`.`nodeStake` AS `nodeStake`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly`,ifnull(`a`.`commit_any_epoch_cum`,0) AS `cumulativePubsCommited`,ifnull(`a`.`commit_1st_epoch_cum`,0) AS `cumulativePubsCommited1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch_cum`,0) AS `cumulativeEstimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only_cum`,0) AS `cumulativeEstimatedEarnings1stEpochOnly`,ifnull(`a`.`paidout`,0) AS `payouts`,ifnull(`a`.`paidout_cum`,0) AS `cumulativePayouts`,`a`.`ask` AS `ask` from (`node_stats_0` `a` left join `v_nodes_barebone` `b` on((`a`.`nodeId` = `b`.`nodeId`))) union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`a`.`nodeStake` AS `nodeStake`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,ifnull(`a`.`paidout`,0) AS `payouts`,NULL AS `NULL`,`a`.`ask` AS `ask` from `node_stats_0_avg_node` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last1h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last1h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last1h` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(2) hour) AS `t` from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last24h` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(2) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(2) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last30d` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) where (`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(30) day) as date) from `v_sys_staging_date`)) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last7d` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) where (`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(7) day) as date) from `v_sys_staging_date`)) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_latest`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_latest`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_latest` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_monthly` AS with `stake_ask_0` as (select `stats_node`.`identity_id` AS `identity_id`,`stats_node`.`block_date` AS `block_date`,`stats_node`.`node_stake` AS `node_stake`,`stats_node`.`ask` AS `ask`,row_number() OVER (PARTITION BY `stats_node`.`identity_id`,date_format(`stats_node`.`block_date`,'%Y-%m-01') ORDER BY `stats_node`.`block_date` desc )  AS `rn` from `stats_node`), `stake_ask_1` as (select `stake_ask_0`.`identity_id` AS `identity_id`,date_format(`stake_ask_0`.`block_date`,'%Y-%m-01') AS `date`,`stake_ask_0`.`node_stake` AS `node_stake`,`stake_ask_0`.`ask` AS `ask` from `stake_ask_0` where (`stake_ask_0`.`rn` = 1)), `stats_0` as (select `a`.`identity_id` AS `identity_id`,date_format(`a`.`block_date`,'%Y-%m-01') AS `date`,sum(`a`.`commit_any_epoch`) AS `pubsCommited`,sum(`a`.`commit_1st_epoch`) AS `pubsCommited1stEpochOnly`,sum(sum(`a`.`commit_any_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePubsCommited`,sum(sum(`a`.`commit_1st_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePubsCommited1stEpochOnly`,sum(`a`.`estimated_earnings_any_epoch`) AS `estimatedEarnings`,sum(`a`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,sum(sum(`a`.`estimated_earnings_any_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeEstimatedEarnings`,sum(sum(`a`.`estimated_earnings_1st_epoch_only`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeEstimatedEarnings1stEpochOnly`,sum(`a`.`payouts`) AS `payouts`,sum(sum(`a`.`payouts`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePayouts` from `stats_node` `a` group by `a`.`identity_id`,date_format(`a`.`block_date`,'%Y-%m-01')), `stats_1` as (select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date` AS `date`,`c`.`node_stake` AS `nodeStake`,`a`.`pubsCommited` AS `pubsCommited`,`a`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`a`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`a`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimatedEarnings` AS `estimatedEarnings`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`a`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`c`.`ask` AS `ask` from ((`stats_0` `a` join `v_nodes_barebone` `b` on((`a`.`identity_id` = `b`.`nodeId`))) join `stake_ask_1` `c` on(((`a`.`identity_id` = `c`.`identity_id`) and (`a`.`date` = `c`.`date`))))) select `stats_1`.`nodeId` AS `nodeId`,`stats_1`.`networkId` AS `networkId`,`stats_1`.`tokenName` AS `tokenName`,`stats_1`.`tokenSymbol` AS `tokenSymbol`,`stats_1`.`nodeOwner` AS `nodeOwner`,`stats_1`.`nodeGroup` AS `nodeGroup`,`stats_1`.`date` AS `date`,`stats_1`.`nodeStake` AS `nodeStake`,`stats_1`.`pubsCommited` AS `pubsCommited`,`stats_1`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`stats_1`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`stats_1`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`stats_1`.`estimatedEarnings` AS `estimatedEarnings`,`stats_1`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`stats_1`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`stats_1`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`stats_1`.`payouts` AS `payouts`,`stats_1`.`cumulativePayouts` AS `cumulativePayouts`,`stats_1`.`ask` AS `ask` from `stats_1` union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`stats_1`.`date` AS `date`,avg(`stats_1`.`nodeStake`) AS `nodeStake`,avg(`stats_1`.`pubsCommited`) AS `pubsCommited`,avg(`stats_1`.`pubsCommited1stEpochOnly`) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_1`.`estimatedEarnings`) AS `estimatedEarnings`,avg(`stats_1`.`estimatedEarnings1stEpochOnly`) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_1`.`payouts`) AS `payouts`,NULL AS `NULL`,avg(`stats_1`.`ask`) AS `ask` from `stats_1` where (`stats_1`.`nodeStake` >= 50000) group by `stats_1`.`date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs` AS select `b`.`contract_address` AS `contract_address`,`a`.`token_id` AS `token_id`,concat(`b`.`contract_address`,`a`.`keyword`) AS `keyword`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`c`.`chain_id` AS `chain_id`,`ch`.`chain_name` AS `chain_name`,`a`.`size` AS `size`,`a`.`triples_number` AS `triples_number`,`a`.`chunks_number` AS `chunks_number`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,((`a`.`epoch_length` / 3600) / 24) AS `epoch_length_days`,`a`.`token_amount` AS `token_amount`,`a`.`bid` AS `bid`,`a`.`transaction_hash` AS `transaction_hash`,`a`.`transaction_index` AS `transaction_index`,`a`.`block_number` AS `block_number`,`a`.`block_timestamp` AS `block_timestamp`,`a`.`block_ts` AS `block_ts`,`a`.`block_date` AS `block_date`,`a`.`block_ts_hour` AS `block_ts_hour`,`a`.`state_index` AS `state_index`,`a`.`state` AS `state`,concat('[',`a`.`previous_states`,']') AS `previous_states`,`a`.`from` AS `publisher`,concat(left(`a`.`from`,6),'...',right(`a`.`from`,4)) AS `publisher_short`,`a`.`owner` AS `owner`,`a`.`winners` AS `winners` from (((`staging_pub` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_activity_last1min`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last1min`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_activity_last1min` AS with `activity_1` as (select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetCreated' AS `event_name`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetTransferred' AS `event_name`,`a`.`to` AS `event_value_1` from ((`content_asset_storage_transfer` `a` join `content_asset_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)) and (`a`.`from` <> '0x0000000000000000000000000000000000000000') and (`a`.`to` <> '0x0000000000000000000000000000000000000000')) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetBurnt' AS `event_name`,cast((cast(`a`.`returned_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_burnt` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetUpdated' AS `event_name`,cast((cast(`a`.`update_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_state_updated` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`a`.`from` AS `signer`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from (((`activity_1` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_activity_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_activity_last24h` AS with `activity_1` as (select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetCreated' AS `event_name`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetTransferred' AS `event_name`,`a`.`to` AS `event_value_1` from ((`content_asset_storage_transfer` `a` join `content_asset_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)) and (`a`.`from` <> '0x0000000000000000000000000000000000000000') and (`a`.`to` <> '0x0000000000000000000000000000000000000000')) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetBurnt' AS `event_name`,cast((cast(`a`.`returned_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_burnt` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetUpdated' AS `event_name`,cast((cast(`a`.`update_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_state_updated` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`a`.`from` AS `signer`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from (((`activity_1` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_daily` AS select `a`.`block_date` AS `date`,ifnull((sum(`a`.`total_size`) / sum(`a`.`total_pubs`)),0) AS `avgPubSize`,ifnull((sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)),0) AS `avgEpochsNumber`,ifnull((sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)),0) AS `avgPubPrice`,ifnull((sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)),0) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,ifnull(round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0),0) AS `privatePubsPercentage`,sum(sum(`a`.`total_trac_spent`)) OVER (ORDER BY `a`.`block_date` )  AS `cumulativeTotalTracSpent`,sum(sum(`a`.`total_pubs`)) OVER (ORDER BY `a`.`block_date` )  AS `cumulativePubs` from `stats_pub` `a` group by `a`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_hourly`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_hourly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_hourly` AS select `a`.`block_date` AS `date`,`a`.`block_ts_hour` AS `datetime`,ifnull((`a`.`total_size` / `a`.`total_pubs`),0) AS `avgPubSize`,ifnull((`a`.`total_epochs` / `a`.`total_pubs`),0) AS `avgEpochsNumber`,ifnull((`a`.`total_trac_spent` / `a`.`total_pubs`),0) AS `avgPubPrice`,ifnull((`a`.`total_bid` / `a`.`total_pubs`),0) AS `avgBid`,`a`.`total_pubs` AS `totalPubs`,`a`.`total_trac_spent` AS `totalTracSpent`,round((ifnull((`a`.`private_pubs` / `a`.`total_pubs`),0) * 100),0) AS `privatePubsPercentage`,sum(`a`.`total_trac_spent`) OVER (ORDER BY `a`.`block_date`,`a`.`block_ts_hour` )  AS `cumulativeTotalTracSpent`,sum(`a`.`total_pubs`) OVER (ORDER BY `a`.`block_date`,`a`.`block_ts_hour` )  AS `cumulativePubs` from `stats_pub` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last1h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last1h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last1h` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_ts` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(2) hour) from `v_sys_staging_date`)) and (`a`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last24h` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last30d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last7d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_monthly` AS with `daily` as (select `stats_pub`.`block_date` AS `date`,sum(`stats_pub`.`total_size`) AS `size`,sum(`stats_pub`.`total_epochs`) AS `epochs_number`,sum(`stats_pub`.`total_bid`) AS `bid`,sum(`stats_pub`.`total_pubs`) AS `totalPubs`,sum(`stats_pub`.`total_trac_spent`) AS `totalTracSpent`,sum(`stats_pub`.`private_pubs`) AS `privatePubs` from `stats_pub` group by `stats_pub`.`block_date`) select date_format(`daily`.`date`,'%Y-%m-01') AS `date`,(sum(`daily`.`size`) / sum(`daily`.`totalPubs`)) AS `avgPubSize`,(sum(`daily`.`epochs_number`) / sum(`daily`.`totalPubs`)) AS `avgEpochsNumber`,(sum(`daily`.`totalTracSpent`) / sum(`daily`.`totalPubs`)) AS `avgPubPrice`,(sum(`daily`.`bid`) / sum(`daily`.`totalPubs`)) AS `avgBid`,sum(`daily`.`totalPubs`) AS `totalPubs`,sum(`daily`.`totalTracSpent`) AS `totalTracSpent`,round(((sum(`daily`.`privatePubs`) / sum(`daily`.`totalPubs`)) * 100),0) AS `privatePubsPercentage`,sum(sum(`daily`.`totalTracSpent`)) OVER (ORDER BY date_format(`daily`.`date`,'%Y-%m-01') )  AS `cumulativeTotalTracSpent`,sum(sum(`daily`.`totalPubs`)) OVER (ORDER BY date_format(`daily`.`date`,'%Y-%m-01') )  AS `cumulativePubs` from `daily` group by date_format(`daily`.`date`,'%Y-%m-01') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_total`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_total`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_total` AS select (sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_notif_contracts_change`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_notif_contracts_change`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_notif_contracts_change` AS with `a` as (select `hub_asset_storage_changed`.`block_number` AS `block_number` from `hub_asset_storage_changed` union all select `hub_contract_changed`.`block_number` AS `block_number` from `hub_contract_changed` union all select `hub_new_asset_storage`.`block_number` AS `block_number` from `hub_new_asset_storage` union all select `hub_new_contract`.`block_number` AS `block_number` from `hub_new_contract`) select cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date` from (`a` left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) >= (cast(curdate() as date) - interval 2 day)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_date`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_date`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_date` AS select `block`.`number` AS `number`,`block`.`timestamp` AS `timestamp`,cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour` from `block` where (`block`.`number` = (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table') limit 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_commit_submitted`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_commit_submitted`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_commit_submitted` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`service_agreement_v1_commit_submitted` `a` left join `service_agreement_v1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`commit_manager_v1_commit_submitted` `a` left join `commit_manager_v1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`commit_manager_v1_u1_commit_submitted` `a` left join `commit_manager_v1_u1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`state_index` = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_proof_submitted`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_proof_submitted`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_proof_submitted` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`service_agreement_v1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `service_agreement_v1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`proof_manager_v1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `proof_manager_v1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`block_number` <> 2881732) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`proof_manager_v1_u1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `proof_manager_v1_u1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_pub`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_pub`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_pub` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,ifnull(`d`.`create_asset_size`,0) AS `size`,ifnull(`d`.`create_asset_triples_number`,0) AS `triples_number`,ifnull(`d`.`create_asset_chunks_number`,0) AS `chunks_number`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `token_amount`,(case when (`d`.`create_asset_size` is not null) then cast(((((cast(`a`.`token_amount` as decimal(45,18)) / `a`.`epochs_number`) / 3) / (`d`.`create_asset_size` / 1024)) / 1000000000000000000) as decimal(27,18)) else 0 end) AS `bid`,`d`.`hash` AS `transaction_hash`,`a`.`transaction_index` AS `transaction_index`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,0 AS `state_index`,ifnull(`b`.`state`,0) AS `state`,NULL AS `previous_states`,ifnull(`d`.`from`,'0x0') AS `from` from (((`service_agreement_v1_service_agreement_v1_created` `a` left join `content_asset_asset_minted` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `content_asset_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_update_dead`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_update_dead`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_update_dead` AS select (case when (((select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block')) - (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table'))) > 100) then ((select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block')) - (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table'))) else NULL end) AS `sync_delta` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_sync_date`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_sync_date`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_sync_date` AS select `block`.`number` AS `number`,`block`.`timestamp` AS `timestamp`,cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour` from `block` where (`block`.`number` = (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block') limit 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_tx_all`
--

/*!50001 DROP VIEW IF EXISTS `v_tx_all`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_tx_all` AS select `assertion_tx`.`block_number` AS `block_number`,`assertion_tx`.`hash` AS `hash`,'assertion_tx' AS `table` from `assertion_tx` union all select `commit_manager_v1_tx`.`block_number` AS `block_number`,`commit_manager_v1_tx`.`hash` AS `hash`,'commit_manager_v1_tx' AS `commit_manager_v1_tx` from `commit_manager_v1_tx` union all select `commit_manager_v1_u1_tx`.`block_number` AS `block_number`,`commit_manager_v1_u1_tx`.`hash` AS `hash`,'commit_manager_v1_u1_tx' AS `commit_manager_v1_u1_tx` from `commit_manager_v1_u1_tx` union all select `content_asset_tx`.`block_number` AS `block_number`,`content_asset_tx`.`hash` AS `hash`,'content_asset_tx' AS `content_asset_tx` from `content_asset_tx` union all select `hub_tx`.`block_number` AS `block_number`,`hub_tx`.`hash` AS `hash`,'hub_tx' AS `hub_tx` from `hub_tx` union all select `identity_tx`.`block_number` AS `block_number`,`identity_tx`.`hash` AS `hash`,'identity_tx' AS `identity_tx` from `identity_tx` union all select `other_tx`.`block_number` AS `block_number`,`other_tx`.`hash` AS `hash`,'other_tx' AS `other_tx` from `other_tx` union all select `profile_tx`.`block_number` AS `block_number`,`profile_tx`.`hash` AS `hash`,'profile_tx' AS `profile_tx` from `profile_tx` union all select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`hash` AS `hash`,'proof_manager_v1_tx' AS `proof_manager_v1_tx` from `proof_manager_v1_tx` union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`hash` AS `hash`,'proof_manager_v1_u1_tx' AS `proof_manager_v1_u1_tx` from `proof_manager_v1_u1_tx` union all select `service_agreement_v1_tx`.`block_number` AS `block_number`,`service_agreement_v1_tx`.`hash` AS `hash`,'service_agreement_v1_tx' AS `service_agreement_v1_tx` from `service_agreement_v1_tx` union all select `sharding_table_tx`.`block_number` AS `block_number`,`sharding_table_tx`.`hash` AS `hash`,'sharding_table_tx' AS `sharding_table_tx` from `sharding_table_tx` union all select `staking_tx`.`block_number` AS `block_number`,`staking_tx`.`hash` AS `hash`,'staking_tx' AS `staking_tx` from `staking_tx` union all select `token_tx`.`block_number` AS `block_number`,`token_tx`.`hash` AS `hash`,'token_tx' AS `token_tx` from `token_tx` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-01-25  9:39:57
CREATE DATABASE  IF NOT EXISTS `sync_gnosis_testnet` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;
USE `sync_gnosis_testnet`;
-- MySQL dump 10.13  Distrib 8.0.32, for Win64 (x86_64)
--
-- Host: 127.0.0.1    Database: sync_gnosis_testnet
-- ------------------------------------------------------
-- Server version	8.0.32

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Temporary view structure for view `_raw_v_nodes_stats_daily`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_daily` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_last30d`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_last30d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_last7d`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_last7d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_last7d_raw`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_last7d_raw`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d_raw`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_last7d_raw` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_latest`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_latest`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_latest`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_latest` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_daily`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_daily` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_hourly`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_hourly`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_hourly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_hourly` AS SELECT 
 1 AS `date`,
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_last24h`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_last24h`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_last24h` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_last30d`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_last30d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_last7d`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_last7d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_monthly`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_monthly`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_monthly` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `assertion_assertion_created`
--

DROP TABLE IF EXISTS `assertion_assertion_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `assertion_assertion_created` (
  `assertion_id` char(66) DEFAULT NULL,
  `size` int unsigned DEFAULT NULL,
  `triples_number` mediumint unsigned DEFAULT NULL,
  `chunks_number` mediumint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_assertion_assertion_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_assertion_assertion_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `assertion_tx`
--

DROP TABLE IF EXISTS `assertion_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `assertion_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_assertion_assertion_id` char(66) DEFAULT NULL,
  `create_assertion_size` int unsigned DEFAULT NULL,
  `create_assertion_triples_number` mediumint unsigned DEFAULT NULL,
  `create_assertion_chunks_number` mediumint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_assertion_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_assertion_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `block`
--

DROP TABLE IF EXISTS `block`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `block` (
  `number` int unsigned NOT NULL,
  `timestamp` int unsigned DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`number`),
  UNIQUE KEY `v_nodes_activity` (`timestamp` DESC,`number`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_commit_submitted`
--

DROP TABLE IF EXISTS `commit_manager_v1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_commit_submitted` (
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `score` int unsigned DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`identity_id`,`epoch`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_commit_submitted_contract_id` (`contract_id`),
  KEY `fk_commit_manager_v1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_tx`
--

DROP TABLE IF EXISTS `commit_manager_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_tx_contract_id` (`to_id`),
  KEY `fk_commit_manager_v1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_commit_submitted`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_commit_submitted` (
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `score` int unsigned DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`epoch`,`identity_id`,`state_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_commit_submitted_contract_id` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_state_finalized`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_state_finalized`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_state_finalized` (
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `state` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`epoch`,`state_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_state_finalized_asset_contract_id` (`asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_state_finalized_contract_id` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_state_finalized_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_state_finalized_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_tx`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `submit_update_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_update_commit_keyword` char(64) DEFAULT NULL,
  `submit_update_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_update_commit_epoch` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `submit_update_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_tx_contract_id` (`to_id`),
  KEY `fk_commit_manager_v1_u1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_tx_update_commit_asset_contract_id` (`submit_update_commit_asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_update_commit_asset_contract_id` FOREIGN KEY (`submit_update_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_burnt`
--

DROP TABLE IF EXISTS `content_asset_asset_burnt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_burnt` (
  `token_id` bigint unsigned NOT NULL,
  `returned_token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_burnt_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_burnt_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_burnt_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_burnt_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_minted`
--

DROP TABLE IF EXISTS `content_asset_asset_minted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_minted` (
  `token_id` bigint unsigned NOT NULL,
  `state` char(66) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`state`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_minted_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_minted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_minted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_minted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_state_update_canceled`
--

DROP TABLE IF EXISTS `content_asset_asset_state_update_canceled`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_state_update_canceled` (
  `token_id` bigint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `returned_token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`state_index`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_state_update_canceled_asset_contract_id` (`asset_contract_id`),
  KEY `fk_content_asset_asset_state_update_canceled_contract_id` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_update_canceled_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_update_canceled_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_state_updated`
--

DROP TABLE IF EXISTS `content_asset_asset_state_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_state_updated` (
  `token_id` bigint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `update_token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`state_index`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_state_updated_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_state_updated_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_updated_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_storing_period_extended`
--

DROP TABLE IF EXISTS `content_asset_asset_storing_period_extended`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_storing_period_extended` (
  `token_id` bigint unsigned NOT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_storing_period_extended_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_storing_period_extended_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_storing_period_extended_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_storing_period_extended_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_update_payment_increased`
--

DROP TABLE IF EXISTS `content_asset_asset_update_payment_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_update_payment_increased` (
  `token_id` bigint unsigned NOT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_update_payment_increased_contract_id` (`contract_id`),
  KEY `f_content_asset_asset_update_payment_increased_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `f_content_asset_asset_update_payment_increased_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_update_payment_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_payment_increased`
--

DROP TABLE IF EXISTS `content_asset_payment_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_payment_increased` (
  `token_id` bigint unsigned NOT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_payment_increased_contract_id` (`contract_id`),
  KEY `fk_content_asset_payment_increased_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_payment_increased_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_payment_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_storage_transfer`
--

DROP TABLE IF EXISTS `content_asset_storage_transfer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_storage_transfer` (
  `from` char(42) DEFAULT NULL,
  `to` char(42) DEFAULT NULL,
  `token_id` bigint unsigned NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_storage_transfer_contract_id` (`contract_id`),
  CONSTRAINT `fk_content_asset_storage_transfer_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_storage_tx`
--

DROP TABLE IF EXISTS `content_asset_storage_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_storage_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_storage_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_content_asset_storage_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_tx`
--

DROP TABLE IF EXISTS `content_asset_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_asset_assertion_id` char(66) DEFAULT NULL,
  `create_asset_size` int unsigned DEFAULT NULL,
  `create_asset_triples_number` mediumint unsigned DEFAULT NULL,
  `create_asset_chunks_number` mediumint unsigned DEFAULT NULL,
  `create_asset_epochs_number` smallint unsigned DEFAULT NULL,
  `create_asset_token_amount` decimal(27,0) DEFAULT NULL,
  `create_asset_score_function_id` tinyint unsigned DEFAULT NULL,
  `create_asset_immutable_` tinyint unsigned DEFAULT NULL,
  `burn_asset_token_id` bigint unsigned DEFAULT NULL,
  `cancel_asset_state_update_token_id` bigint unsigned DEFAULT NULL,
  `extend_asset_storing_period_token_id` bigint unsigned DEFAULT NULL,
  `extend_asset_storing_period_epochs_number` smallint unsigned DEFAULT NULL,
  `extend_asset_storing_period_token_amount` decimal(27,0) DEFAULT NULL,
  `increase_asset_token_amount_token_id` bigint unsigned DEFAULT NULL,
  `increase_asset_token_amount_token_amount` decimal(27,0) DEFAULT NULL,
  `increase_asset_update_token_amount_token_id` bigint unsigned DEFAULT NULL,
  `increase_asset_update_token_amount_token_amount` decimal(27,0) DEFAULT NULL,
  `update_asset_state_token_id` bigint unsigned DEFAULT NULL,
  `update_asset_state_assertion_id` char(66) DEFAULT NULL,
  `update_asset_state_size` int unsigned DEFAULT NULL,
  `update_asset_state_triples_number` mediumint unsigned DEFAULT NULL,
  `update_asset_state_chunks_number` mediumint unsigned DEFAULT NULL,
  `update_asset_state_update_token_amount` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_content_asset_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `contracts`
--

DROP TABLE IF EXISTS `contracts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `contracts` (
  `contract_id` tinyint unsigned NOT NULL AUTO_INCREMENT,
  `contract_address` char(42) NOT NULL,
  PRIMARY KEY (`contract_id`),
  UNIQUE KEY `contract_address` (`contract_address`)
) ENGINE=InnoDB AUTO_INCREMENT=102 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_asset_storage_changed`
--

DROP TABLE IF EXISTS `hub_asset_storage_changed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_asset_storage_changed` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_hub_asset_storage_changed_contract_id` (`contract_id`),
  CONSTRAINT `fk_hub_asset_storage_changed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_contract_changed`
--

DROP TABLE IF EXISTS `hub_contract_changed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_contract_changed` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_contract_changed_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_contract_changed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_new_asset_storage`
--

DROP TABLE IF EXISTS `hub_new_asset_storage`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_new_asset_storage` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_new_asset_storage_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_new_asset_storage_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_new_contract`
--

DROP TABLE IF EXISTS `hub_new_contract`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_new_contract` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_new_contract_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_new_contract_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_tx`
--

DROP TABLE IF EXISTS `hub_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `set_contract_address_contract_name` varchar(255) DEFAULT NULL,
  `set_contract_address_new_contract_address` varchar(42) DEFAULT NULL,
  `set_asset_storage_address_asset_storage_name` varchar(255) DEFAULT NULL,
  `set_asset_storage_address_asset_storage_address` varchar(42) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_hub_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_hub_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_identity_created`
--

DROP TABLE IF EXISTS `identity_identity_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_identity_created` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `operational_key` char(66) DEFAULT NULL,
  `admin_key` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_identity_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_identity_identity_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_identity_deleted`
--

DROP TABLE IF EXISTS `identity_identity_deleted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_identity_deleted` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_identity_deleted_contract_id` (`contract_id`),
  CONSTRAINT `fk_identity_identity_deleted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_key_added`
--

DROP TABLE IF EXISTS `identity_storage_key_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_key_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `key` char(66) DEFAULT NULL,
  `purpose` tinyint unsigned DEFAULT NULL,
  `key_type` tinyint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_identity_storage_key_added_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_identity_storage_key_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_key_removed`
--

DROP TABLE IF EXISTS `identity_storage_key_removed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_key_removed` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `key` char(66) DEFAULT NULL,
  `purpose` tinyint unsigned DEFAULT NULL,
  `key_type` tinyint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_identity_storage_key_removed_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_identity_storage_key_removed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_tx`
--

DROP TABLE IF EXISTS `identity_storage_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `delete_identity` smallint unsigned DEFAULT NULL,
  `set_operational_key_identity_id_operational_key` char(66) DEFAULT NULL,
  `set_operational_key_identity_id_identity_id` smallint unsigned DEFAULT NULL,
  `remote_operational_key_identity_id_operational_key` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_storage_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_identity_storage_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_tx`
--

DROP TABLE IF EXISTS `identity_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_key_identity_id` smallint unsigned DEFAULT NULL,
  `add_key_key` char(66) DEFAULT NULL,
  `add_key_key_purpose` tinyint unsigned DEFAULT NULL,
  `add_key_key_type` tinyint unsigned DEFAULT NULL,
  `create_identity_operational` char(42) DEFAULT NULL,
  `create_identity_admin` char(42) DEFAULT NULL,
  `delete_identity_identity_id` smallint unsigned DEFAULT NULL,
  `remove_key_identity_id` smallint unsigned DEFAULT NULL,
  `remove_key_key` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_identity_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `manual_bad_txs`
--

DROP TABLE IF EXISTS `manual_bad_txs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `manual_bad_txs` (
  `transaction_hash` varchar(66) NOT NULL,
  `comment` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`transaction_hash`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `other_tx`
--

DROP TABLE IF EXISTS `other_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `other_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `input` text NOT NULL,
  `to` char(42) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_ask_updated`
--

DROP TABLE IF EXISTS `profile_ask_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_ask_updated` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `ask` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_ask_updated_contract_id` (`contract_id`),
  KEY `v_nodes` (`identity_id`,`ask`,`block_number`),
  CONSTRAINT `fk_profile_ask_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_profile_created`
--

DROP TABLE IF EXISTS `profile_profile_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_profile_created` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_profile_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_profile_profile_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_profile_deleted`
--

DROP TABLE IF EXISTS `profile_profile_deleted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_profile_deleted` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_profile_deleted_contract_id` (`contract_id`),
  CONSTRAINT `fk_profile_profile_deleted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_tx`
--

DROP TABLE IF EXISTS `profile_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_profile_admin_wallet` char(42) DEFAULT NULL,
  `create_profile_node_id` char(94) DEFAULT NULL,
  `create_profile_shares_token_name` varchar(255) DEFAULT NULL,
  `create_profile_shares_token_symbol` varchar(255) DEFAULT NULL,
  `set_ask_identity_id` smallint unsigned DEFAULT NULL,
  `set_ask_ask` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_profile_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_proof_submitted`
--

DROP TABLE IF EXISTS `proof_manager_v1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_proof_manager_v1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_tx`
--

DROP TABLE IF EXISTS `proof_manager_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `get_challenge_sender` char(42) DEFAULT NULL,
  `get_challenge_token_id` bigint unsigned DEFAULT NULL,
  `get_challenge_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `get_challenge_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_tx_contract_id` (`to_id`),
  KEY `fk_proof_manager_v1_tx_get_challenge_asset_contract_id` (`get_challenge_asset_contract_id`),
  KEY `fk_proof_manager_v1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_get_challenge_asset_contract_id` FOREIGN KEY (`get_challenge_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_u1_proof_submitted`
--

DROP TABLE IF EXISTS `proof_manager_v1_u1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_u1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `state_index` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_u1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_proof_manager_v1_u1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_u1_tx`
--

DROP TABLE IF EXISTS `proof_manager_v1_u1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_u1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `get_challenge_token_id` bigint unsigned DEFAULT NULL,
  `get_challenge_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `get_challenge_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_u1_tx_contract_id` (`to_id`),
  KEY `fk_proof_manager_v1_u1_tx_get_challenge_asset_contract_id` (`get_challenge_asset_contract_id`),
  KEY `fk_proof_manager_v1_u1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_get_challenge_asset_contract_id` FOREIGN KEY (`get_challenge_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_commit_submitted`
--

DROP TABLE IF EXISTS `service_agreement_v1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_commit_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `score` int unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_commit_submitted_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_proof_submitted`
--

DROP TABLE IF EXISTS `service_agreement_v1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_created`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_created` (
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `start_time` int unsigned DEFAULT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `epoch_length` int unsigned DEFAULT NULL,
  `token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_service_agreement_v1_created_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_created_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_created_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_service_agreement_v1_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_extended`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_extended`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_extended` (
  `agreement_id` char(66) DEFAULT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_ervice_agreement_v1_service_agreement_v1_extended_contract_id` (`contract_id`),
  CONSTRAINT `fk_ervice_agreement_v1_service_agreement_v1_extended_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_reward_raised`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_reward_raised`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_reward_raised` (
  `agreement_id` char(66) DEFAULT NULL,
  `token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_e_agreement_v1_service_agreement_v1_reward_raised_contract_id` (`contract_id`),
  CONSTRAINT `fk_e_agreement_v1_service_agreement_v1_reward_raised_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_terminated`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_terminated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_terminated` (
  `agreement_id` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_vice_agreement_v1_service_agreement_v1_terminated_contract_id` (`contract_id`),
  CONSTRAINT `fk_vice_agreement_v1_service_agreement_v1_terminated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_update_reward_raised`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_update_reward_raised`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_update_reward_raised` (
  `agreement_id` char(66) DEFAULT NULL,
  `update_token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_ment_v1_service_agreement_v1_update_reward_raised_contract_id` (`contract_id`),
  CONSTRAINT `fk_ment_v1_service_agreement_v1_update_reward_raised_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_tx`
--

DROP TABLE IF EXISTS `service_agreement_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_tokens_asset_owner` char(42) DEFAULT NULL,
  `add_tokens_agreement_id` char(66) DEFAULT NULL,
  `add_tokens_token_amount` decimal(27,0) DEFAULT NULL,
  `add_update_tokens_asset_owner` char(42) DEFAULT NULL,
  `add_update_tokens_agreement_id` char(66) DEFAULT NULL,
  `add_update_tokens_token_amount` decimal(27,0) DEFAULT NULL,
  `create_service_agreement_asset_creator` char(42) DEFAULT NULL,
  `create_service_agreement_token_id` bigint unsigned DEFAULT NULL,
  `create_service_agreement_keyword` char(64) DEFAULT NULL,
  `create_service_agreement_hash_function_id` tinyint unsigned DEFAULT NULL,
  `create_service_agreement_epochs_number` smallint unsigned DEFAULT NULL,
  `create_service_agreement_token_amount` decimal(27,0) DEFAULT NULL,
  `create_service_agreement_score_function_id` tinyint unsigned DEFAULT NULL,
  `extend_storing_period_asset_owner` char(42) DEFAULT NULL,
  `extend_storing_agreement_id` char(66) DEFAULT NULL,
  `extend_storing_epochs_number` smallint unsigned DEFAULT NULL,
  `extend_storing_token_amount` decimal(27,0) DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `terminate_agreement_asset_owner` char(42) DEFAULT NULL,
  `terminate_agreement_agreement_id` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `create_service_agreement_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_tx_contract_id` (`to_id`),
  KEY `fk_service_agreement_v1_tx_create_asset_contract_id` (`create_service_agreement_asset_contract_id`),
  KEY `fk_service_agreement_v1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  KEY `fk_service_agreement_v1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_create_asset_contract_id` FOREIGN KEY (`create_service_agreement_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_node_added`
--

DROP TABLE IF EXISTS `sharding_table_node_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_node_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `ask` decimal(27,0) DEFAULT NULL,
  `stake` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_node_added_contract_id` (`contract_id`),
  CONSTRAINT `fk_sharding_table_node_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_node_removed`
--

DROP TABLE IF EXISTS `sharding_table_node_removed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_node_removed` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_node_removed_contract_id` (`contract_id`),
  CONSTRAINT `fk_sharding_table_node_removed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_tx`
--

DROP TABLE IF EXISTS `sharding_table_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `push_back_identity_id` smallint unsigned DEFAULT NULL,
  `push_front_identity_id` smallint unsigned DEFAULT NULL,
  `remove_node_identity_id` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_sharding_table_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_commit_submitted`
--

DROP TABLE IF EXISTS `staging_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_commit_submitted` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `hash_function_id` tinyint unsigned NOT NULL,
  `epoch` smallint unsigned NOT NULL,
  `score` int unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `rank` smallint DEFAULT NULL,
  `estimated_earnings_any_epoch` decimal(27,18) DEFAULT NULL,
  `estimated_earnings_1st_epoch_only` decimal(27,18) DEFAULT NULL,
  `commit_any_epoch` bit(1) DEFAULT NULL,
  `commit_1st_epoch` bit(1) DEFAULT NULL,
  `commit_any_epoch_incl_out_of_top3` bit(1) DEFAULT NULL,
  `commit_1st_epoch_incl_out_of_top3` bit(1) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`,`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_sp_update_staging1` (`block_number`,`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`score`,`transaction_index`),
  KEY `idx_sp_update_staging2` (`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`),
  KEY `v_nodes_stats_hourly_7d` (`block_date`,`identity_id`,`block_ts_hour`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`),
  KEY `v_chart_earnings_payouts_daily` (`block_date`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`),
  KEY `v_nodes_assets` (`identity_id`,`token_id`,`asset_contract_id`,`epoch`),
  KEY `v_nodes_stats_hourly_7d_avgnode` (`block_date`,`block_ts_hour`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_proof_submitted`
--

DROP TABLE IF EXISTS `staging_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_proof_submitted` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `epoch` smallint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `transaction_index` smallint NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `value` decimal(27,18) NOT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`,`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_sp_update_staging1` (`block_number`,`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`value`,`transaction_index`),
  KEY `v_nodes_stats_hourly_7d` (`block_date`,`identity_id`,`block_ts_hour`,`value`),
  KEY `v_chart_earnings_payouts_daily` (`block_date`,`value`),
  KEY `v_nodes_assets` (`identity_id`,`token_id`,`asset_contract_id`,`epoch`,`value`),
  KEY `v_nodes_stats_hourly_7d_avgnode` (`block_date`,`block_ts_hour`,`value`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_pub`
--

DROP TABLE IF EXISTS `staging_pub`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_pub` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `size` int unsigned NOT NULL,
  `triples_number` mediumint unsigned NOT NULL,
  `chunks_number` mediumint unsigned NOT NULL,
  `hash_function_id` tinyint unsigned NOT NULL,
  `epochs_number` smallint unsigned NOT NULL,
  `epoch_length` int unsigned NOT NULL,
  `token_amount` decimal(27,18) NOT NULL,
  `bid` decimal(27,18) NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `state` char(66) NOT NULL,
  `previous_states` varchar(8000) DEFAULT NULL,
  `from` char(42) NOT NULL,
  `owner` char(42) DEFAULT NULL,
  `winners` varchar(2300) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  KEY `idx_v_pubs_stats` (`block_date`,`size`,`epochs_number`,`token_amount`,`bid`),
  KEY `idx_v_pubs_stats_hourly` (`block_date`,`block_ts_hour`,`size`,`epochs_number`,`token_amount`,`bid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_stake`
--

DROP TABLE IF EXISTS `staging_stake`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_stake` (
  `identity_id` smallint unsigned NOT NULL,
  `block_date` date NOT NULL,
  `block_ts_hour` datetime NOT NULL,
  `stake_change` decimal(27,18) DEFAULT NULL,
  `stake` decimal(27,18) DEFAULT NULL,
  `ask` decimal(27,18) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`),
  UNIQUE KEY `v_nodes` (`block_date`,`block_ts_hour`,`identity_id`,`stake`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_accumulated_operator_fee_increased`
--

DROP TABLE IF EXISTS `staking_accumulated_operator_fee_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_accumulated_operator_fee_increased` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `old_accumulated_operator_fee` decimal(27,0) DEFAULT NULL,
  `new_accumulated_operator_fee` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_accumulated_operator_fee_increased_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_accumulated_operator_fee_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_accumulated_operator_fee_updated`
--

DROP TABLE IF EXISTS `staking_accumulated_operator_fee_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_accumulated_operator_fee_updated` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `operator_fee` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_accumulated_operator_fee_updated_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_accumulated_operator_fee_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_reward_added`
--

DROP TABLE IF EXISTS `staking_reward_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_reward_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `reward_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_reward_added_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`reward_amount`),
  CONSTRAINT `fk_staking_reward_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_increased`
--

DROP TABLE IF EXISTS `staking_stake_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_increased` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `old_stake` decimal(27,0) DEFAULT NULL,
  `new_stake` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_increased_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`new_stake`,`old_stake`),
  CONSTRAINT `fk_staking_stake_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_withdrawal_started`
--

DROP TABLE IF EXISTS `staking_stake_withdrawal_started`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_withdrawal_started` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `old_stake` decimal(27,0) DEFAULT NULL,
  `new_stake` decimal(27,0) DEFAULT NULL,
  `stake_amount` decimal(27,0) DEFAULT NULL,
  `withdrawal_period_end` bigint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_withdrawal_started_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_stake_withdrawal_started_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_withdrawn`
--

DROP TABLE IF EXISTS `staking_stake_withdrawn`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_withdrawn` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `withdrawn_stake_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_withdrawn_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`withdrawn_stake_amount`),
  CONSTRAINT `fk_staking_stake_withdrawn_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_tx`
--

DROP TABLE IF EXISTS `staking_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_reward_agreement_id` char(66) DEFAULT NULL,
  `add_reward_identity_id` smallint unsigned DEFAULT NULL,
  `add_reward_reward_amount` decimal(27,0) DEFAULT NULL,
  `add_stake_identity_id` smallint unsigned DEFAULT NULL,
  `add_stake_stake_amount` decimal(27,0) DEFAULT NULL,
  `set_operator_fee_identity_id` smallint unsigned DEFAULT NULL,
  `set_operator_fee_operator_fee` decimal(27,0) DEFAULT NULL,
  `slash_identity_id` smallint unsigned DEFAULT NULL,
  `start_stake_withdrawal_identity_id` smallint unsigned DEFAULT NULL,
  `start_stake_withdrawal_shares_to_burn` decimal(27,0) DEFAULT NULL,
  `withdraw_stake_identity_id` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_staking_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `stats_node`
--

DROP TABLE IF EXISTS `stats_node`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `stats_node` (
  `identity_id` smallint unsigned NOT NULL,
  `block_date` date NOT NULL,
  `node_stake` decimal(27,18) DEFAULT '0.000000000000000000',
  `commit_any_epoch` int unsigned DEFAULT '0',
  `commit_1st_epoch` int unsigned DEFAULT '0',
  `estimated_earnings_any_epoch` decimal(27,18) DEFAULT '0.000000000000000000',
  `estimated_earnings_1st_epoch_only` decimal(27,18) DEFAULT '0.000000000000000000',
  `payouts` decimal(27,18) DEFAULT '0.000000000000000000',
  `proofs_submitted` int unsigned DEFAULT '0',
  `ask` decimal(27,18) DEFAULT '0.000000000000000000',
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`),
  KEY `block_date` (`block_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `stats_pub`
--

DROP TABLE IF EXISTS `stats_pub`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `stats_pub` (
  `block_date` date NOT NULL,
  `block_ts_hour` datetime NOT NULL,
  `total_size` int unsigned DEFAULT '0',
  `total_epochs` int unsigned DEFAULT '0',
  `total_bid` decimal(27,18) DEFAULT '0.000000000000000000',
  `total_pubs` int unsigned DEFAULT '0',
  `total_trac_spent` decimal(27,18) DEFAULT '0.000000000000000000',
  `private_pubs` int unsigned DEFAULT '0',
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`block_date`,`block_ts_hour`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sync_status`
--

DROP TABLE IF EXISTS `sync_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sync_status` (
  `parameter` varchar(255) DEFAULT NULL,
  `block_num` int DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_approval`
--

DROP TABLE IF EXISTS `token_approval`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_approval` (
  `owner` char(42) DEFAULT NULL,
  `spender` char(42) DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_token_approval_contract_id` (`contract_id`),
  CONSTRAINT `fk_token_approval_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_transfer`
--

DROP TABLE IF EXISTS `token_transfer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_transfer` (
  `from` char(42) DEFAULT NULL,
  `to` char(42) DEFAULT NULL,
  `value` decimal(30,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`,`log_index`),
  KEY `fk_token_transfer_contract_id` (`contract_id`),
  CONSTRAINT `fk_token_transfer_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_tx`
--

DROP TABLE IF EXISTS `token_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `transfer_to` char(42) DEFAULT NULL,
  `transfer_amount` decimal(27,0) DEFAULT NULL,
  `transfer_from_from` char(42) DEFAULT NULL,
  `transfer_from_to` char(42) DEFAULT NULL,
  `transfer_from_amount` decimal(27,0) DEFAULT NULL,
  `allowance_owner` char(42) DEFAULT NULL,
  `allowance_spender` char(42) DEFAULT NULL,
  `approve_spender` char(42) DEFAULT NULL,
  `approve_amount` decimal(27,0) DEFAULT NULL,
  `mint_to` char(42) DEFAULT NULL,
  `mint_amount` decimal(30,0) DEFAULT NULL,
  `decrease_allowance_subtracted_value` decimal(27,0) DEFAULT NULL,
  `increase_allowance_added_value` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `increase_allowance_spender_id` tinyint unsigned DEFAULT NULL,
  `decrease_allowance_spender_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_token_tx_contract_id` (`to_id`),
  KEY `fk_token_tx_increase_allowance_spender_id` (`increase_allowance_spender_id`),
  KEY `fk_token_tx_decrease_allowance_spender_id` (`decrease_allowance_spender_id`),
  CONSTRAINT `fk_token_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_token_tx_decrease_allowance_spender_id` FOREIGN KEY (`decrease_allowance_spender_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_token_tx_increase_allowance_spender_id` FOREIGN KEY (`increase_allowance_spender_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Temporary view structure for view `v_asset_history`
--

DROP TABLE IF EXISTS `v_asset_history`;
/*!50001 DROP VIEW IF EXISTS `v_asset_history`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_asset_history` AS SELECT 
 1 AS `event`,
 1 AS `token_id`,
 1 AS `asset_contract`,
 1 AS `log_index`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `address`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `block_ts`,
 1 AS `block_date`,
 1 AS `block_ts_hour`,
 1 AS `minted_state`,
 1 AS `minted_keyword`,
 1 AS `minted_hash_function_id`,
 1 AS `minted_start_time`,
 1 AS `minted_epochs_number`,
 1 AS `minted_epoch_length`,
 1 AS `minted_token_amount`,
 1 AS `minted_size`,
 1 AS `minted_triples_number`,
 1 AS `minted_chunks_number`,
 1 AS `transfer_from`,
 1 AS `transfer_to`,
 1 AS `state_updated_state_index`,
 1 AS `state_updated_update_token_amount`,
 1 AS `state_updated_finalized`,
 1 AS `update_cancelled_state_index`,
 1 AS `update_cancelled_returned_token_amount`,
 1 AS `storing_period_extended_epochs_number`,
 1 AS `storing_period_extended_token_amount`,
 1 AS `asset_update_payment_increased_token_amount`,
 1 AS `payment_increased_token_amount`,
 1 AS `burnt_returned_token_amount`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes`
--

DROP TABLE IF EXISTS `v_nodes`;
/*!50001 DROP VIEW IF EXISTS `v_nodes`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `createProfile_adminWallet`,
 1 AS `createProfile_adminWallet_hash`,
 1 AS `current_adminWallet_hashes`,
 1 AS `createProfile_blockNumber`,
 1 AS `createProfile_txHash`,
 1 AS `createProfile_ts`,
 1 AS `createProfile_date`,
 1 AS `nodeAgeDays`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_activity_last1min`
--

DROP TABLE IF EXISTS `v_nodes_activity_last1min`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last1min`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_activity_last1min` AS SELECT 
 1 AS `chain_id`,
 1 AS `nodeId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_activity_last24h`
--

DROP TABLE IF EXISTS `v_nodes_activity_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_activity_last24h` AS SELECT 
 1 AS `chain_id`,
 1 AS `nodeId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_barebone`
--

DROP TABLE IF EXISTS `v_nodes_barebone`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_barebone`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_barebone` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `createProfile_adminWallet`,
 1 AS `createProfile_adminWallet_hash`,
 1 AS `current_adminWallet_hashes`,
 1 AS `createProfile_blockNumber`,
 1 AS `createProfile_txHash`,
 1 AS `createProfile_ts`,
 1 AS `createProfile_date`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stake`
--

DROP TABLE IF EXISTS `v_nodes_stake`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stake`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stake` AS SELECT 
 1 AS `nodeId`,
 1 AS `date`,
 1 AS `nodeStake`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_daily`
--

DROP TABLE IF EXISTS `v_nodes_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_daily` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_daily`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_daily`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_daily` AS SELECT 
 1 AS `date`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_hourly_7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_hourly_7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_hourly_7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_hourly_7d` AS SELECT 
 1 AS `date`,
 1 AS `datetime`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_monthly`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_monthly` AS SELECT 
 1 AS `date`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_total`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_total`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_total`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_total` AS SELECT 
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `proofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_hourly_7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_hourly_7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_hourly_7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_hourly_7d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `datetime`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last1h`
--

DROP TABLE IF EXISTS `v_nodes_stats_last1h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last1h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last1h` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last24h`
--

DROP TABLE IF EXISTS `v_nodes_stats_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last24h` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last30d`
--

DROP TABLE IF EXISTS `v_nodes_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last30d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last7d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_latest`
--

DROP TABLE IF EXISTS `v_nodes_stats_latest`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_latest`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_latest` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_monthly`
--

DROP TABLE IF EXISTS `v_nodes_stats_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_monthly` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs`
--

DROP TABLE IF EXISTS `v_pubs`;
/*!50001 DROP VIEW IF EXISTS `v_pubs`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs` AS SELECT 
 1 AS `contract_address`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `UAL`,
 1 AS `chain_id`,
 1 AS `chain_name`,
 1 AS `size`,
 1 AS `triples_number`,
 1 AS `chunks_number`,
 1 AS `hash_function_id`,
 1 AS `epochs_number`,
 1 AS `epoch_length`,
 1 AS `epoch_length_days`,
 1 AS `token_amount`,
 1 AS `bid`,
 1 AS `transaction_hash`,
 1 AS `transaction_index`,
 1 AS `block_number`,
 1 AS `block_timestamp`,
 1 AS `block_ts`,
 1 AS `block_date`,
 1 AS `block_ts_hour`,
 1 AS `state_index`,
 1 AS `state`,
 1 AS `previous_states`,
 1 AS `publisher`,
 1 AS `publisher_short`,
 1 AS `owner`,
 1 AS `winners`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_activity_last1min`
--

DROP TABLE IF EXISTS `v_pubs_activity_last1min`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last1min`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_activity_last1min` AS SELECT 
 1 AS `chain_id`,
 1 AS `signer`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_activity_last24h`
--

DROP TABLE IF EXISTS `v_pubs_activity_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_activity_last24h` AS SELECT 
 1 AS `chain_id`,
 1 AS `signer`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_daily`
--

DROP TABLE IF EXISTS `v_pubs_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_daily` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_hourly`
--

DROP TABLE IF EXISTS `v_pubs_stats_hourly`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_hourly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_hourly` AS SELECT 
 1 AS `date`,
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last1h`
--

DROP TABLE IF EXISTS `v_pubs_stats_last1h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last1h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last1h` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last24h`
--

DROP TABLE IF EXISTS `v_pubs_stats_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last24h` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last30d`
--

DROP TABLE IF EXISTS `v_pubs_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last30d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last7d`
--

DROP TABLE IF EXISTS `v_pubs_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last7d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_monthly`
--

DROP TABLE IF EXISTS `v_pubs_stats_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_monthly` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_total`
--

DROP TABLE IF EXISTS `v_pubs_stats_total`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_total`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_total` AS SELECT 
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_notif_contracts_change`
--

DROP TABLE IF EXISTS `v_sys_notif_contracts_change`;
/*!50001 DROP VIEW IF EXISTS `v_sys_notif_contracts_change`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_notif_contracts_change` AS SELECT 
 1 AS `block_date`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_date`
--

DROP TABLE IF EXISTS `v_sys_staging_date`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_date`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_date` AS SELECT 
 1 AS `number`,
 1 AS `timestamp`,
 1 AS `block_date`,
 1 AS `block_ts`,
 1 AS `block_ts_hour`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_commit_submitted`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_commit_submitted`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_commit_submitted`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_commit_submitted` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `identity_id`,
 1 AS `keyword`,
 1 AS `hash_function_id`,
 1 AS `epoch`,
 1 AS `score`,
 1 AS `state_index`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `contract_id`,
 1 AS `block_number`,
 1 AS `timestamp`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_proof_submitted`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_proof_submitted`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_proof_submitted`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_proof_submitted` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `epoch`,
 1 AS `identity_id`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `contract_id`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `value`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_pub`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_pub`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_pub`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_pub` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `size`,
 1 AS `triples_number`,
 1 AS `chunks_number`,
 1 AS `hash_function_id`,
 1 AS `epochs_number`,
 1 AS `epoch_length`,
 1 AS `token_amount`,
 1 AS `bid`,
 1 AS `transaction_hash`,
 1 AS `transaction_index`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `state_index`,
 1 AS `state`,
 1 AS `previous_states`,
 1 AS `from`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_update_dead`
--

DROP TABLE IF EXISTS `v_sys_staging_update_dead`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_update_dead`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_update_dead` AS SELECT 
 1 AS `sync_delta`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_sync_date`
--

DROP TABLE IF EXISTS `v_sys_sync_date`;
/*!50001 DROP VIEW IF EXISTS `v_sys_sync_date`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_sync_date` AS SELECT 
 1 AS `number`,
 1 AS `timestamp`,
 1 AS `block_date`,
 1 AS `block_ts`,
 1 AS `block_ts_hour`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_tx_all`
--

DROP TABLE IF EXISTS `v_tx_all`;
/*!50001 DROP VIEW IF EXISTS `v_tx_all`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_tx_all` AS SELECT 
 1 AS `block_number`,
 1 AS `hash`,
 1 AS `table`*/;
SET character_set_client = @saved_cs_client;

--
-- Dumping events for database 'sync_gnosis_testnet'
--
/*!50106 SET @save_time_zone= @@TIME_ZONE */ ;
/*!50106 DROP EVENT IF EXISTS `update_staging_tables` */;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8mb4 */ ;;
/*!50003 SET character_set_results = utf8mb4 */ ;;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `update_staging_tables` ON SCHEDULE EVERY 30 SECOND STARTS '2023-07-04 08:54:21' ON COMPLETION NOT PRESERVE ENABLE DO CALL sp_update_staging() */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
DELIMITER ;
/*!50106 SET TIME_ZONE= @save_time_zone */ ;

--
-- Dumping routines for database 'sync_gnosis_testnet'
--
/*!50003 DROP PROCEDURE IF EXISTS `sp_clear_all_tables` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_clear_all_tables`(IN procedure_input varchar(250))
BEGIN
    IF procedure_input = 'just do it' THEN
        DELETE FROM `contracts`;
        DELETE FROM `sync_status`;
        DELETE FROM `block`;
        DELETE FROM `other_tx`;
		DELETE FROM `assertion_tx`;
		DELETE FROM `assertion_assertion_created`;
		DELETE FROM `commit_manager_v1_tx`;
		DELETE FROM `commit_manager_v1_commit_submitted`;
		DELETE FROM `commit_manager_v1_u1_tx`;
		DELETE FROM `commit_manager_v1_u1_commit_submitted`;
        DELETE FROM `commit_manager_v1_u1_state_finalized`;
		DELETE FROM `content_asset_tx`;
		DELETE FROM `content_asset_asset_burnt`;
		DELETE FROM `content_asset_asset_minted`;
		DELETE FROM `content_asset_payment_increased`;
		DELETE FROM `content_asset_asset_state_updated`;
		DELETE FROM `content_asset_asset_state_update_canceled`;
		DELETE FROM `content_asset_asset_storing_period_extended`;
		DELETE FROM `content_asset_asset_update_payment_increased`;
		DELETE FROM `hub_tx`;
		DELETE FROM `hub_new_contract`;
		DELETE FROM `hub_asset_storage_changed`;
		DELETE FROM `hub_contract_changed`;
		DELETE FROM `hub_new_asset_storage`;
		DELETE FROM `identity_tx`;
		DELETE FROM `identity_identity_created`;
		DELETE FROM `identity_identity_deleted`;
		DELETE FROM `identity_storage_tx`;
		DELETE FROM `identity_storage_key_added`;
		DELETE FROM `identity_storage_key_removed`;
		DELETE FROM `profile_tx`;
		DELETE FROM `profile_ask_updated`;
		DELETE FROM `profile_profile_created`;
		DELETE FROM `profile_profile_deleted`;
		DELETE FROM `proof_manager_v1_tx`;
		DELETE FROM `proof_manager_v1_proof_submitted`;
		DELETE FROM `proof_manager_v1_u1_tx`;
		DELETE FROM `proof_manager_v1_u1_proof_submitted`;
		DELETE FROM `staking_tx`;
		DELETE FROM `staking_accumulated_operator_fee_increased`;
		DELETE FROM `staking_accumulated_operator_fee_updated`;
		DELETE FROM `staking_stake_increased`;
		DELETE FROM `staking_stake_withdrawal_started`;
		DELETE FROM `staking_stake_withdrawn`;
        DELETE FROM `staking_reward_added`;
		DELETE FROM `sharding_table_tx`;
		DELETE FROM `sharding_table_node_added`;
		DELETE FROM `sharding_table_node_removed`;
		DELETE FROM `service_agreement_v1_tx`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_created`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_extended`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_reward_raised`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_terminated`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_update_reward_raised`;
		DELETE FROM `service_agreement_v1_proof_submitted`;
        DELETE FROM `service_agreement_v1_commit_submitted`;
		DELETE FROM `token_tx`;
		DELETE FROM `token_approval`;
		DELETE FROM `token_transfer`;
        
        -- Output a success message
        SELECT 'Data deleted successfully.';
    ELSE
        -- Output a message if the input does not match the condition
        SELECT 'Invalid procedure input.';
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_delete_from_tables_starting_block` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delete_from_tables_starting_block`(IN block_num int)
BEGIN
	
    DELETE FROM `block` where `number`>=block_num;
	DELETE FROM `other_tx` where block_number >= block_num;
	DELETE FROM `assertion_tx` where block_number >= block_num;
	DELETE FROM `assertion_assertion_created` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_tx` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_commit_submitted` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_u1_tx` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_u1_commit_submitted` where block_number >= block_num;
    DELETE FROM `commit_manager_v1_u1_state_finalized` where block_number >= block_num;
	DELETE FROM `content_asset_tx` where block_number >= block_num;
	DELETE FROM `content_asset_asset_burnt` where block_number >= block_num;
	DELETE FROM `content_asset_asset_minted` where block_number >= block_num;
	DELETE FROM `content_asset_payment_increased` where block_number >= block_num;
	DELETE FROM `content_asset_asset_state_updated` where block_number >= block_num;
	DELETE FROM `content_asset_asset_state_update_canceled` where block_number >= block_num;
	DELETE FROM `content_asset_asset_storing_period_extended` where block_number >= block_num;
	DELETE FROM `content_asset_asset_update_payment_increased` where block_number >= block_num;
	DELETE FROM `hub_tx` where block_number >= block_num;
	DELETE FROM `hub_new_contract` where block_number >= block_num;
	DELETE FROM `hub_asset_storage_changed` where block_number >= block_num;
	DELETE FROM `hub_contract_changed` where block_number >= block_num;
	DELETE FROM `hub_new_asset_storage` where block_number >= block_num;
	DELETE FROM `identity_tx` where block_number >= block_num;
	DELETE FROM `identity_identity_created` where block_number >= block_num;
	DELETE FROM `identity_identity_deleted` where block_number >= block_num;
	DELETE FROM `identity_storage_tx` where block_number >= block_num;
	DELETE FROM `identity_storage_key_added` where block_number >= block_num;
	DELETE FROM `identity_storage_key_removed` where block_number >= block_num;
	DELETE FROM `profile_tx` where block_number >= block_num;
	DELETE FROM `profile_ask_updated` where block_number >= block_num;
	DELETE FROM `profile_profile_created` where block_number >= block_num;
	DELETE FROM `profile_profile_deleted` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_tx` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_proof_submitted` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_u1_tx` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_u1_proof_submitted` where block_number >= block_num;
	DELETE FROM `staking_tx` where block_number >= block_num;
	DELETE FROM `staking_accumulated_operator_fee_increased` where block_number >= block_num;
	DELETE FROM `staking_accumulated_operator_fee_updated` where block_number >= block_num;
	DELETE FROM `staking_stake_increased` where block_number >= block_num;
	DELETE FROM `staking_stake_withdrawal_started` where block_number >= block_num;
	DELETE FROM `staking_stake_withdrawn` where block_number >= block_num;
    DELETE FROM `staking_reward_added` where block_number >= block_num;
	DELETE FROM `sharding_table_tx` where block_number >= block_num;
	DELETE FROM `sharding_table_node_added` where block_number >= block_num;
	DELETE FROM `sharding_table_node_removed` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_tx` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_created` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_extended` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_reward_raised` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_terminated` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_update_reward_raised` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_proof_submitted` where block_number >= block_num;
    DELETE FROM `service_agreement_v1_commit_submitted` where block_number >= block_num;
	DELETE FROM `token_tx` where block_number >= block_num;
	DELETE FROM `token_approval` where block_number >= block_num;
	DELETE FROM `token_transfer` where block_number >= block_num;
    DELETE FROM `content_asset_storage_transfer` where block_number >= block_num;
    DELETE FROM `content_asset_storage_tx` where block_number >= block_num;
    update sync_status set block_num = (block_num-1) where parameter = 'last_synced_block';

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_list_contracts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_list_contracts`(IN b1 int, IN win int)
BEGIN
#SET @b1 = 3151717;
#SET @win = 100;    
with 
new_and_changed as (
select contract_name, block_number, new_contract_address from hub_new_contract
UNION ALL select contract_name, block_number, new_contract_address from hub_contract_changed
UNION ALL select contract_name, block_number, new_contract_address  from hub_new_asset_storage
UNION ALL select contract_name, block_number, new_contract_address  from hub_asset_storage_changed
),

cte_a as (SELECT 
row_number() over (partition by contract_name order by block_number desc) as rn
, case when b1 <= block_number then 1 else 0 end as 'range_starts_before'
, case when b1 + win > block_number then 1 else 0 end as 'range_ends_after'
, contract_name, new_contract_address as 'contract_address', block_number
from new_and_changed
where block_number < b1 + win
),

cte_b as (select 
case 
    when range_starts_before = 1 and range_ends_after = 1 then 'block_range_hit_new_contract'
    when rn = 1 then 'latest_contract'
    end as 'label'
,block_number,contract_name,contract_address#, rn, range_starts_before, range_ends_after
from cte_a),

cte_c as (
select 
contract_address
,contract_name
,case when Lead(`label`,1) over (partition by contract_name order by block_number) = 'block_range_hit_new_contract' or `label` in ('latest_contract','block_range_hit_new_contract') then 1 else 0 end as 'final'
,Lead(`label`,1) over (partition by contract_name order by block_number) as 'p'
,`label`
,block_number
from cte_b
),

cte_d as (
select distinct contract_address,contract_name from (
select contract_address,contract_name from cte_c where final=1) as t 
UNION select contract_address, 'Hub' from contracts where contract_id=1
)

select a.contract_address, a.contract_name, b.contract_id
from cte_d as a
left join contracts as b on a.contract_address=b.contract_address
;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_standard_modification_event` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_standard_modification_event`(IN tableName varchar(255))
BEGIN

SET @q = CONCAT('DROP INDEX `PRIMARY` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('DROP INDEX `idx_block_num` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName, ' add column contract_id tinyint UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;
                 
SET @q = CONCAT('UPDATE ', tableName, ' as a JOIN contracts as b ON a.address = b.contract_address SET a.contract_id = b.contract_id');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ',tableName, ' ADD CONSTRAINT fk_',right(tableName,49),'_contract_id FOREIGN KEY (contract_id) REFERENCES contracts (contract_id)');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
            'ALTER TABLE ', tableName,
            ' DROP COLUMN `event`,',
            ' DROP COLUMN `transaction_hash`,',
            ' DROP COLUMN `block_hash`,',
            ' DROP COLUMN `block_ts`,',
            ' DROP COLUMN `block_date`,',
            ' DROP COLUMN `block_ts_hour`,',
            ' DROP COLUMN `updated_at`,',
            ' DROP COLUMN `created_at`,',
            ' DROP COLUMN `block_timestamp`,',
            ' MODIFY COLUMN `log_index` SMALLINT UNSIGNED,',
            ' MODIFY COLUMN `transaction_index` SMALLINT UNSIGNED,',
            ' MODIFY COLUMN `block_number` INT UNSIGNED,',
			' DROP COLUMN `address`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_standard_modification_tx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_standard_modification_tx`(IN tableName varchar(255))
BEGIN

SET @q = CONCAT('DROP INDEX `PRIMARY` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('DROP INDEX `idx_block_num` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'ALTER TABLE ', tableName,
    ' DROP COLUMN `block_hash`,',
    ' DROP COLUMN `input`,',
    ' DROP COLUMN `nonce`,',
    ' DROP COLUMN `public_key`,',
    ' DROP COLUMN `r`,',
    ' DROP COLUMN `raw`,',
    ' DROP COLUMN `s`,',
    ' DROP COLUMN `standard_v`,',
    ' DROP COLUMN `type`,',
    ' DROP COLUMN `v`,',
    ' DROP COLUMN `value`,',
    ' DROP COLUMN `block_ts`,',
    ' DROP COLUMN `block_date`,',
    ' DROP COLUMN `block_ts_hour`,',
    ' DROP COLUMN `created_at`,',
    ' DROP COLUMN `block_timestamp`,',
    ' DROP COLUMN `updated_at`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName,' ADD COLUMN to_id TINYINT UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'UPDATE ', tableName, ' AS a',
    ' JOIN contracts AS b ON a.`to` = b.contract_address',
    ' SET a.to_id = b.contract_id');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ',tableName, ' ADD CONSTRAINT fk_',right(tableName,49),'_contract_id FOREIGN KEY (`to_id`) REFERENCES contracts (contract_id)');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName, ' DROP COLUMN `to`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'ALTER TABLE ', tableName,
    ' MODIFY COLUMN `block_number` INT UNSIGNED,',
    ' MODIFY COLUMN `chain_id` SMALLINT UNSIGNED,',
    ' MODIFY COLUMN `creates` CHAR(42),',
    ' MODIFY COLUMN `from` CHAR(42),',
    ' MODIFY COLUMN `gas` INT UNSIGNED,',
    ' MODIFY COLUMN `gas_price` INT UNSIGNED,',
    ' MODIFY COLUMN `hash` CHAR(66),',
    ' MODIFY COLUMN `transaction_index` SMALLINT UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_update_contracts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_update_contracts`()
BEGIN
INSERT INTO `contracts` (contract_address)
WITH
all_contacts as (
select distinct contract_address from (
SELECT contract_address from contracts
UNION ALL SELECT new_contract_address from hub_new_asset_storage
UNION ALL SELECT new_contract_address from hub_new_contract
UNION ALL SELECT new_contract_address from hub_contract_changed 
UNION ALL SELECT new_contract_address from hub_asset_storage_changed) as a),

new_contracts as (
select a.contract_address from all_contacts as a
left join contracts as b on a.contract_address=b.contract_address
where b.contract_address is null)

select contract_address from new_contracts;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_update_staging` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_update_staging`()
BEGIN
    -- Declare a handler for exceptions
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
		GET DIAGNOSTICS CONDITION 1
		@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
		SELECT @p1 as RETURNED_SQLSTATE  , @p2 as MESSAGE_TEXT;
	
        -- Handle the error here, rollback the transaction, log, etc.
        ROLLBACK;
    END;

START TRANSACTION;
SET @staging = (select block_num from sync_status where parameter ='staging_table' FOR UPDATE);#UNCOMMENT
SET @sync = (select block_num from sync_status where parameter ='last_synced_block' FOR UPDATE);   

SET @stats_start_window = (select block_ts_hour from v_sys_staging_date FOR UPDATE);
SET @stats_start_window_date = (select block_date from v_sys_staging_date FOR UPDATE); 
SET @stats_end_window = (select block_ts_hour from v_sys_sync_date FOR UPDATE);
SET @stats_end_window_date = (select block_date from v_sys_sync_date FOR UPDATE);
SET SESSION group_concat_max_len = 1000000;
#select @stats_start_window
#select @stats_end_window 
COMMIT;


#if i have new date to put into staging tables
IF @staging < @sync THEN
	START TRANSACTION;

	#insert all proofs
	INSERT INTO `staging_proof_submitted` #insert new submit proof rows into staging table
	(asset_contract_id, token_id, keyword, epoch, identity_id
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp ,`value`)
	select * from v_sys_staging_insert_new_proof_submitted where block_number>@staging and block_number<=@sync;
   
	#insert all submit commit for state_index=0, commits for for state_index>0 are excluded from here
	INSERT INTO `staging_commit_submitted` #insert new submit commit rows into staging table
	(asset_contract_id, token_id, identity_id, keyword, hash_function_id, epoch, score, state_index
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp)
	select * from v_sys_staging_insert_new_commit_submitted where block_number>@staging and block_number<=@sync;
  
	#insert all new pubs
	INSERT INTO `staging_pub` #insert new pub rows into staging table
	(asset_contract_id, token_id, keyword, size, triples_number, chunks_number, hash_function_id
	, epochs_number, epoch_length, token_amount,bid, transaction_hash, transaction_index, block_number
	, block_timestamp,state_index, state, previous_states, `from`)
	select * from v_sys_staging_insert_new_pub where block_number>@staging and block_number<=@sync;
    

    
	#update owner, grab latest owner of the asset and update value in staging table
	with
	owner_1 as (select token_id, contract_id, `to` as 'owner'
	,row_number() over (partition by token_id, contract_id order by block_number desc, transaction_index desc) as rn
	from content_asset_storage_transfer
	where block_number>@staging and block_number<=@sync   ),
	owner_2 as (select token_id,contract_id, `owner` from owner_1 where rn=1)

	update staging_pub as a
	INNER JOIN owner_2 as b on a.asset_contract_id=b.contract_id and a.token_id=b.token_id
	set a.`owner`=b.`owner`;
   
   	
	#add new blank rows into stats_pub table
	INSERT INTO stats_pub (`block_date`, `block_ts_hour`)
	WITH
	RECURSIVE new_datetime_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_ts_hour`), interval 1 hour) FROM stats_pub), @stats_start_window) AS timestamp_val #generate timetable
	UNION ALL SELECT TIMESTAMPADD(HOUR, 1, timestamp_val) FROM new_datetime_0 
	WHERE timestamp_val < @stats_end_window)
    	
    SELECT cast(timestamp_val as date), timestamp_val FROM new_datetime_0
    where timestamp_val<=@stats_end_window;

	#grab new pubs and update stats_pub table, i do ignore change in pub proparties due to pub update here
	#these changes are too small to make a difference, but it's significantly simplifies the process
	WITH
	new_pubs_data as (select 
	cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) as 'block_date'
	,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(ifnull(d.create_asset_size,0)) as 'total_size'
	,sum(a.epochs_number) as 'total_epochs'
	,sum(cast(cast(a.token_amount as decimal(45,18)) / epochs_number / 3 / (d.create_asset_size / 1024) / 1000000000000000000 as decimal(27,18))) as 'total_bid' 
	,count(token_id) as 'total_pubs'
	,cast(cast(sum(a.token_amount) as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as 'total_trac_spent'
	,sum(case when d.create_asset_size=145 then 1 else 0 end) as 'private_pubs'
	from service_agreement_v1_service_agreement_v1_created as a
	left join content_asset_tx as d on a.block_number=d.block_number and a.transaction_index=d.transaction_index
	left join `block` as bb on a.block_number=bb.`number`
	where a.block_number>@staging and a.block_number<=@sync
	group by 
	cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)
	,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00'))

	update stats_pub as a
	INNER JOIN new_pubs_data as b on a.`block_date`=b.`block_date` and a.`block_ts_hour`=b.`block_ts_hour`
	set
		a.total_size = a.total_size + b.total_size,
		a.total_epochs = a.total_epochs + b.total_epochs,
		a.total_bid = a.total_bid + b.total_bid,
		a.total_pubs = a.total_pubs + b.total_pubs,
		a.total_trac_spent = a.total_trac_spent + b.total_trac_spent,
		a.private_pubs = a.private_pubs + b.private_pubs;

  
	#insert new blank rows into node_stat table
	INSERT INTO stats_node (`identity_id`, `block_date`)
	WITH 
    RECURSIVE new_date_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_date`), interval 1 day) FROM stats_node), @stats_start_window_date)  AS date_val 
    UNION ALL SELECT DATE_ADD(date_val, INTERVAL 1 DAY) FROM new_date_0 
    WHERE date_val < @stats_end_window_date),
	
	identities as (select a.identity_id, cast(convert_tz(from_unixtime(`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) as 'block_date'
	from profile_profile_created as a 
    left join `block` as bb on a.block_number=bb.`number` where a.block_number<=@sync),
	new_date_2 as (SELECT a.identity_id, b.date_val  FROM identities as a CROSS JOIN new_date_0 as b WHERE b.date_val >= a.block_date)
    
    select identity_id , date_val as 'block_date' from new_date_2 where date_val <= @stats_end_window_date;
     
	#in case we have finalized updates for assets i'd need to update pubs table with new values and also update previous_states column
	# and update submit commits staging
	IF (select count(block_number) from commit_manager_v1_u1_state_finalized where block_number>@staging and block_number<=@sync) > 0 THEN
		with
		finalized_updates as (select 
		a.asset_contract_id,a.token_id,a.keyword
		,ifnull(d.update_asset_state_size,0) as `size`
        ,ifnull(d.update_asset_state_triples_number,0) as `triples_number`
        ,ifnull(d.update_asset_state_chunks_number,0) as `chunks_number`
		,a.hash_function_id
		,cast(cast(ifnull(d.update_asset_state_update_token_amount,0) as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as token_amount
		,d.`hash` as 'transaction_hash',b.transaction_index,b.block_number,bb.`timestamp` as 'block_timestamp'
		,a.state,a.state_index
		,row_number() over (partition by a.token_id, a.asset_contract_id order by a.state_index desc) as rn
		from commit_manager_v1_u1_state_finalized as a
		left join content_asset_asset_state_updated as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.state_index=b.state_index
		left join `block` as bb on b.block_number=bb.`number`
        left join content_asset_tx as d on b.block_number=d.block_number and b.transaction_index=d.transaction_index
        where a.block_number>@staging and a.block_number<=@sync),

		updates_except_latest_grp as (select asset_contract_id ,token_id,sum(token_amount) as 'token_amount'
		,group_concat(concat(',["state_idx":',state_index, ',"state":"',state,
							'","size":',size, ',"triples":',triples_number,
							',"chunks":',chunks_number, ',"hash_f":',hash_function_id,
							',"tokens":',token_amount, ',"tx_hash":"',transaction_hash,
							'","block":',block_number,',"block_ts_u":',block_timestamp,
							',"block_ts":"',convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),
							'"]') order by state_index asc) as `previous_states`
		from finalized_updates where rn>1
        group by asset_contract_id,token_id),

		data_to_update_pubs as (select a.asset_contract_id,a.token_id,a.size,a.triples_number,a.chunks_number,a.hash_function_id
		,a.token_amount + ifnull(b.token_amount,0) as token_amount,a.state_index, a.state,b.previous_states
		from finalized_updates as a
		left join updates_except_latest_grp as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id where a.rn=1)
		
        #updateing staging_pub with new post asset update values 
		update staging_pub as a
			INNER JOIN data_to_update_pubs as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
		SET
			a.previous_states = 
                CONCAT(ifnull(a.previous_states,''),
						(case when a.previous_states is not null then ',' else '' end),
                        '["state_idx":',a.state_index, ',"state":"',a.state,
						'","size":',a.size, ',"triples":',a.triples_number,
						',"chunks":',a.chunks_number, ',"hash_f":',a.hash_function_id,
						',"tokens":',a.token_amount, ',"tx_hash":"',a.transaction_hash,
						'","block":',a.block_number,',"block_tsu":',a.block_timestamp,
						',"block_ts":"',convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'"]',
                        ifnull(b.previous_states,''))
			,a.size = b.size,a.triples_number = b.triples_number
			,a.chunks_number = b.chunks_number,a.hash_function_id = b.hash_function_id
			,a.token_amount = a.token_amount+b.token_amount,a.state_index = b.state_index,a.state = b.state;

		#staging_pub is updated according to finalized pub data
        #but before i remove irrelevant commits from staging_commit_submitted i need to adjust stats_node table
        #and remove these commits stats
        WITH
        affected_commits as (
        select distinct asset_contract_id, token_id, epoch
        from commit_manager_v1_u1_state_finalized
		where block_number>@staging and block_number<=@sync),
        
        commit_stats_to_subtract_updated_pubs as ( select 
		b.identity_id,b.block_date
		,sum(b.commit_any_epoch) as 'commit_any_epoch'
		,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
		,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
		,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
		from affected_commits as a
		inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch
		group by b.identity_id, b.block_date)
        
    
        update stats_node as a
        inner join commit_stats_to_subtract_updated_pubs as b
        on a.block_date=b.block_date and a.identity_id=b.identity_id
        set
			a.commit_any_epoch = a.commit_any_epoch - ifnull(b.commit_any_epoch,0),
            a.commit_1st_epoch = a.commit_1st_epoch - ifnull(b.commit_1st_epoch,0),
            a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - ifnull(b.estimated_earnings_any_epoch,0),
            a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - ifnull(b.estimated_earnings_1st_epoch_only,0);
				
        #removing submitCommits for previous state index, they are no longer valid as this token_id-epoch could have different winners
        delete a from staging_commit_submitted as a
        INNER JOIN (select distinct asset_contract_id, token_id, epoch
					from commit_manager_v1_u1_state_finalized
					where block_number>@staging and block_number<=@sync) as b 
					ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch;
		
	END IF;
	 
	#adding latest submitCommits for updated assets
	INSERT INTO `staging_commit_submitted` 
	(asset_contract_id, token_id, identity_id, keyword, hash_function_id, epoch, score, state_index
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp)
	with
	post_update_commits as (select
	a.asset_contract_id, a.token_id, identity_id, keyword, hash_function_id, a.epoch, a.score
	,a.transaction_index, d.`hash` as 'transaction_hash', a.contract_id, a.block_number, bb.`timestamp` as 'block_timestamp'
	,dense_rank() over (partition by a.token_id, a.asset_contract_id, a.epoch order by a.state_index desc) as dr, a.state_index
	from commit_manager_v1_u1_commit_submitted as a
	left join `block` as bb on a.block_number=bb.`number`
	left join commit_manager_v1_u1_tx as d on a.block_number=d.block_number and a.transaction_index=d.transaction_index    
	where a.state_index>0 and a.block_number>@staging and a.block_number<=@sync),
	
	post_update_commits_latest as (select
	a.asset_contract_id, a.token_id, a.identity_id, a.keyword, a.hash_function_id, a.epoch, a.score, a.state_index
	,a.transaction_index, a.transaction_hash, a.contract_id, a.block_number, a.block_timestamp
	from post_update_commits as a where a.dr=1)
	select * from post_update_commits_latest;
    
	
    #before i update staging_commit_submitted i need to substract old values from stats table, then update staging_commit_submitted, then add new stats values
	WITH
    pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized 
    where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted 
    where block_number>@staging),
    
    commit_stats_to_subtract_updated_pubs as (select
	b.identity_id,b.block_date
	,sum(b.commit_any_epoch) as 'commit_any_epoch'
	,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch 
    group by b.identity_id,b.block_date)
    
	update stats_node as a
	inner join commit_stats_to_subtract_updated_pubs as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.commit_any_epoch = a.commit_any_epoch - ifnull(b.commit_any_epoch,0),
		a.commit_1st_epoch = a.commit_1st_epoch - ifnull(b.commit_1st_epoch,0),
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - ifnull(b.estimated_earnings_any_epoch,0),
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - ifnull(b.estimated_earnings_1st_epoch_only,0);
   
       
	#updating earnings in staging_commit_submitted
	WITH
	pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted where block_number>@staging), #need to update commits as new commits for this assets arrived
    
    pubs_to_update_token_amount as (select 
	a.asset_contract_id,a.token_id, cast(a.token_amount as decimal(27,18)) as 'token_amount'
	,a.epochs_number
	from staging_pub as a
	INNER JOIN (select distinct asset_contract_id, token_id from pubs_epochs_to_update) as b ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id),
   
    #adding earnings to commits
	update_commits_0 as (select
	a.asset_contract_id,a.token_id, a.block_number, a.transaction_index
	,row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc, block_number asc, transaction_index asc) as `rank`
	,case when (row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc,block_number asc, transaction_index asc)) <= 3 
		then c.token_amount / 3 / (c.epochs_number)
		else 0 end as estimated_earnings_any_epoch
	,case when a.epoch = 0 and (row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 
		then c.token_amount / 3 / (c.epochs_number)
		else 0 end as estimated_earnings_1st_epoch_only
	,case when (row_number() over (partition by token_id, asset_contract_id,  a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 then 1
		else 0 end as commit_any_epoch 
	,case when a.epoch = 0 and (row_number() over (partition by token_id, asset_contract_id,  a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 then 1
		else 0 end as commit_1st_epoch
	,1 as commit_any_epoch_incl_out_of_top3
	,case when a.epoch = 0 then 1 else 0 end as commit_1st_epoch_incl_out_of_top3
	from staging_commit_submitted as a
	INNER JOIN pubs_epochs_to_update as b ON a.asset_contract_id=b.asset_contract_id and a.token_id=b.token_id and a.epoch=b.epoch
	left join pubs_to_update_token_amount as c on a.asset_contract_id=c.asset_contract_id and a.token_id=c.token_id)


	#update commits records
	update staging_commit_submitted as a 
		INNER JOIN update_commits_0 as b
			ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.block_number=b.block_number and a.transaction_index=b.transaction_index
	SET
	a.`rank` = b.`rank`,
	a.`estimated_earnings_any_epoch` = b.`estimated_earnings_any_epoch`,
	a.`estimated_earnings_1st_epoch_only` = b.`estimated_earnings_1st_epoch_only`,
	a.`commit_any_epoch` = b.`commit_any_epoch`,
	a.`commit_1st_epoch` = b.`commit_1st_epoch`,
	a.`commit_any_epoch_incl_out_of_top3` = b.`commit_any_epoch_incl_out_of_top3`,
	a.`commit_1st_epoch_incl_out_of_top3` = b.`commit_1st_epoch_incl_out_of_top3`; 

	
    WITH
	#now i can add new values to stats_node table
    pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized 
    where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted 
    where block_number>@staging),
    
    commit_stats_to_add_updated_pubs as (select
	b.identity_id,b.block_date
	,sum(b.commit_any_epoch) as 'commit_any_epoch'
	,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch 
    group by b.identity_id,b.block_date)
    
	update stats_node as a
	inner join commit_stats_to_add_updated_pubs as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.commit_any_epoch = a.commit_any_epoch + b.commit_any_epoch,
		a.commit_1st_epoch = a.commit_1st_epoch + b.commit_1st_epoch,
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch + b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only + b.estimated_earnings_1st_epoch_only;
   
   
   
	#if i have new proof i need to update estimated earnings in staging_commit_submitted
    #but before that i need to substract from stats table current values
	with
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id
	from staging_proof_submitted where block_number>@staging),
   
	commit_stats_to_subtract_proof_arrived as (select
	b.identity_id,b.block_date
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_identity_id_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id=b.identity_id
	group by  b.identity_id,b.block_date)
    
    update stats_node as a
	inner join commit_stats_to_subtract_proof_arrived as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - b.estimated_earnings_1st_epoch_only;

   
	# now update staging_commit_submitted with earnings from proofs
	with
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id, `value` as 'paidout'
	from staging_proof_submitted where block_number>@staging)
       
    update staging_commit_submitted as a 
		INNER JOIN pubs_epochs_identity_id_to_update as b
		ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id = b.identity_id
	SET
	a.`estimated_earnings_any_epoch` = b.paidout,
	a.`estimated_earnings_1st_epoch_only` = (case when a.epoch=0 then b.paidout else a.`estimated_earnings_1st_epoch_only` end);
   

    #now i have updated data in staging_commit_submitted, time to update stats_node table
	WITH
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id
	from staging_proof_submitted where block_number>@staging),

	commit_stats_to_add_proof_arrived as (select
	b.identity_id,b.block_date
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_identity_id_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id=b.identity_id
	group by  b.identity_id,b.block_date)
   
	update stats_node as a
	inner join commit_stats_to_add_proof_arrived as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch + b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only + b.estimated_earnings_1st_epoch_only;
   


	#updating payouts in stats_node table in case proof arrived
	with
	payouts_to_update as (select
    block_date,identity_id,sum(`value`) as paidout, count(`value`) as proofs_submitted
    from staging_proof_submitted 
    where block_number>@staging
    group by block_date, identity_id)
    
    update stats_node as a
    INNER JOIN payouts_to_update as b on a.block_date=b.block_date and a.identity_id=b.identity_id
    set a.payouts = a.payouts + b.paidout,
		a.proofs_submitted = a.proofs_submitted + b.proofs_submitted;
    
            
	#once i have updated list of winners i need to update staging_pub table
	WITH
	pubs_to_update as (
	select distinct asset_contract_id, token_id
	from commit_manager_v1_u1_state_finalized
	where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select distinct asset_contract_id,token_id 
	from staging_commit_submitted where block_number>@staging),
   
	pub_commits_1 as (select a.asset_contract_id, a.token_id, a.epoch
	,CONCAT('[',group_concat(a.identity_id order by a.identity_id),']') as winners_epoch
	from staging_commit_submitted as a
	INNER JOIN pubs_to_update as b ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
	where a.commit_any_epoch=1
	group by a.asset_contract_id, a.token_id, a.epoch),

	pub_commits_2 as (select asset_contract_id, token_id ,CONCAT('[',group_concat(winners_epoch order by epoch),']') as winners
	from pub_commits_1 group by asset_contract_id, token_id)
   
	UPDATE staging_pub as a
		INNER JOIN (select distinct asset_contract_id,token_id from staging_commit_submitted where block_number>@staging) as b
			ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
		LEFT JOIN pub_commits_2 as c
            ON a.token_id=c.token_id and a.asset_contract_id=c.asset_contract_id
	SET 
	a.winners = c.winners;
   
   
    #this block is about updateing staging_stake table
    #adding new rows (if needed) and updateing staging_stake table
    #delete from staging_stake
	INSERT INTO staging_stake (identity_id, block_date, block_ts_hour, stake_change, stake)
	WITH
	RECURSIVE new_datetime_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_ts_hour`), interval 1 hour) FROM staging_stake), @stats_start_window) AS timestamp_val #generate timetable
	UNION ALL SELECT TIMESTAMPADD(HOUR, 1, timestamp_val) FROM new_datetime_0 
	WHERE timestamp_val < @stats_end_window),
    identities as (select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	from profile_profile_created as a left join `block` as bb on a.block_number=bb.`number`),
	staking_2 as (SELECT a.identity_id, b.timestamp_val as 'block_ts_hour' FROM identities as a CROSS JOIN new_datetime_0 as b WHERE b.timestamp_val >= a.block_ts_hour)
    
	#adding new rows to staging_stake table
	select a.identity_id, cast(a.block_ts_hour as date) as 'block_date' ,a.block_ts_hour, 0 as 'stake_change', Null  as 'stake' 
    from staking_2 as a
    WHERE a.block_ts_hour<=@stats_end_window;

	WITH #summarize new stake change data by identity_id and block_ts_hour, and update staging_stake
	stake_change_1 as (
	select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(case when old_stake is null then new_stake else new_stake - old_stake end) as 'stake'  
	from staking_stake_increased as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')
	
    UNION ALL select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(reward_amount) 
	from staking_reward_added as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')
	
    UNION ALL select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,-1 * sum(withdrawn_stake_amount) 
	from staking_stake_withdrawn as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')),

	stake_change_2 as (select identity_id, cast(block_ts_hour as date) as 'block_date', block_ts_hour
	#,cast(sum(stake) / 1000000000000000000 as decimal(27,18)) as 'stake_change' from stake_change_1 
    ,cast(cast(sum(stake) as decimal (45,18)) / 1000000000000000000 as decimal(27,18)) as 'stake_change' from stake_change_1 
	group by identity_id, cast(block_ts_hour as date), block_ts_hour)
	
	UPDATE staging_stake as a
	INNER JOIN stake_change_2 as b on a.identity_id=b.identity_id and a.block_date = b.block_date and a.block_ts_hour = b.block_ts_hour
	SET a.stake_change = a.stake_change+b.stake_change;
		
    WITH
	updated_stake as (select identity_id,block_date, block_ts_hour
    ,case when FIRST_VALUE(stake) OVER (partition by identity_id order by block_ts_hour asc) is Null #covers initial population of the table
		       then SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_date, block_ts_hour)
          else FIRST_VALUE(stake) OVER (partition by identity_id order by block_ts_hour asc)
		       + SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour)
               - FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc)
          end as 'stake'
    /*,stake_change
    ,`stake` as 'stake_original'
    ,FIRST_VALUE(stake) OVER ( partition by identity_id order by block_ts_hour asc) as 'first_val_stake'
    ,FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc) as 'first_val_stake_change'
    ,SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour) AS cumulative_stake_change
    ,FIRST_VALUE(stake) OVER ( partition by identity_id order by block_ts_hour asc)
		+ SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour)
        - FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc)
        as 'stake2'*/
	from staging_stake
	where block_date>=cast(date_add(@stats_start_window,interval -1 day) as date) and block_ts_hour>=date_add(@stats_start_window,interval -1 hour))
    
	UPDATE staging_stake as a
	INNER JOIN updated_stake as b on a.identity_id=b.identity_id and a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour
	SET a.stake = b.stake;
    
    #now update Ask in staging_stake table
    #update staging_stake set ask=Null
    WITH
    ask_1 as (select 
    cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS block_date
    ,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') as block_ts_hour
    ,row_number() OVER (PARTITION BY a.identity_id,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') ORDER BY bb.`timestamp` desc )  AS rn
	,a.identity_id
	,cast(cast(a.ask as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as 'ask'
	from profile_ask_updated a 
	left join block bb on a.block_number = bb.`number`
    where a.block_number>@staging and a.block_number<=@sync),
	ask_2 as (select identity_id, block_date, block_ts_hour, ask from ask_1 where rn = 1)
    
    update staging_stake as a
    inner join ask_2 as b on a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour and a.identity_id=b.identity_id
    set a.ask=b.ask;
    
    #fill gaps in Ask table
	WITH 
    ask_3 as (SELECT identity_id,block_date,block_ts_hour,ask
	,count(ask) OVER (PARTITION BY identity_id ORDER BY block_date asc, block_ts_hour asc )  AS value_partition 
    FROM staging_stake 
    where block_date>=@stats_start_window_date and block_ts_hour>=@stats_start_window),
        
    ask_4 as (select identity_id,block_date,block_ts_hour,ask
    ,first_value(ask) OVER (PARTITION BY identity_id, value_partition ORDER BY block_date,block_ts_hour)  AS ask_result 
    from ask_3)
	
    update staging_stake as a
    inner join ask_4 as b on a.identity_id=b.identity_id and a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour
    set a.ask=b.ask_result
    where a.ask is null;

   
    #now i can update node_stats nodeStake values based on staging_stake table
    WITH 
    latest_stake_ask_0 as (select block_date,identity_id, stake, ask
    ,row_number() over (partition by block_date, identity_id order by block_ts_hour desc) as rn
    from staging_stake
    where block_date>=@stats_start_window_date and block_ts_hour>=@stats_start_window),
    latest_stake_ask_1 as (select block_date,identity_id, stake, ask from latest_stake_ask_0 where rn=1)
    
    update stats_node as a
    inner join latest_stake_ask_1 as b on a.identity_id=b.identity_id and a.block_date=b.block_date
    set a.ask = b.ask, a.node_stake=b.stake;
     

    #update sync_status with new staging block_number
    UPDATE sync_status
    SET block_num = @sync
    WHERE parameter = 'staging_table';

   COMMIT;
END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Final view structure for view `_raw_v_nodes_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_daily` AS with `nodeids_dates_0` as (select `staging_stake`.`identity_id` AS `nodeId`,`staging_stake`.`block_date` AS `date_val`,`staging_stake`.`stake` AS `stake`,row_number() OVER (PARTITION BY `staging_stake`.`identity_id`,`staging_stake`.`block_date` ORDER BY `staging_stake`.`block_ts_hour` desc )  AS `rn` from `staging_stake`), `nodeids_dates` as (select `nodeids_dates_0`.`nodeId` AS `nodeId`,`nodeids_dates_0`.`date_val` AS `date_val`,`nodeids_dates_0`.`rn` AS `rn`,`nodeids_dates_0`.`stake` AS `stake` from `nodeids_dates_0` where (`nodeids_dates_0`.`rn` = 1)), `ask_1` as (select row_number() OVER (PARTITION BY `a`.`identity_id`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) ORDER BY `bb`.`timestamp` desc )  AS `rn`,`a`.`identity_id` AS `identity_id`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,`a`.`ask` AS `ask` from (`profile_ask_updated` `a` left join `block` `bb` on((`a`.`block_number` = `bb`.`number`)))), `ask_2` as (select `ask_1`.`identity_id` AS `identity_id`,`ask_1`.`block_date` AS `block_date`,`ask_1`.`ask` AS `ask` from `ask_1` where (`ask_1`.`rn` = 1)), `node_stats_0` as (select `a`.`nodeId` AS `nodeId`,`a`.`date_val` AS `date_val`,max(`a`.`stake`) AS `nodeStake`,sum(`c`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`c`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(sum(`c`.`estimated_earnings_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `estimated_earnings_any_epoch_cum`,sum(sum(`c`.`estimated_earnings_1st_epoch_only`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `estimated_earnings_1st_epoch_only_cum`,sum(`c`.`commit_any_epoch`) AS `commit_any_epoch`,sum(sum(`c`.`commit_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `commit_any_epoch_cum`,sum(`c`.`commit_1st_epoch`) AS `commit_1st_epoch`,sum(sum(`c`.`commit_1st_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `commit_1st_epoch_cum`,`e`.`paidout` AS `paidout`,sum(`e`.`paidout`) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `paidout_cum` from ((`nodeids_dates` `a` left join `staging_commit_submitted` `c` on(((`a`.`nodeId` = `c`.`identity_id`) and (`a`.`date_val` = `c`.`block_date`)))) left join (select `staging_proof_submitted`.`identity_id` AS `identity_id`,`staging_proof_submitted`.`block_date` AS `block_date`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` group by `staging_proof_submitted`.`identity_id`,`staging_proof_submitted`.`block_date`) `e` on(((`a`.`nodeId` = `e`.`identity_id`) and (`a`.`date_val` = `e`.`block_date`)))) group by `a`.`nodeId`,`a`.`date_val`), `node_stats_1` as (select `n`.`nodeId` AS `nodeId`,`n`.`date_val` AS `date_val`,`n`.`nodeStake` AS `nodeStake`,`n`.`estimated_earnings_any_epoch` AS `estimated_earnings_any_epoch`,`n`.`estimated_earnings_1st_epoch_only` AS `estimated_earnings_1st_epoch_only`,`n`.`estimated_earnings_any_epoch_cum` AS `estimated_earnings_any_epoch_cum`,`n`.`estimated_earnings_1st_epoch_only_cum` AS `estimated_earnings_1st_epoch_only_cum`,`n`.`commit_any_epoch` AS `commit_any_epoch`,`n`.`commit_any_epoch_cum` AS `commit_any_epoch_cum`,`n`.`commit_1st_epoch` AS `commit_1st_epoch`,`n`.`commit_1st_epoch_cum` AS `commit_1st_epoch_cum`,`n`.`paidout` AS `paidout`,`n`.`paidout_cum` AS `paidout_cum`,`ask_2`.`ask` AS `ask`,count(`ask_2`.`ask`) OVER (PARTITION BY `n`.`nodeId` ORDER BY `n`.`date_val` )  AS `value_partition` from (`node_stats_0` `n` left join `ask_2` on(((`n`.`nodeId` = `ask_2`.`identity_id`) and (`n`.`date_val` = `ask_2`.`block_date`))))), `node_stats_2` as (select `n`.`nodeId` AS `nodeId`,`n`.`date_val` AS `date_val`,`n`.`nodeStake` AS `nodeStake`,`n`.`estimated_earnings_any_epoch` AS `estimated_earnings_any_epoch`,`n`.`estimated_earnings_1st_epoch_only` AS `estimated_earnings_1st_epoch_only`,`n`.`estimated_earnings_any_epoch_cum` AS `estimated_earnings_any_epoch_cum`,`n`.`estimated_earnings_1st_epoch_only_cum` AS `estimated_earnings_1st_epoch_only_cum`,`n`.`commit_any_epoch` AS `commit_any_epoch`,`n`.`commit_any_epoch_cum` AS `commit_any_epoch_cum`,`n`.`commit_1st_epoch` AS `commit_1st_epoch`,`n`.`commit_1st_epoch_cum` AS `commit_1st_epoch_cum`,`n`.`paidout` AS `paidout`,`n`.`paidout_cum` AS `paidout_cum`,`n`.`ask` AS `ask`,`n`.`value_partition` AS `value_partition`,first_value(`n`.`ask`) OVER (PARTITION BY `n`.`nodeId`,`n`.`value_partition` ORDER BY `n`.`date_val` )  AS `ask_result` from `node_stats_1` `n`) select `a`.`nodeId` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date_val` AS `date`,`a`.`nodeStake` AS `nodeStake`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly`,ifnull(`a`.`commit_any_epoch_cum`,0) AS `cumulativePubsCommited`,ifnull(`a`.`commit_1st_epoch_cum`,0) AS `cumulativePubsCommited1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch_cum`,0) AS `cumulativeEstimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only_cum`,0) AS `cumulativeEstimatedEarnings1stEpochOnly`,ifnull(`a`.`paidout`,0) AS `payouts`,ifnull(`a`.`paidout_cum`,0) AS `cumulativePayouts`,cast((cast(`a`.`ask_result` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `ask` from (`node_stats_2` `a` left join `v_nodes_barebone` `b` on((`a`.`nodeId` = `b`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_last30d` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_last7d` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_last7d_raw`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d_raw`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_last7d_raw` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_latest`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_latest`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_latest` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` group by `staging_commit_submitted`.`identity_id`), `nodes_1` as (select `a`.`identity_id` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`commits` `a` left join `paidout` `b` on((`a`.`identity_id` = `b`.`identity_id`))) left join `v_nodes` `c` on((`a`.`identity_id` = `c`.`nodeId`)))) select `nodes_1`.`nodeId` AS `nodeId`,`nodes_1`.`networkId` AS `networkId`,`nodes_1`.`tokenName` AS `tokenName`,`nodes_1`.`tokenSymbol` AS `tokenSymbol`,`nodes_1`.`nodeOwner` AS `nodeOwner`,`nodes_1`.`nodeGroup` AS `nodeGroup`,`nodes_1`.`nodeStake` AS `nodeStake`,`nodes_1`.`nodeAsk` AS `nodeAsk`,`nodes_1`.`cumulativePayouts` AS `cumulativePayouts`,`nodes_1`.`estimatedEarnings` AS `estimatedEarnings`,`nodes_1`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`nodes_1`.`pubsCommited` AS `pubsCommited`,`nodes_1`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly` from `nodes_1` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_daily` AS with recursive `dates_cte` as (select (select cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) from `block` order by `block`.`number` limit 1) AS `date_val` union all select (`dates_cte`.`date_val` + interval 1 day) AS `DATE_ADD(date_val, INTERVAL 1 DAY)` from `dates_cte` where (`dates_cte`.`date_val` < (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`))), `dates_cte_2` as (select `a`.`date_val` AS `date_val` from (`dates_cte` `a` left join (select distinct `staging_pub`.`block_date` AS `block_date` from `staging_pub`) `b` on((`a`.`date_val` = `b`.`block_date`))) where ((`b`.`block_date` = 0) or (`b`.`block_date` is null))) select `a`.`block_date` AS `date`,avg(`a`.`size`) AS `avgPubSize`,avg(`a`.`epochs_number`) AS `avgEpochsNumber`,avg(`a`.`token_amount`) AS `avgPubPrice`,avg(`a`.`bid`) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,sum(`a`.`token_amount`) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` group by `a`.`block_date` union all select `dates_cte_2`.`date_val` AS `date_val`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0` from `dates_cte_2` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_hourly`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_hourly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_hourly` AS with recursive `dates_cte0` as (select (select date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') from `block` order by `block`.`number` limit 1) AS `ts_val` union all select (`dates_cte0`.`ts_val` + interval 1 hour) AS `DATE_ADD(ts_val, INTERVAL 1 HOUR)` from `dates_cte0` where (`dates_cte0`.`ts_val` < (select `v_sys_staging_date`.`block_ts_hour` from `v_sys_staging_date`))), `dates_cte` as (select cast(`dates_cte0`.`ts_val` as date) AS `date_val`,`dates_cte0`.`ts_val` AS `ts_val` from `dates_cte0`), `dates_cte_2` as (select `a`.`date_val` AS `date_val`,`a`.`ts_val` AS `ts_val` from (`dates_cte` `a` left join (select distinct `staging_pub`.`block_date` AS `block_date`,`staging_pub`.`block_ts_hour` AS `block_ts_hour` from `staging_pub`) `b` on(((`a`.`date_val` = `b`.`block_date`) and (`a`.`ts_val` = `b`.`block_ts_hour`)))) where ((`b`.`block_date` = 0) or (`b`.`block_date` is null))) select `a`.`block_date` AS `date`,`a`.`block_ts_hour` AS `datetime`,avg(`a`.`size`) AS `avgPubSize`,avg(`a`.`epochs_number`) AS `avgEpochsNumber`,avg(`a`.`token_amount`) AS `avgPubPrice`,avg(`a`.`bid`) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,sum(`a`.`token_amount`) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` group by `a`.`block_date`,`a`.`block_ts_hour` union all select `dates_cte_2`.`date_val` AS `date_val`,`dates_cte_2`.`ts_val` AS `ts_val`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0` from `dates_cte_2` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_last24h`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_last24h` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_ts` + interval -(2) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(25) hour) from `v_sys_staging_date`)) and (`a`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(1440) minute) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_last30d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_last7d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_ts` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(10080) minute) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_monthly`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_monthly` AS with recursive `dates_cte` as (select (select cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) from `block` order by `block`.`number` limit 1) AS `date_val` union all select (`dates_cte`.`date_val` + interval 1 day) AS `DATE_ADD(date_val, INTERVAL 1 DAY)` from `dates_cte` where (`dates_cte`.`date_val` < (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`))), `dates_cte_2` as (select `a`.`date_val` AS `date_val` from (`dates_cte` `a` left join (select distinct `staging_pub`.`block_date` AS `block_date` from `staging_pub`) `b` on((`a`.`date_val` = `b`.`block_date`))) where ((`b`.`block_date` = 0) or (`b`.`block_date` is null))), `daily` as (select `a`.`block_date` AS `date`,sum(`a`.`size`) AS `size`,sum(`a`.`epochs_number`) AS `epochs_number`,sum(`a`.`token_amount`) AS `token_amount`,sum(`a`.`bid`) AS `bid`,count(`a`.`token_id`) AS `totalPubs`,sum(`a`.`token_amount`) AS `totalTracSpent`,sum((case when (`a`.`size` = 145) then 1 else 0 end)) AS `privatePubs` from `staging_pub` `a` group by `a`.`block_date` union all select `dates_cte_2`.`date_val` AS `date_val`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0` from `dates_cte_2`) select date_format(`daily`.`date`,'%Y-%m-01') AS `date`,(sum(`daily`.`size`) / sum(`daily`.`totalPubs`)) AS `avgPubSize`,(sum(`daily`.`epochs_number`) / sum(`daily`.`totalPubs`)) AS `avgEpochsNumber`,(sum(`daily`.`token_amount`) / sum(`daily`.`totalPubs`)) AS `avgPubPrice`,(sum(`daily`.`bid`) / sum(`daily`.`totalPubs`)) AS `avgBid`,sum(`daily`.`totalPubs`) AS `totalPubs`,sum(`daily`.`totalTracSpent`) AS `totalTracSpent`,round(((sum(`daily`.`privatePubs`) / sum(`daily`.`totalPubs`)) * 100),0) AS `privatePubsPercentage` from `daily` group by date_format(`daily`.`date`,'%Y-%m-01') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_asset_history`
--

/*!50001 DROP VIEW IF EXISTS `v_asset_history`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_asset_history` AS select 'AssetMinted' AS `event`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`d`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,`a`.`state` AS `minted_state`,concat(`ac`.`contract_address`,`c`.`keyword`) AS `minted_keyword`,`c`.`hash_function_id` AS `minted_hash_function_id`,`c`.`start_time` AS `minted_start_time`,`c`.`epochs_number` AS `minted_epochs_number`,`c`.`epoch_length` AS `minted_epoch_length`,`c`.`token_amount` AS `minted_token_amount`,`c`.`size` AS `minted_size`,`c`.`triples_number` AS `minted_triples_number`,`c`.`chunks_number` AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((((`content_asset_asset_minted` `a` left join (select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`start_time` AS `start_time`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,`a`.`token_amount` AS `token_amount`,`b`.`create_asset_size` AS `size`,`b`.`create_asset_triples_number` AS `triples_number`,`b`.`create_asset_chunks_number` AS `chunks_number` from (`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`))))) `c` on(((`a`.`asset_contract_id` = `c`.`asset_contract_id`) and (`a`.`token_id` = `c`.`token_id`)))) left join `content_asset_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'Transfer' AS `Transfer`,`a`.`token_id` AS `token_id`,`addc`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,`a`.`from` AS `transfer_from`,`a`.`to` AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((`content_asset_storage_transfer` `a` left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `content_asset_storage_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`from` <> '0x0000000000000000000000000000000000000000') union all select 'AssetStateUpdated' AS `event`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`c`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,`a`.`state_index` AS `state_updated_state_index`,`a`.`update_token_amount` AS `state_updated_update_token_amount`,(case when (`b`.`token_id` is not null) then 'StateFinalized' end) AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((((`content_asset_asset_state_updated` `a` left join `commit_manager_v1_u1_state_finalized` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`) and (`a`.`state_index` = `b`.`state_index`)))) left join `content_asset_tx` `c` on(((`a`.`block_number` = `c`.`block_number`) and (`a`.`transaction_index` = `c`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetStateUpdatedCencelled' AS `AssetStateUpdatedCencelled`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,`a`.`state_index` AS `update_cancelled_state_index`,`a`.`returned_token_amount` AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_state_update_canceled` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetStoringPeriodExtended' AS `AssetStoringPeriodExtended`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,`a`.`epochs_number` AS `storing_period_extended_epochs_number`,`a`.`token_amount` AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_storing_period_extended` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetUpdatePaymentIncreased' AS `AssetUpdatePaymentIncreased`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,`a`.`token_amount` AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_update_payment_increased` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetPaymentIncreased' AS `AssetPaymentIncreased`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,`a`.`token_amount` AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_payment_increased` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetBurnt' AS `AssetBurnt`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,`a`.`returned_token_amount` AS `burnt_returned_token_amount` from ((((`content_asset_asset_burnt` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes` AS with `latest_stake_0` as (select `staging_stake`.`identity_id` AS `identity_id`,`staging_stake`.`stake` AS `stake`,`staging_stake`.`ask` AS `ask` from `staging_stake` where ((`staging_stake`.`block_date` = (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` = (select `v_sys_staging_date`.`block_ts_hour` from `v_sys_staging_date`)))), `nodes_0` as (select `a`.`nodeId` AS `nodeId`,`a`.`networkId` AS `networkId`,`a`.`tokenName` AS `tokenName`,`a`.`tokenSymbol` AS `tokenSymbol`,`a`.`nodeOwner` AS `nodeOwner`,`a`.`nodeGroup` AS `nodeGroup`,`a`.`createProfile_adminWallet` AS `createProfile_adminWallet`,`a`.`createProfile_adminWallet_hash` AS `createProfile_adminWallet_hash`,`a`.`current_adminWallet_hashes` AS `current_adminWallet_hashes`,`a`.`createProfile_blockNumber` AS `createProfile_blockNumber`,`a`.`createProfile_txHash` AS `createProfile_txHash`,`a`.`createProfile_ts` AS `createProfile_ts`,`a`.`createProfile_date` AS `createProfile_date`,((to_days(curdate()) - to_days(`a`.`createProfile_date`)) + 1) AS `nodeAgeDays`,`b`.`stake` AS `nodeStake`,`b`.`ask` AS `nodeAsk` from (`v_nodes_barebone` `a` left join `latest_stake_0` `b` on((`a`.`nodeId` = `b`.`identity_id`))) where (`b`.`ask` is not null)) select `nodes_0`.`nodeId` AS `nodeId`,`nodes_0`.`networkId` AS `networkId`,`nodes_0`.`tokenName` AS `tokenName`,`nodes_0`.`tokenSymbol` AS `tokenSymbol`,`nodes_0`.`nodeOwner` AS `nodeOwner`,`nodes_0`.`nodeGroup` AS `nodeGroup`,`nodes_0`.`createProfile_adminWallet` AS `createProfile_adminWallet`,`nodes_0`.`createProfile_adminWallet_hash` AS `createProfile_adminWallet_hash`,`nodes_0`.`current_adminWallet_hashes` AS `current_adminWallet_hashes`,`nodes_0`.`createProfile_blockNumber` AS `createProfile_blockNumber`,`nodes_0`.`createProfile_txHash` AS `createProfile_txHash`,`nodes_0`.`createProfile_ts` AS `createProfile_ts`,`nodes_0`.`createProfile_date` AS `createProfile_date`,`nodes_0`.`nodeAgeDays` AS `nodeAgeDays`,`nodes_0`.`nodeStake` AS `nodeStake`,`nodes_0`.`nodeAsk` AS `nodeAsk` from `nodes_0` union all select 0 AS `NodeId`,'avgNode' AS `NetworkId`,'avgNode' AS `TokenName`,'avgNode' AS `TokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,NULL AS `createProfile_adminWallet`,NULL AS `createProfile_adminWallet_hash`,NULL AS `current_adminWallet_hashes`,NULL AS `createProfile_blockNumber`,NULL AS `createProfile_txHash`,NULL AS `createProfile_ts`,NULL AS `createProfile_date`,0 AS `nodeAgeDays`,avg(`nodes_0`.`nodeStake`) AS `nodeStake`,avg(`nodes_0`.`nodeAsk`) AS `nodeAsk` from `nodes_0` where (`nodes_0`.`nodeStake` >= 50000) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_activity_last1min`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last1min`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_activity_last1min` AS with `activity_1` as (select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_commit_submitted` `a` join `commit_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_u1_commit_submitted` `a` join `commit_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_proof_submitted` `a` join `proof_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_u1_proof_submitted` `a` join `proof_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AskUpdated' AS `event_name`,cast((cast(`a`.`ask` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`profile_ask_updated` `a` join `profile_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'KeyAdded' AS `event_name`,`a`.`key` AS `event_value_1` from ((`identity_storage_key_added` `a` join `identity_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'StakeIncreased' AS `event_name`,cast((cast(`a`.`new_stake` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`staking_stake_increased` `a` left join (select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_tx`.`hash` AS `hash` from `proof_manager_v1_tx` where (`proof_manager_v1_tx`.`block_number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_u1_tx`.`hash` AS `hash` from `proof_manager_v1_u1_tx` where (`proof_manager_v1_u1_tx`.`block_number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`))))) `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`br`.`nodeId` AS `nodeId`,`br`.`tokenName` AS `tokenName`,`br`.`tokenSymbol` AS `tokenSymbol`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from ((((`activity_1` `a` left join `v_nodes_barebone` `br` on((`a`.`identity_id` = `br`.`nodeId`))) left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_activity_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_activity_last24h` AS with `activity_1` as (select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_commit_submitted` `a` left join `commit_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_u1_commit_submitted` `a` left join `commit_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_proof_submitted` `a` left join `proof_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_u1_proof_submitted` `a` left join `proof_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AskUpdated' AS `event_name`,cast((cast(`a`.`ask` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`profile_ask_updated` `a` left join `profile_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'KeyAdded' AS `event_name`,`a`.`key` AS `event_value_1` from ((`identity_storage_key_added` `a` left join `identity_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'StakeIncreased' AS `event_name`,cast((cast(`a`.`new_stake` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`staking_stake_increased` `a` left join (select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_tx`.`hash` AS `hash` from `proof_manager_v1_tx` where (`proof_manager_v1_tx`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_u1_tx`.`hash` AS `hash` from `proof_manager_v1_u1_tx` where (`proof_manager_v1_u1_tx`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1))) `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`br`.`nodeId` AS `nodeId`,`br`.`tokenName` AS `tokenName`,`br`.`tokenSymbol` AS `tokenSymbol`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from ((((`activity_1` `a` left join `v_nodes_barebone` `br` on((`a`.`identity_id` = `br`.`nodeId`))) left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_barebone`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_barebone`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_barebone` AS with `added_admin_keys` as (select `identity_storage_key_added`.`identity_id` AS `identity_id`,`identity_storage_key_added`.`key` AS `key` from `identity_storage_key_added` where (`identity_storage_key_added`.`purpose` = 1)), `removed_keys` as (select `a`.`identity_id` AS `identity_id`,`b`.`remove_key_key` AS `remove_key_key` from (`identity_storage_key_removed` `a` left join `identity_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`) and (`b`.`function` = 'removeKey'))))), `actual_keys` as (select `a`.`identity_id` AS `identity_id`,`a`.`key` AS `key` from (`added_admin_keys` `a` left join `removed_keys` `b` on(((`a`.`identity_id` = `b`.`identity_id`) and (`a`.`key` = `b`.`remove_key_key`)))) where (`b`.`identity_id` is null)), `actual_keys_concat` as (select `actual_keys`.`identity_id` AS `identity_id`,group_concat(`actual_keys`.`key` separator ',') AS `admin_keys_hashes` from `actual_keys` group by `actual_keys`.`identity_id`) select `a`.`identity_id` AS `nodeId`,(case when (`b`.`create_profile_node_id` = '0x5cac41237127f94c2d21dae0b14bfefa998806302e357127ed9d44860b322a2314a5ce338d2aec67cd3ded5c9adeed60718ce26c') then 'invalidNetworkID1' else convert(unhex(substr(`b`.`create_profile_node_id`,3,92)) using utf8mb4) end) AS `networkId`,`b`.`create_profile_shares_token_name` AS `tokenName`,`b`.`create_profile_shares_token_symbol` AS `tokenSymbol`,NULL AS `nodeOwner`,(case when (left(`b`.`create_profile_shares_token_symbol`,6) = 'TLNODE') then 'Trace Labs' when (`b`.`create_profile_shares_token_symbol` in ('TechnoTesseract','QuantumRealm','CyberstormCentral','StellarSynapse','SynthwaveSanctuary','GalacticGateway','CyberVortex','ViperVerse','DreamMachine','OrionBreeze','NovaLuna','AstroSphere','SolarFlare','Tars','GalacticCore','CometCruiser','CelestialCloud','LunaLander','CosmoCluster','SaturnStation','StarshipSynth','CosmicCrypt','InterstellarNode','FusionLink','ElextraStream','TitanLink','PulsarVertex','CodeDynamo','AuroraByte','EonSecure')) then 'Trace Labs' else 'Community' end) AS `nodeGroup`,`b`.`create_profile_admin_wallet` AS `createProfile_adminWallet`,`c`.`admin_key` AS `createProfile_adminWallet_hash`,`d`.`admin_keys_hashes` AS `current_adminWallet_hashes`,`a`.`block_number` AS `createProfile_blockNumber`,`b`.`hash` AS `createProfile_txHash`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `createProfile_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `createProfile_date` from ((((`profile_profile_created` `a` left join `profile_tx` `b` on(((`a`.`contract_id` = `b`.`to_id`) and (`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `identity_identity_created` `c` on(((`a`.`block_number` = `c`.`block_number`) and (`a`.`transaction_index` = `c`.`transaction_index`)))) left join `actual_keys_concat` `d` on((`a`.`identity_id` = `d`.`identity_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stake`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stake`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stake` AS select `stats_node`.`identity_id` AS `nodeId`,`stats_node`.`block_date` AS `date`,`stats_node`.`node_stake` AS `nodeStake` from `stats_node` union all select 0 AS `nodeId`,`stats_node`.`block_date` AS `date`,avg(`stats_node`.`node_stake`) AS `nodeStake` from `stats_node` where (`stats_node`.`node_stake` >= 50000) group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_daily` AS with `nodes_0` as (select `a`.`identity_id` AS `nodeId`,`a`.`block_date` AS `date`,`a`.`node_stake` AS `nodeStake`,`a`.`commit_any_epoch` AS `pubsCommited`,`a`.`commit_1st_epoch` AS `pubsCommited1stEpochOnly`,sum(`a`.`commit_any_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePubsCommited`,sum(`a`.`commit_1st_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimated_earnings_any_epoch` AS `estimatedEarnings`,`a`.`estimated_earnings_1st_epoch_only` AS `estimatedEarnings1stEpochOnly`,sum(`a`.`estimated_earnings_any_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativeEstimatedEarnings`,sum(`a`.`estimated_earnings_1st_epoch_only`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,sum(`a`.`payouts`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePayouts`,`a`.`ask` AS `ask` from `stats_node` `a`) select `a`.`nodeId` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date` AS `date`,`a`.`nodeStake` AS `nodeStake`,`a`.`pubsCommited` AS `pubsCommited`,`a`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`a`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`a`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimatedEarnings` AS `estimatedEarnings`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`a`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`a`.`ask` AS `ask` from (`nodes_0` `a` join `v_nodes_barebone` `b` on((`a`.`nodeId` = `b`.`nodeId`))) union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`stats_node`.`block_date` AS `date`,avg(`stats_node`.`node_stake`) AS `nodeStake`,avg(`stats_node`.`commit_any_epoch`) AS `pubsCommited`,avg(`stats_node`.`commit_1st_epoch`) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_node`.`estimated_earnings_any_epoch`) AS `estimatedEarnings`,avg(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_node`.`payouts`) AS `payouts`,NULL AS `NULL`,avg(`stats_node`.`ask`) AS `ask` from `stats_node` where (`stats_node`.`node_stake` >= 50000) group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_daily` AS select `stats_node`.`block_date` AS `date`,sum(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`stats_node`.`estimated_earnings_any_epoch`) - sum(`stats_node`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`stats_node`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,sum(sum(`stats_node`.`commit_1st_epoch`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum((sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`))) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeCommitsSubmitted2plusEpochs`,sum(`stats_node`.`payouts`) AS `payouts`,sum(sum(`stats_node`.`payouts`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativePayouts`,sum(`stats_node`.`proofs_submitted`) AS `proofsSubmitted`,sum(sum(`stats_node`.`proofs_submitted`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeProofsSubmitted`,sum(`stats_node`.`node_stake`) AS `combinedNodesStake`,(sum(`stats_node`.`node_stake`) / sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end))) AS `avgNodeStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk`,(sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) / sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end))) AS `avgAsk` from `stats_node` group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_hourly_7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_hourly_7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_hourly_7d` AS with `dates` as (select `staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,sum(`staging_stake`.`stake`) AS `stake`,sum((case when (`staging_stake`.`stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`staging_stake`.`stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`staging_stake`.`stake` >= 50000) then `staging_stake`.`ask` else 0 end)) AS `combined_ask` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`))) group by `staging_stake`.`block_date`,`staging_stake`.`block_ts_hour`), `commits` as (select `staging_commit_submitted`.`block_date` AS `block_date`,`staging_commit_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_commit_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_commit_submitted`.`block_date`,`staging_commit_submitted`.`block_ts_hour`), `paidouts` as (select `staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout`,count(`staging_proof_submitted`.`value`) AS `proofs_submitted` from `staging_proof_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_proof_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`) select `a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`c`.`estimated_earnings_1st_epoch_only` AS `estimatedEarnings1stEpochOnly`,(`c`.`estimated_earnings_any_epoch` - `c`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings2plusEpochs`,`c`.`commit_1st_epoch` AS `commitsSubmitted1stEpochOnly`,sum(`c`.`commit_1st_epoch`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(`c`.`commit_any_epoch` - `c`.`commit_1st_epoch`) AS `commitsSubmitted2plusEpochs`,sum((`c`.`commit_any_epoch` - `c`.`commit_1st_epoch`)) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeCommitsSubmitted2plusEpochs`,`p`.`paidout` AS `payouts`,sum(`p`.`paidout`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativePayouts`,`p`.`proofs_submitted` AS `proofsSubmitted`,sum(`p`.`proofs_submitted`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeProofsSubmitted`,`a`.`stake` AS `combinedNodesStake`,(`a`.`stake` / `a`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`a`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`a`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`a`.`combined_ask` AS `combinedAsk`,(`a`.`combined_ask` / `a`.`nodesWithMoreThan50kStake`) AS `avgAsk` from ((`dates` `a` left join `commits` `c` on(((`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join `paidouts` `p` on(((`a`.`date_val` = `p`.`block_date`) and (`a`.`ts_val` = `p`.`block_ts_hour`)))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_monthly` AS with `stake_0` as (select `stats_node`.`block_date` AS `block_date`,sum(`stats_node`.`node_stake`) AS `node_stake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk`,row_number() OVER (PARTITION BY date_format(`stats_node`.`block_date`,'%Y-%m-01') ORDER BY `stats_node`.`block_date` desc )  AS `rn` from `stats_node` group by `stats_node`.`block_date`), `stake_1` as (select date_format(`stake_0`.`block_date`,'%Y-%m-01') AS `date`,`stake_0`.`node_stake` AS `node_stake`,`stake_0`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`stake_0`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`stake_0`.`combinedAsk` AS `combinedAsk` from `stake_0` where (`stake_0`.`rn` = 1)), `grouped_0` as (select date_format(`a`.`block_date`,'%Y-%m-01') AS `date`,sum(`a`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`a`.`estimated_earnings_any_epoch`) - sum(`a`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`a`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,sum(sum(`a`.`commit_1st_epoch`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(sum(`a`.`commit_any_epoch`) - sum(`a`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum((sum(`a`.`commit_any_epoch`) - sum(`a`.`commit_1st_epoch`))) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeCommitsSubmitted2plusEpochs`,sum(`a`.`payouts`) AS `payouts`,sum(sum(`a`.`payouts`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePayouts`,sum(`a`.`proofs_submitted`) AS `proofsSubmitted`,sum(sum(`a`.`proofs_submitted`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeProofsSubmitted` from `stats_node` `a` group by date_format(`a`.`block_date`,'%Y-%m-01')) select `a`.`date` AS `date`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`estimatedEarnings2plusEpochs` AS `estimatedEarnings2plusEpochs`,`a`.`commitsSubmitted1stEpochOnly` AS `commitsSubmitted1stEpochOnly`,`a`.`cumulativeCommitsSubmitted1stEpochOnly` AS `cumulativeCommitsSubmitted1stEpochOnly`,`a`.`commitsSubmitted2plusEpochs` AS `commitsSubmitted2plusEpochs`,`a`.`cumulativeCommitsSubmitted2plusEpochs` AS `cumulativeCommitsSubmitted2plusEpochs`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`a`.`proofsSubmitted` AS `proofsSubmitted`,`a`.`cumulativeProofsSubmitted` AS `cumulativeProofsSubmitted`,`b`.`node_stake` AS `combinedNodesStake`,(`b`.`node_stake` / `b`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`b`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`b`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`b`.`combinedAsk` AS `combinedAsk`,(`b`.`combinedAsk` / `b`.`nodesWithMoreThan50kStake`) AS `avgAsk` from (`grouped_0` `a` join `stake_1` `b` on((`a`.`date` = `b`.`date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_total`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_total`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_total` AS with `stake_0` as (select sum(`stats_node`.`node_stake`) AS `node_stake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk` from `stats_node` where (`stats_node`.`block_date` = (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`)) group by `stats_node`.`block_date`), `grouped_0` as (select sum(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`stats_node`.`estimated_earnings_any_epoch`) - sum(`stats_node`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`stats_node`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,(sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum(`stats_node`.`payouts`) AS `payouts`,sum(`stats_node`.`proofs_submitted`) AS `proofsSubmitted` from `stats_node`) select `a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`estimatedEarnings2plusEpochs` AS `estimatedEarnings2plusEpochs`,`a`.`commitsSubmitted1stEpochOnly` AS `commitsSubmitted1stEpochOnly`,`a`.`commitsSubmitted2plusEpochs` AS `commitsSubmitted2plusEpochs`,`a`.`payouts` AS `payouts`,`a`.`proofsSubmitted` AS `proofsSubmitted`,`b`.`node_stake` AS `combinedNodesStake`,(`b`.`node_stake` / `b`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`b`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`b`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`b`.`combinedAsk` AS `combinedAsk`,(`b`.`combinedAsk` / `b`.`nodesWithMoreThan50kStake`) AS `avgAsk` from (`grouped_0` `a` join `stake_0` `b`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_hourly_7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_hourly_7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_hourly_7d` AS with `nodeids_dates` as (select `staging_stake`.`identity_id` AS `nodeId`,`staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,`staging_stake`.`stake` AS `stake`,`staging_stake`.`ask` AS `ask` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`)))), `node_stats_0` as (select `a`.`nodeId` AS `nodeId`,`a`.`date_val` AS `date_val`,`a`.`ts_val` AS `ts_val`,max(`a`.`stake`) AS `nodeStake`,max(`a`.`ask`) AS `ask`,sum(`c`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`c`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(sum(`c`.`estimated_earnings_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `estimated_earnings_any_epoch_cum`,sum(sum(`c`.`estimated_earnings_1st_epoch_only`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `estimated_earnings_1st_epoch_only_cum`,sum(`c`.`commit_any_epoch`) AS `commit_any_epoch`,sum(sum(`c`.`commit_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `commit_any_epoch_cum`,sum(`c`.`commit_1st_epoch`) AS `commit_1st_epoch`,sum(sum(`c`.`commit_1st_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `commit_1st_epoch_cum`,`e`.`paidout` AS `paidout`,sum(`e`.`paidout`) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `paidout_cum` from ((`nodeids_dates` `a` left join `staging_commit_submitted` `c` on(((`a`.`nodeId` = `c`.`identity_id`) and (`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join (select `staging_proof_submitted`.`identity_id` AS `identity_id`,`staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where (`staging_proof_submitted`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) group by `staging_proof_submitted`.`identity_id`,`staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`) `e` on(((`a`.`nodeId` = `e`.`identity_id`) and (`a`.`date_val` = `e`.`block_date`) and (`a`.`ts_val` = `e`.`block_ts_hour`)))) where ((`c`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) or (`c`.`block_date` is null)) group by `a`.`nodeId`,`a`.`date_val`,`a`.`ts_val`), `dates_avg_node` as (select `staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,avg(`staging_stake`.`stake`) AS `stake`,avg(`staging_stake`.`ask`) AS `ask`,count(`staging_stake`.`block_date`) AS `node_count` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`)) and (`staging_stake`.`stake` >= 50000)) group by `staging_stake`.`block_date`,`staging_stake`.`block_ts_hour`), `commits_avg_node` as (select `staging_commit_submitted`.`block_date` AS `block_date`,`staging_commit_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_commit_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_commit_submitted`.`block_date`,`staging_commit_submitted`.`block_ts_hour`), `paidout_avg_node` as (select `staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_proof_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`), `node_stats_0_avg_node` as (select `a`.`date_val` AS `date_val`,`a`.`ts_val` AS `ts_val`,`a`.`stake` AS `nodeStake`,`a`.`ask` AS `ask`,(`c`.`estimated_earnings_any_epoch` / `a`.`node_count`) AS `estimated_earnings_any_epoch`,(`c`.`estimated_earnings_1st_epoch_only` / `a`.`node_count`) AS `estimated_earnings_1st_epoch_only`,(`c`.`commit_any_epoch` / `a`.`node_count`) AS `commit_any_epoch`,(`c`.`commit_1st_epoch` / `a`.`node_count`) AS `commit_1st_epoch`,(`p`.`paidout` / `a`.`node_count`) AS `paidout` from ((`dates_avg_node` `a` left join `commits_avg_node` `c` on(((`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join `paidout_avg_node` `p` on(((`a`.`date_val` = `p`.`block_date`) and (`a`.`ts_val` = `p`.`block_ts_hour`))))) select `a`.`nodeId` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`a`.`nodeStake` AS `nodeStake`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly`,ifnull(`a`.`commit_any_epoch_cum`,0) AS `cumulativePubsCommited`,ifnull(`a`.`commit_1st_epoch_cum`,0) AS `cumulativePubsCommited1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch_cum`,0) AS `cumulativeEstimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only_cum`,0) AS `cumulativeEstimatedEarnings1stEpochOnly`,ifnull(`a`.`paidout`,0) AS `payouts`,ifnull(`a`.`paidout_cum`,0) AS `cumulativePayouts`,`a`.`ask` AS `ask` from (`node_stats_0` `a` left join `v_nodes_barebone` `b` on((`a`.`nodeId` = `b`.`nodeId`))) union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`a`.`nodeStake` AS `nodeStake`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,ifnull(`a`.`paidout`,0) AS `payouts`,NULL AS `NULL`,`a`.`ask` AS `ask` from `node_stats_0_avg_node` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last1h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last1h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last1h` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(2) hour) AS `t` from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last24h` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(2) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(2) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last30d` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) where (`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(30) day) as date) from `v_sys_staging_date`)) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last7d` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) where (`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(7) day) as date) from `v_sys_staging_date`)) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_latest`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_latest`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_latest` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_monthly` AS with `stake_ask_0` as (select `stats_node`.`identity_id` AS `identity_id`,`stats_node`.`block_date` AS `block_date`,`stats_node`.`node_stake` AS `node_stake`,`stats_node`.`ask` AS `ask`,row_number() OVER (PARTITION BY `stats_node`.`identity_id`,date_format(`stats_node`.`block_date`,'%Y-%m-01') ORDER BY `stats_node`.`block_date` desc )  AS `rn` from `stats_node`), `stake_ask_1` as (select `stake_ask_0`.`identity_id` AS `identity_id`,date_format(`stake_ask_0`.`block_date`,'%Y-%m-01') AS `date`,`stake_ask_0`.`node_stake` AS `node_stake`,`stake_ask_0`.`ask` AS `ask` from `stake_ask_0` where (`stake_ask_0`.`rn` = 1)), `stats_0` as (select `a`.`identity_id` AS `identity_id`,date_format(`a`.`block_date`,'%Y-%m-01') AS `date`,sum(`a`.`commit_any_epoch`) AS `pubsCommited`,sum(`a`.`commit_1st_epoch`) AS `pubsCommited1stEpochOnly`,sum(sum(`a`.`commit_any_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePubsCommited`,sum(sum(`a`.`commit_1st_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePubsCommited1stEpochOnly`,sum(`a`.`estimated_earnings_any_epoch`) AS `estimatedEarnings`,sum(`a`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,sum(sum(`a`.`estimated_earnings_any_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeEstimatedEarnings`,sum(sum(`a`.`estimated_earnings_1st_epoch_only`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeEstimatedEarnings1stEpochOnly`,sum(`a`.`payouts`) AS `payouts`,sum(sum(`a`.`payouts`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePayouts` from `stats_node` `a` group by `a`.`identity_id`,date_format(`a`.`block_date`,'%Y-%m-01')), `stats_1` as (select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date` AS `date`,`c`.`node_stake` AS `nodeStake`,`a`.`pubsCommited` AS `pubsCommited`,`a`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`a`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`a`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimatedEarnings` AS `estimatedEarnings`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`a`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`c`.`ask` AS `ask` from ((`stats_0` `a` join `v_nodes_barebone` `b` on((`a`.`identity_id` = `b`.`nodeId`))) join `stake_ask_1` `c` on(((`a`.`identity_id` = `c`.`identity_id`) and (`a`.`date` = `c`.`date`))))) select `stats_1`.`nodeId` AS `nodeId`,`stats_1`.`networkId` AS `networkId`,`stats_1`.`tokenName` AS `tokenName`,`stats_1`.`tokenSymbol` AS `tokenSymbol`,`stats_1`.`nodeOwner` AS `nodeOwner`,`stats_1`.`nodeGroup` AS `nodeGroup`,`stats_1`.`date` AS `date`,`stats_1`.`nodeStake` AS `nodeStake`,`stats_1`.`pubsCommited` AS `pubsCommited`,`stats_1`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`stats_1`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`stats_1`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`stats_1`.`estimatedEarnings` AS `estimatedEarnings`,`stats_1`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`stats_1`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`stats_1`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`stats_1`.`payouts` AS `payouts`,`stats_1`.`cumulativePayouts` AS `cumulativePayouts`,`stats_1`.`ask` AS `ask` from `stats_1` union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`stats_1`.`date` AS `date`,avg(`stats_1`.`nodeStake`) AS `nodeStake`,avg(`stats_1`.`pubsCommited`) AS `pubsCommited`,avg(`stats_1`.`pubsCommited1stEpochOnly`) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_1`.`estimatedEarnings`) AS `estimatedEarnings`,avg(`stats_1`.`estimatedEarnings1stEpochOnly`) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_1`.`payouts`) AS `payouts`,NULL AS `NULL`,avg(`stats_1`.`ask`) AS `ask` from `stats_1` where (`stats_1`.`nodeStake` >= 50000) group by `stats_1`.`date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs` AS select `b`.`contract_address` AS `contract_address`,`a`.`token_id` AS `token_id`,concat(`b`.`contract_address`,`a`.`keyword`) AS `keyword`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`c`.`chain_id` AS `chain_id`,`ch`.`chain_name` AS `chain_name`,`a`.`size` AS `size`,`a`.`triples_number` AS `triples_number`,`a`.`chunks_number` AS `chunks_number`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,((`a`.`epoch_length` / 3600) / 24) AS `epoch_length_days`,`a`.`token_amount` AS `token_amount`,`a`.`bid` AS `bid`,`a`.`transaction_hash` AS `transaction_hash`,`a`.`transaction_index` AS `transaction_index`,`a`.`block_number` AS `block_number`,`a`.`block_timestamp` AS `block_timestamp`,`a`.`block_ts` AS `block_ts`,`a`.`block_date` AS `block_date`,`a`.`block_ts_hour` AS `block_ts_hour`,`a`.`state_index` AS `state_index`,`a`.`state` AS `state`,concat('[',`a`.`previous_states`,']') AS `previous_states`,`a`.`from` AS `publisher`,concat(left(`a`.`from`,6),'...',right(`a`.`from`,4)) AS `publisher_short`,`a`.`owner` AS `owner`,`a`.`winners` AS `winners` from (((`staging_pub` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_activity_last1min`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last1min`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_activity_last1min` AS with `activity_1` as (select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetCreated' AS `event_name`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetTransferred' AS `event_name`,`a`.`to` AS `event_value_1` from ((`content_asset_storage_transfer` `a` join `content_asset_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)) and (`a`.`from` <> '0x0000000000000000000000000000000000000000') and (`a`.`to` <> '0x0000000000000000000000000000000000000000')) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetBurnt' AS `event_name`,cast((cast(`a`.`returned_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_burnt` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetUpdated' AS `event_name`,cast((cast(`a`.`update_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_state_updated` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`a`.`from` AS `signer`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from (((`activity_1` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_activity_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_activity_last24h` AS with `activity_1` as (select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetCreated' AS `event_name`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetTransferred' AS `event_name`,`a`.`to` AS `event_value_1` from ((`content_asset_storage_transfer` `a` join `content_asset_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)) and (`a`.`from` <> '0x0000000000000000000000000000000000000000') and (`a`.`to` <> '0x0000000000000000000000000000000000000000')) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetBurnt' AS `event_name`,cast((cast(`a`.`returned_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_burnt` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetUpdated' AS `event_name`,cast((cast(`a`.`update_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_state_updated` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`a`.`from` AS `signer`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from (((`activity_1` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_daily` AS select `a`.`block_date` AS `date`,ifnull((sum(`a`.`total_size`) / sum(`a`.`total_pubs`)),0) AS `avgPubSize`,ifnull((sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)),0) AS `avgEpochsNumber`,ifnull((sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)),0) AS `avgPubPrice`,ifnull((sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)),0) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,ifnull(round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0),0) AS `privatePubsPercentage`,sum(sum(`a`.`total_trac_spent`)) OVER (ORDER BY `a`.`block_date` )  AS `cumulativeTotalTracSpent`,sum(sum(`a`.`total_pubs`)) OVER (ORDER BY `a`.`block_date` )  AS `cumulativePubs` from `stats_pub` `a` group by `a`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_hourly`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_hourly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_hourly` AS select `a`.`block_date` AS `date`,`a`.`block_ts_hour` AS `datetime`,ifnull((`a`.`total_size` / `a`.`total_pubs`),0) AS `avgPubSize`,ifnull((`a`.`total_epochs` / `a`.`total_pubs`),0) AS `avgEpochsNumber`,ifnull((`a`.`total_trac_spent` / `a`.`total_pubs`),0) AS `avgPubPrice`,ifnull((`a`.`total_bid` / `a`.`total_pubs`),0) AS `avgBid`,`a`.`total_pubs` AS `totalPubs`,`a`.`total_trac_spent` AS `totalTracSpent`,round((ifnull((`a`.`private_pubs` / `a`.`total_pubs`),0) * 100),0) AS `privatePubsPercentage`,sum(`a`.`total_trac_spent`) OVER (ORDER BY `a`.`block_date`,`a`.`block_ts_hour` )  AS `cumulativeTotalTracSpent`,sum(`a`.`total_pubs`) OVER (ORDER BY `a`.`block_date`,`a`.`block_ts_hour` )  AS `cumulativePubs` from `stats_pub` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last1h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last1h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last1h` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_ts` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(2) hour) from `v_sys_staging_date`)) and (`a`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last24h` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last30d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last7d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_monthly` AS with `daily` as (select `stats_pub`.`block_date` AS `date`,sum(`stats_pub`.`total_size`) AS `size`,sum(`stats_pub`.`total_epochs`) AS `epochs_number`,sum(`stats_pub`.`total_bid`) AS `bid`,sum(`stats_pub`.`total_pubs`) AS `totalPubs`,sum(`stats_pub`.`total_trac_spent`) AS `totalTracSpent`,sum(`stats_pub`.`private_pubs`) AS `privatePubs` from `stats_pub` group by `stats_pub`.`block_date`) select date_format(`daily`.`date`,'%Y-%m-01') AS `date`,(sum(`daily`.`size`) / sum(`daily`.`totalPubs`)) AS `avgPubSize`,(sum(`daily`.`epochs_number`) / sum(`daily`.`totalPubs`)) AS `avgEpochsNumber`,(sum(`daily`.`totalTracSpent`) / sum(`daily`.`totalPubs`)) AS `avgPubPrice`,(sum(`daily`.`bid`) / sum(`daily`.`totalPubs`)) AS `avgBid`,sum(`daily`.`totalPubs`) AS `totalPubs`,sum(`daily`.`totalTracSpent`) AS `totalTracSpent`,round(((sum(`daily`.`privatePubs`) / sum(`daily`.`totalPubs`)) * 100),0) AS `privatePubsPercentage`,sum(sum(`daily`.`totalTracSpent`)) OVER (ORDER BY date_format(`daily`.`date`,'%Y-%m-01') )  AS `cumulativeTotalTracSpent`,sum(sum(`daily`.`totalPubs`)) OVER (ORDER BY date_format(`daily`.`date`,'%Y-%m-01') )  AS `cumulativePubs` from `daily` group by date_format(`daily`.`date`,'%Y-%m-01') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_total`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_total`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_total` AS select (sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_notif_contracts_change`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_notif_contracts_change`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_notif_contracts_change` AS with `a` as (select `hub_asset_storage_changed`.`block_number` AS `block_number` from `hub_asset_storage_changed` union all select `hub_contract_changed`.`block_number` AS `block_number` from `hub_contract_changed` union all select `hub_new_asset_storage`.`block_number` AS `block_number` from `hub_new_asset_storage` union all select `hub_new_contract`.`block_number` AS `block_number` from `hub_new_contract`) select cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date` from (`a` left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) >= (cast(curdate() as date) - interval 2 day)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_date`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_date`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_date` AS select `block`.`number` AS `number`,`block`.`timestamp` AS `timestamp`,cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour` from `block` where (`block`.`number` = (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table') limit 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_commit_submitted`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_commit_submitted`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_commit_submitted` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`service_agreement_v1_commit_submitted` `a` left join `service_agreement_v1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`commit_manager_v1_commit_submitted` `a` left join `commit_manager_v1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`commit_manager_v1_u1_commit_submitted` `a` left join `commit_manager_v1_u1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`state_index` = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_proof_submitted`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_proof_submitted`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_proof_submitted` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`service_agreement_v1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `service_agreement_v1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`proof_manager_v1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `proof_manager_v1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`block_number` <> 2881732) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`proof_manager_v1_u1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `proof_manager_v1_u1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_pub`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_pub`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_pub` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,ifnull(`d`.`create_asset_size`,0) AS `size`,ifnull(`d`.`create_asset_triples_number`,0) AS `triples_number`,ifnull(`d`.`create_asset_chunks_number`,0) AS `chunks_number`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `token_amount`,(case when (`d`.`create_asset_size` is not null) then cast(((((cast(`a`.`token_amount` as decimal(45,18)) / `a`.`epochs_number`) / 3) / (`d`.`create_asset_size` / 1024)) / 1000000000000000000) as decimal(27,18)) else 0 end) AS `bid`,`d`.`hash` AS `transaction_hash`,`a`.`transaction_index` AS `transaction_index`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,0 AS `state_index`,ifnull(`b`.`state`,0) AS `state`,NULL AS `previous_states`,ifnull(`d`.`from`,'0x0') AS `from` from (((`service_agreement_v1_service_agreement_v1_created` `a` left join `content_asset_asset_minted` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `content_asset_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_update_dead`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_update_dead`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_update_dead` AS select (case when (((select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block')) - (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table'))) > 100) then ((select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block')) - (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table'))) else NULL end) AS `sync_delta` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_sync_date`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_sync_date`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_sync_date` AS select `block`.`number` AS `number`,`block`.`timestamp` AS `timestamp`,cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour` from `block` where (`block`.`number` = (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block') limit 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_tx_all`
--

/*!50001 DROP VIEW IF EXISTS `v_tx_all`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_tx_all` AS select `assertion_tx`.`block_number` AS `block_number`,`assertion_tx`.`hash` AS `hash`,'assertion_tx' AS `table` from `assertion_tx` union all select `commit_manager_v1_tx`.`block_number` AS `block_number`,`commit_manager_v1_tx`.`hash` AS `hash`,'commit_manager_v1_tx' AS `commit_manager_v1_tx` from `commit_manager_v1_tx` union all select `commit_manager_v1_u1_tx`.`block_number` AS `block_number`,`commit_manager_v1_u1_tx`.`hash` AS `hash`,'commit_manager_v1_u1_tx' AS `commit_manager_v1_u1_tx` from `commit_manager_v1_u1_tx` union all select `content_asset_tx`.`block_number` AS `block_number`,`content_asset_tx`.`hash` AS `hash`,'content_asset_tx' AS `content_asset_tx` from `content_asset_tx` union all select `hub_tx`.`block_number` AS `block_number`,`hub_tx`.`hash` AS `hash`,'hub_tx' AS `hub_tx` from `hub_tx` union all select `identity_tx`.`block_number` AS `block_number`,`identity_tx`.`hash` AS `hash`,'identity_tx' AS `identity_tx` from `identity_tx` union all select `other_tx`.`block_number` AS `block_number`,`other_tx`.`hash` AS `hash`,'other_tx' AS `other_tx` from `other_tx` union all select `profile_tx`.`block_number` AS `block_number`,`profile_tx`.`hash` AS `hash`,'profile_tx' AS `profile_tx` from `profile_tx` union all select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`hash` AS `hash`,'proof_manager_v1_tx' AS `proof_manager_v1_tx` from `proof_manager_v1_tx` union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`hash` AS `hash`,'proof_manager_v1_u1_tx' AS `proof_manager_v1_u1_tx` from `proof_manager_v1_u1_tx` union all select `service_agreement_v1_tx`.`block_number` AS `block_number`,`service_agreement_v1_tx`.`hash` AS `hash`,'service_agreement_v1_tx' AS `service_agreement_v1_tx` from `service_agreement_v1_tx` union all select `sharding_table_tx`.`block_number` AS `block_number`,`sharding_table_tx`.`hash` AS `hash`,'sharding_table_tx' AS `sharding_table_tx` from `sharding_table_tx` union all select `staking_tx`.`block_number` AS `block_number`,`staking_tx`.`hash` AS `hash`,'staking_tx' AS `staking_tx` from `staking_tx` union all select `token_tx`.`block_number` AS `block_number`,`token_tx`.`hash` AS `hash`,'token_tx' AS `token_tx` from `token_tx` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-01-25  9:39:58
CREATE DATABASE  IF NOT EXISTS `sync_otp_testnet` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;
USE `sync_otp_testnet`;
-- MySQL dump 10.13  Distrib 8.0.32, for Win64 (x86_64)
--
-- Host: 127.0.0.1    Database: sync_otp_testnet
-- ------------------------------------------------------
-- Server version	8.0.32

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `assertion_assertion_created`
--

DROP TABLE IF EXISTS `assertion_assertion_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `assertion_assertion_created` (
  `assertion_id` char(66) DEFAULT NULL,
  `size` int unsigned DEFAULT NULL,
  `triples_number` mediumint unsigned DEFAULT NULL,
  `chunks_number` mediumint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_assertion_assertion_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_assertion_assertion_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `assertion_tx`
--

DROP TABLE IF EXISTS `assertion_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `assertion_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` int unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_assertion_assertion_id` char(66) DEFAULT NULL,
  `create_assertion_size` int unsigned DEFAULT NULL,
  `create_assertion_triples_number` mediumint unsigned DEFAULT NULL,
  `create_assertion_chunks_number` mediumint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_assertion_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_assertion_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `block`
--

DROP TABLE IF EXISTS `block`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `block` (
  `number` int unsigned NOT NULL,
  `timestamp` int unsigned DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`number`),
  UNIQUE KEY `v_nodes_activity` (`timestamp` DESC,`number`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_commit_submitted`
--

DROP TABLE IF EXISTS `commit_manager_v1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_commit_submitted` (
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `score` int unsigned DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`identity_id`,`epoch`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_commit_submitted_contract_id` (`contract_id`),
  KEY `fk_commit_manager_v1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_tx`
--

DROP TABLE IF EXISTS `commit_manager_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` int unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_tx_contract_id` (`to_id`),
  KEY `fk_commit_manager_v1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_commit_submitted`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_commit_submitted` (
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `score` int unsigned DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`epoch`,`identity_id`,`state_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_commit_submitted_contract_id` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_state_finalized`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_state_finalized`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_state_finalized` (
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `state` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`epoch`,`state_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_state_finalized_asset_contract_id` (`asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_state_finalized_contract_id` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_state_finalized_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_state_finalized_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_tx`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` int unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `submit_update_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_update_commit_keyword` char(64) DEFAULT NULL,
  `submit_update_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_update_commit_epoch` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `submit_update_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_tx_contract_id` (`to_id`),
  KEY `fk_commit_manager_v1_u1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_tx_update_commit_asset_contract_id` (`submit_update_commit_asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_update_commit_asset_contract_id` FOREIGN KEY (`submit_update_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_burnt`
--

DROP TABLE IF EXISTS `content_asset_asset_burnt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_burnt` (
  `token_id` bigint unsigned NOT NULL,
  `returned_token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_burnt_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_burnt_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_burnt_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_burnt_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_minted`
--

DROP TABLE IF EXISTS `content_asset_asset_minted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_minted` (
  `token_id` bigint unsigned NOT NULL,
  `state` char(66) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`state`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_minted_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_minted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_minted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_minted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_state_update_canceled`
--

DROP TABLE IF EXISTS `content_asset_asset_state_update_canceled`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_state_update_canceled` (
  `token_id` bigint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `returned_token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`state_index`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_state_update_canceled_asset_contract_id` (`asset_contract_id`),
  KEY `fk_content_asset_asset_state_update_canceled_contract_id` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_update_canceled_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_update_canceled_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_state_updated`
--

DROP TABLE IF EXISTS `content_asset_asset_state_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_state_updated` (
  `token_id` bigint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `update_token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`state_index`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_state_updated_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_state_updated_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_updated_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_storing_period_extended`
--

DROP TABLE IF EXISTS `content_asset_asset_storing_period_extended`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_storing_period_extended` (
  `token_id` bigint unsigned NOT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_storing_period_extended_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_storing_period_extended_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_storing_period_extended_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_storing_period_extended_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_update_payment_increased`
--

DROP TABLE IF EXISTS `content_asset_asset_update_payment_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_update_payment_increased` (
  `token_id` bigint unsigned NOT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_update_payment_increased_contract_id` (`contract_id`),
  KEY `f_content_asset_asset_update_payment_increased_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `f_content_asset_asset_update_payment_increased_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_update_payment_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_payment_increased`
--

DROP TABLE IF EXISTS `content_asset_payment_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_payment_increased` (
  `token_id` bigint unsigned NOT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_payment_increased_contract_id` (`contract_id`),
  KEY `fk_content_asset_payment_increased_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_payment_increased_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_payment_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_storage_transfer`
--

DROP TABLE IF EXISTS `content_asset_storage_transfer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_storage_transfer` (
  `from` char(42) DEFAULT NULL,
  `to` char(42) DEFAULT NULL,
  `token_id` bigint unsigned NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_storage_transfer_contract_id` (`contract_id`),
  CONSTRAINT `fk_content_asset_storage_transfer_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_storage_tx`
--

DROP TABLE IF EXISTS `content_asset_storage_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_storage_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` int unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_storage_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_content_asset_storage_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_tx`
--

DROP TABLE IF EXISTS `content_asset_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_asset_assertion_id` char(66) DEFAULT NULL,
  `create_asset_size` int unsigned DEFAULT NULL,
  `create_asset_triples_number` mediumint unsigned DEFAULT NULL,
  `create_asset_chunks_number` mediumint unsigned DEFAULT NULL,
  `create_asset_epochs_number` smallint unsigned DEFAULT NULL,
  `create_asset_token_amount` decimal(27,0) DEFAULT NULL,
  `create_asset_score_function_id` tinyint unsigned DEFAULT NULL,
  `create_asset_immutable_` tinyint unsigned DEFAULT NULL,
  `burn_asset_token_id` bigint unsigned DEFAULT NULL,
  `cancel_asset_state_update_token_id` bigint unsigned DEFAULT NULL,
  `extend_asset_storing_period_token_id` bigint unsigned DEFAULT NULL,
  `extend_asset_storing_period_epochs_number` smallint unsigned DEFAULT NULL,
  `extend_asset_storing_period_token_amount` decimal(27,0) DEFAULT NULL,
  `increase_asset_token_amount_token_id` bigint unsigned DEFAULT NULL,
  `increase_asset_token_amount_token_amount` decimal(27,0) DEFAULT NULL,
  `increase_asset_update_token_amount_token_id` bigint unsigned DEFAULT NULL,
  `increase_asset_update_token_amount_token_amount` decimal(27,0) DEFAULT NULL,
  `update_asset_state_token_id` bigint unsigned DEFAULT NULL,
  `update_asset_state_assertion_id` char(66) DEFAULT NULL,
  `update_asset_state_size` int unsigned DEFAULT NULL,
  `update_asset_state_triples_number` mediumint unsigned DEFAULT NULL,
  `update_asset_state_chunks_number` mediumint unsigned DEFAULT NULL,
  `update_asset_state_update_token_amount` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_content_asset_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `contracts`
--

DROP TABLE IF EXISTS `contracts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `contracts` (
  `contract_id` tinyint unsigned NOT NULL AUTO_INCREMENT,
  `contract_address` char(42) NOT NULL,
  PRIMARY KEY (`contract_id`),
  UNIQUE KEY `contract_address` (`contract_address`)
) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_asset_storage_changed`
--

DROP TABLE IF EXISTS `hub_asset_storage_changed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_asset_storage_changed` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_hub_asset_storage_changed_contract_id` (`contract_id`),
  CONSTRAINT `fk_hub_asset_storage_changed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_contract_changed`
--

DROP TABLE IF EXISTS `hub_contract_changed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_contract_changed` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_contract_changed_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_contract_changed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_new_asset_storage`
--

DROP TABLE IF EXISTS `hub_new_asset_storage`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_new_asset_storage` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_new_asset_storage_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_new_asset_storage_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_new_contract`
--

DROP TABLE IF EXISTS `hub_new_contract`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_new_contract` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_new_contract_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_new_contract_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_tx`
--

DROP TABLE IF EXISTS `hub_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `set_contract_address_contract_name` varchar(255) DEFAULT NULL,
  `set_contract_address_new_contract_address` varchar(42) DEFAULT NULL,
  `set_asset_storage_address_asset_storage_name` varchar(255) DEFAULT NULL,
  `set_asset_storage_address_asset_storage_address` varchar(42) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_hub_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_hub_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_identity_created`
--

DROP TABLE IF EXISTS `identity_identity_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_identity_created` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `operational_key` char(66) DEFAULT NULL,
  `admin_key` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_identity_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_identity_identity_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_identity_deleted`
--

DROP TABLE IF EXISTS `identity_identity_deleted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_identity_deleted` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_identity_deleted_contract_id` (`contract_id`),
  CONSTRAINT `fk_identity_identity_deleted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_key_added`
--

DROP TABLE IF EXISTS `identity_storage_key_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_key_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `key` char(66) DEFAULT NULL,
  `purpose` tinyint unsigned DEFAULT NULL,
  `key_type` tinyint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_identity_storage_key_added_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_identity_storage_key_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_key_removed`
--

DROP TABLE IF EXISTS `identity_storage_key_removed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_key_removed` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `key` char(66) DEFAULT NULL,
  `purpose` tinyint unsigned DEFAULT NULL,
  `key_type` tinyint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_identity_storage_key_removed_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_identity_storage_key_removed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_tx`
--

DROP TABLE IF EXISTS `identity_storage_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `delete_identity` smallint unsigned DEFAULT NULL,
  `set_operational_key_identity_id_operational_key` char(66) DEFAULT NULL,
  `set_operational_key_identity_id_identity_id` smallint unsigned DEFAULT NULL,
  `remote_operational_key_identity_id_operational_key` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_storage_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_identity_storage_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_tx`
--

DROP TABLE IF EXISTS `identity_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_key_identity_id` smallint unsigned DEFAULT NULL,
  `add_key_key` char(66) DEFAULT NULL,
  `add_key_key_purpose` tinyint unsigned DEFAULT NULL,
  `add_key_key_type` tinyint unsigned DEFAULT NULL,
  `create_identity_operational` char(42) DEFAULT NULL,
  `create_identity_admin` char(42) DEFAULT NULL,
  `delete_identity_identity_id` smallint unsigned DEFAULT NULL,
  `remove_key_identity_id` smallint unsigned DEFAULT NULL,
  `remove_key_key` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_identity_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `manual_bad_txs`
--

DROP TABLE IF EXISTS `manual_bad_txs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `manual_bad_txs` (
  `transaction_hash` varchar(66) NOT NULL,
  `comment` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `other_tx`
--

DROP TABLE IF EXISTS `other_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `other_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `input` text NOT NULL,
  `to` char(42) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_ask_updated`
--

DROP TABLE IF EXISTS `profile_ask_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_ask_updated` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(255) DEFAULT NULL,
  `ask` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_ask_updated_contract_id` (`contract_id`),
  KEY `v_nodes` (`identity_id`,`ask`,`block_number`),
  CONSTRAINT `fk_profile_ask_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_profile_created`
--

DROP TABLE IF EXISTS `profile_profile_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_profile_created` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(106) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_profile_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_profile_profile_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_profile_deleted`
--

DROP TABLE IF EXISTS `profile_profile_deleted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_profile_deleted` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_profile_deleted_contract_id` (`contract_id`),
  CONSTRAINT `fk_profile_profile_deleted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_tx`
--

DROP TABLE IF EXISTS `profile_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_profile_admin_wallet` char(42) DEFAULT NULL,
  `create_profile_node_id` char(106) DEFAULT NULL,
  `create_profile_shares_token_name` varchar(255) DEFAULT NULL,
  `create_profile_shares_token_symbol` varchar(255) DEFAULT NULL,
  `set_ask_identity_id` smallint unsigned DEFAULT NULL,
  `set_ask_ask` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_profile_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_proof_submitted`
--

DROP TABLE IF EXISTS `proof_manager_v1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_proof_manager_v1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_tx`
--

DROP TABLE IF EXISTS `proof_manager_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `get_challenge_sender` char(42) DEFAULT NULL,
  `get_challenge_token_id` bigint unsigned DEFAULT NULL,
  `get_challenge_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `get_challenge_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_tx_contract_id` (`to_id`),
  KEY `fk_proof_manager_v1_tx_get_challenge_asset_contract_id` (`get_challenge_asset_contract_id`),
  KEY `fk_proof_manager_v1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_get_challenge_asset_contract_id` FOREIGN KEY (`get_challenge_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_u1_proof_submitted`
--

DROP TABLE IF EXISTS `proof_manager_v1_u1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_u1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `state_index` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_u1_proof_submitted_no_state`
--

DROP TABLE IF EXISTS `proof_manager_v1_u1_proof_submitted_no_state`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_u1_proof_submitted_no_state` (
  `token_id` bigint DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` int DEFAULT NULL,
  `epoch` int DEFAULT NULL,
  `identity_id` int DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_proof_manager_v1_u1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_proof_manager_v1_u1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_u1_tx`
--

DROP TABLE IF EXISTS `proof_manager_v1_u1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_u1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `get_challenge_token_id` bigint unsigned DEFAULT NULL,
  `get_challenge_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `get_challenge_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_u1_tx_contract_id` (`to_id`),
  KEY `fk_proof_manager_v1_u1_tx_get_challenge_asset_contract_id` (`get_challenge_asset_contract_id`),
  KEY `fk_proof_manager_v1_u1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_get_challenge_asset_contract_id` FOREIGN KEY (`get_challenge_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_commit_submitted`
--

DROP TABLE IF EXISTS `service_agreement_v1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_commit_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `score` int unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_commit_submitted_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_proof_submitted`
--

DROP TABLE IF EXISTS `service_agreement_v1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_created`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_created` (
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `start_time` int unsigned DEFAULT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `epoch_length` int unsigned DEFAULT NULL,
  `token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_service_agreement_v1_created_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_created_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_created_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_service_agreement_v1_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_extended`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_extended`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_extended` (
  `agreement_id` char(66) DEFAULT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_ervice_agreement_v1_service_agreement_v1_extended_contract_id` (`contract_id`),
  CONSTRAINT `fk_ervice_agreement_v1_service_agreement_v1_extended_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_reward_raised`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_reward_raised`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_reward_raised` (
  `agreement_id` char(66) DEFAULT NULL,
  `token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_e_agreement_v1_service_agreement_v1_reward_raised_contract_id` (`contract_id`),
  CONSTRAINT `fk_e_agreement_v1_service_agreement_v1_reward_raised_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_terminated`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_terminated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_terminated` (
  `agreement_id` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_vice_agreement_v1_service_agreement_v1_terminated_contract_id` (`contract_id`),
  CONSTRAINT `fk_vice_agreement_v1_service_agreement_v1_terminated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_update_reward_raised`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_update_reward_raised`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_update_reward_raised` (
  `agreement_id` char(66) DEFAULT NULL,
  `update_token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_ment_v1_service_agreement_v1_update_reward_raised_contract_id` (`contract_id`),
  CONSTRAINT `fk_ment_v1_service_agreement_v1_update_reward_raised_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_tx`
--

DROP TABLE IF EXISTS `service_agreement_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_tokens_asset_owner` char(42) DEFAULT NULL,
  `add_tokens_agreement_id` char(66) DEFAULT NULL,
  `add_tokens_token_amount` decimal(27,0) DEFAULT NULL,
  `add_update_tokens_asset_owner` char(42) DEFAULT NULL,
  `add_update_tokens_agreement_id` char(66) DEFAULT NULL,
  `add_update_tokens_token_amount` decimal(27,0) DEFAULT NULL,
  `create_service_agreement_asset_creator` char(42) DEFAULT NULL,
  `create_service_agreement_token_id` bigint unsigned DEFAULT NULL,
  `create_service_agreement_keyword` char(64) DEFAULT NULL,
  `create_service_agreement_hash_function_id` tinyint unsigned DEFAULT NULL,
  `create_service_agreement_epochs_number` smallint unsigned DEFAULT NULL,
  `create_service_agreement_token_amount` decimal(27,0) DEFAULT NULL,
  `create_service_agreement_score_function_id` tinyint unsigned DEFAULT NULL,
  `extend_storing_period_asset_owner` char(42) DEFAULT NULL,
  `extend_storing_agreement_id` char(66) DEFAULT NULL,
  `extend_storing_epochs_number` smallint unsigned DEFAULT NULL,
  `extend_storing_token_amount` decimal(27,0) DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `terminate_agreement_asset_owner` char(42) DEFAULT NULL,
  `terminate_agreement_agreement_id` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `create_service_agreement_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_tx_contract_id` (`to_id`),
  KEY `fk_service_agreement_v1_tx_create_asset_contract_id` (`create_service_agreement_asset_contract_id`),
  KEY `fk_service_agreement_v1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  KEY `fk_service_agreement_v1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_create_asset_contract_id` FOREIGN KEY (`create_service_agreement_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_node_added`
--

DROP TABLE IF EXISTS `sharding_table_node_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_node_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(106) DEFAULT NULL,
  `ask` decimal(27,0) DEFAULT NULL,
  `stake` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_node_added_contract_id` (`contract_id`),
  CONSTRAINT `fk_sharding_table_node_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_node_removed`
--

DROP TABLE IF EXISTS `sharding_table_node_removed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_node_removed` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(106) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_node_removed_contract_id` (`contract_id`),
  CONSTRAINT `fk_sharding_table_node_removed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_tx`
--

DROP TABLE IF EXISTS `sharding_table_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `to` varchar(42) NOT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `push_back_identity_id` smallint unsigned DEFAULT NULL,
  `push_front_identity_id` smallint unsigned DEFAULT NULL,
  `remove_node_identity_id` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_sharding_table_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_commit_submitted`
--

DROP TABLE IF EXISTS `staging_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_commit_submitted` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `hash_function_id` tinyint unsigned NOT NULL,
  `epoch` smallint unsigned NOT NULL,
  `score` int unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `rank` smallint DEFAULT NULL,
  `estimated_earnings_any_epoch` decimal(27,18) DEFAULT NULL,
  `estimated_earnings_1st_epoch_only` decimal(27,18) DEFAULT NULL,
  `commit_any_epoch` bit(1) DEFAULT NULL,
  `commit_1st_epoch` bit(1) DEFAULT NULL,
  `commit_any_epoch_incl_out_of_top3` bit(1) DEFAULT NULL,
  `commit_1st_epoch_incl_out_of_top3` bit(1) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`,`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_sp_update_staging1` (`block_number`,`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`score`,`transaction_index`),
  KEY `idx_sp_update_staging2` (`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`),
  KEY `v_nodes_stats_hourly_7d` (`block_date`,`identity_id`,`block_ts_hour`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`),
  KEY `v_chart_earnings_payouts_daily` (`block_date`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`),
  KEY `v_nodes_assets` (`identity_id`,`token_id`,`asset_contract_id`,`epoch`),
  KEY `v_nodes_stats_hourly_7d_avgnode` (`block_date`,`block_ts_hour`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_proof_submitted`
--

DROP TABLE IF EXISTS `staging_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_proof_submitted` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `epoch` smallint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `transaction_index` smallint NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `value` decimal(27,18) NOT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`,`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_sp_update_staging1` (`block_number`,`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`value`,`transaction_index`),
  KEY `v_nodes_stats_hourly_7d` (`block_date`,`identity_id`,`block_ts_hour`,`value`),
  KEY `v_chart_earnings_payouts_daily` (`block_date`,`value`),
  KEY `v_nodes_assets` (`identity_id`,`token_id`,`asset_contract_id`,`epoch`,`value`),
  KEY `v_nodes_stats_hourly_7d_avgnode` (`block_date`,`block_ts_hour`,`value`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_pub`
--

DROP TABLE IF EXISTS `staging_pub`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_pub` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `size` int unsigned NOT NULL,
  `triples_number` mediumint unsigned NOT NULL,
  `chunks_number` mediumint unsigned NOT NULL,
  `hash_function_id` tinyint unsigned NOT NULL,
  `epochs_number` smallint unsigned NOT NULL,
  `epoch_length` int unsigned NOT NULL,
  `token_amount` decimal(27,18) NOT NULL,
  `bid` decimal(27,18) NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `state` char(66) NOT NULL,
  `previous_states` varchar(8000) DEFAULT NULL,
  `from` char(42) NOT NULL,
  `owner` char(42) DEFAULT NULL,
  `winners` varchar(2300) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  KEY `idx_v_pubs_stats` (`block_date`,`size`,`epochs_number`,`token_amount`,`bid`),
  KEY `idx_v_pubs_stats_hourly` (`block_date`,`block_ts_hour`,`size`,`epochs_number`,`token_amount`,`bid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_stake`
--

DROP TABLE IF EXISTS `staging_stake`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_stake` (
  `identity_id` smallint unsigned NOT NULL,
  `block_date` date NOT NULL,
  `block_ts_hour` datetime NOT NULL,
  `stake_change` decimal(27,18) DEFAULT NULL,
  `stake` decimal(27,18) DEFAULT NULL,
  `ask` decimal(27,18) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`),
  UNIQUE KEY `v_nodes` (`block_date`,`block_ts_hour`,`identity_id`,`stake`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_accumulated_operator_fee_increased`
--

DROP TABLE IF EXISTS `staking_accumulated_operator_fee_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_accumulated_operator_fee_increased` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(106) DEFAULT NULL,
  `old_accumulated_operator_fee` decimal(27,0) DEFAULT NULL,
  `new_accumulated_operator_fee` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_accumulated_operator_fee_increased_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_accumulated_operator_fee_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_accumulated_operator_fee_updated`
--

DROP TABLE IF EXISTS `staking_accumulated_operator_fee_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_accumulated_operator_fee_updated` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(106) DEFAULT NULL,
  `operator_fee` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_accumulated_operator_fee_updated_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_accumulated_operator_fee_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_reward_added`
--

DROP TABLE IF EXISTS `staking_reward_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_reward_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(106) DEFAULT NULL,
  `reward_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_reward_added_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`reward_amount`),
  CONSTRAINT `fk_staking_reward_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_increased`
--

DROP TABLE IF EXISTS `staking_stake_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_increased` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(106) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `old_stake` decimal(27,0) DEFAULT NULL,
  `new_stake` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_increased_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`new_stake`,`old_stake`),
  CONSTRAINT `fk_staking_stake_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_withdrawal_started`
--

DROP TABLE IF EXISTS `staking_stake_withdrawal_started`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_withdrawal_started` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(106) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `old_stake` decimal(27,0) DEFAULT NULL,
  `new_stake` decimal(27,0) DEFAULT NULL,
  `stake_amount` decimal(27,0) DEFAULT NULL,
  `withdrawal_period_end` bigint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_withdrawal_started_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_stake_withdrawal_started_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_withdrawn`
--

DROP TABLE IF EXISTS `staking_stake_withdrawn`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_withdrawn` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(106) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `withdrawn_stake_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_withdrawn_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`withdrawn_stake_amount`),
  CONSTRAINT `fk_staking_stake_withdrawn_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_tx`
--

DROP TABLE IF EXISTS `staking_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_reward_agreement_id` char(66) DEFAULT NULL,
  `add_reward_identity_id` smallint unsigned DEFAULT NULL,
  `add_reward_reward_amount` decimal(27,0) DEFAULT NULL,
  `add_stake_identity_id` smallint unsigned DEFAULT NULL,
  `add_stake_stake_amount` decimal(27,0) DEFAULT NULL,
  `set_operator_fee_identity_id` smallint unsigned DEFAULT NULL,
  `set_operator_fee_operator_fee` decimal(27,0) DEFAULT NULL,
  `slash_identity_id` smallint unsigned DEFAULT NULL,
  `start_stake_withdrawal_identity_id` smallint unsigned DEFAULT NULL,
  `start_stake_withdrawal_shares_to_burn` decimal(27,0) DEFAULT NULL,
  `withdraw_stake_identity_id` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_staking_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `stats_node`
--

DROP TABLE IF EXISTS `stats_node`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `stats_node` (
  `identity_id` smallint unsigned NOT NULL,
  `block_date` date NOT NULL,
  `node_stake` decimal(27,18) DEFAULT '0.000000000000000000',
  `commit_any_epoch` int unsigned DEFAULT '0',
  `commit_1st_epoch` int unsigned DEFAULT '0',
  `estimated_earnings_any_epoch` decimal(27,18) DEFAULT '0.000000000000000000',
  `estimated_earnings_1st_epoch_only` decimal(27,18) DEFAULT '0.000000000000000000',
  `payouts` decimal(27,18) DEFAULT '0.000000000000000000',
  `proofs_submitted` int unsigned DEFAULT '0',
  `ask` decimal(27,18) DEFAULT '0.000000000000000000',
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`),
  KEY `block_date` (`block_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `stats_pub`
--

DROP TABLE IF EXISTS `stats_pub`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `stats_pub` (
  `block_date` date NOT NULL,
  `block_ts_hour` datetime NOT NULL,
  `total_size` int unsigned DEFAULT '0',
  `total_epochs` int unsigned DEFAULT '0',
  `total_bid` decimal(27,18) DEFAULT '0.000000000000000000',
  `total_pubs` int unsigned DEFAULT '0',
  `total_trac_spent` decimal(27,18) DEFAULT '0.000000000000000000',
  `private_pubs` int unsigned DEFAULT '0',
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`block_date`,`block_ts_hour`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sync_status`
--

DROP TABLE IF EXISTS `sync_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sync_status` (
  `parameter` varchar(255) DEFAULT NULL,
  `block_num` int DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_approval`
--

DROP TABLE IF EXISTS `token_approval`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_approval` (
  `owner` char(42) DEFAULT NULL,
  `spender` char(42) DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_token_approval_contract_id` (`contract_id`),
  CONSTRAINT `fk_token_approval_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_transfer`
--

DROP TABLE IF EXISTS `token_transfer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_transfer` (
  `from` char(42) DEFAULT NULL,
  `to` char(42) DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_token_transfer_contract_id` (`contract_id`),
  CONSTRAINT `fk_token_transfer_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_tx`
--

DROP TABLE IF EXISTS `token_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` bigint unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `transfer_to` char(42) DEFAULT NULL,
  `transfer_amount` decimal(27,0) DEFAULT NULL,
  `transfer_from_from` char(42) DEFAULT NULL,
  `transfer_from_to` char(42) DEFAULT NULL,
  `transfer_from_amount` decimal(27,0) DEFAULT NULL,
  `allowance_owner` char(42) DEFAULT NULL,
  `allowance_spender` char(42) DEFAULT NULL,
  `approve_spender` char(42) DEFAULT NULL,
  `approve_amount` decimal(27,0) DEFAULT NULL,
  `mint_to` char(42) DEFAULT NULL,
  `mint_amount` decimal(27,0) DEFAULT NULL,
  `decrease_allowance_subtracted_value` decimal(27,0) DEFAULT NULL,
  `increase_allowance_added_value` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `increase_allowance_spender_id` tinyint unsigned DEFAULT NULL,
  `decrease_allowance_spender_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_token_tx_contract_id` (`to_id`),
  KEY `fk_token_tx_increase_allowance_spender_id` (`increase_allowance_spender_id`),
  KEY `fk_token_tx_decrease_allowance_spender_id` (`decrease_allowance_spender_id`),
  CONSTRAINT `fk_token_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_token_tx_decrease_allowance_spender_id` FOREIGN KEY (`decrease_allowance_spender_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_token_tx_increase_allowance_spender_id` FOREIGN KEY (`increase_allowance_spender_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Temporary view structure for view `v_asset_history`
--

DROP TABLE IF EXISTS `v_asset_history`;
/*!50001 DROP VIEW IF EXISTS `v_asset_history`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_asset_history` AS SELECT 
 1 AS `event`,
 1 AS `token_id`,
 1 AS `asset_contract`,
 1 AS `log_index`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `address`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `block_ts`,
 1 AS `block_date`,
 1 AS `block_ts_hour`,
 1 AS `minted_state`,
 1 AS `minted_keyword`,
 1 AS `minted_hash_function_id`,
 1 AS `minted_start_time`,
 1 AS `minted_epochs_number`,
 1 AS `minted_epoch_length`,
 1 AS `minted_token_amount`,
 1 AS `minted_size`,
 1 AS `minted_triples_number`,
 1 AS `minted_chunks_number`,
 1 AS `transfer_from`,
 1 AS `transfer_to`,
 1 AS `state_updated_state_index`,
 1 AS `state_updated_update_token_amount`,
 1 AS `state_updated_finalized`,
 1 AS `update_cancelled_state_index`,
 1 AS `update_cancelled_returned_token_amount`,
 1 AS `storing_period_extended_epochs_number`,
 1 AS `storing_period_extended_token_amount`,
 1 AS `asset_update_payment_increased_token_amount`,
 1 AS `payment_increased_token_amount`,
 1 AS `burnt_returned_token_amount`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes`
--

DROP TABLE IF EXISTS `v_nodes`;
/*!50001 DROP VIEW IF EXISTS `v_nodes`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `createProfile_adminWallet`,
 1 AS `createProfile_adminWallet_hash`,
 1 AS `current_adminWallet_hashes`,
 1 AS `createProfile_blockNumber`,
 1 AS `createProfile_txHash`,
 1 AS `createProfile_ts`,
 1 AS `createProfile_date`,
 1 AS `nodeAgeDays`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_activity_last1min`
--

DROP TABLE IF EXISTS `v_nodes_activity_last1min`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last1min`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_activity_last1min` AS SELECT 
 1 AS `chain_id`,
 1 AS `nodeId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_activity_last24h`
--

DROP TABLE IF EXISTS `v_nodes_activity_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_activity_last24h` AS SELECT 
 1 AS `chain_id`,
 1 AS `nodeId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_avgnode`
--

DROP TABLE IF EXISTS `v_nodes_avgnode`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_avgnode`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_avgnode` AS SELECT 
 1 AS `NodeId`,
 1 AS `NetworkId`,
 1 AS `TokenName`,
 1 AS `TokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `createProfile_adminWallet`,
 1 AS `createProfile_adminWallet_hash`,
 1 AS `current_adminWallet_hashes`,
 1 AS `createProfile_blockNumber`,
 1 AS `createProfile_txHash`,
 1 AS `createProfile_ts`,
 1 AS `createProfile_date`,
 1 AS `nodeAgeDays`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_barebone`
--

DROP TABLE IF EXISTS `v_nodes_barebone`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_barebone`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_barebone` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `createProfile_adminWallet`,
 1 AS `createProfile_adminWallet_hash`,
 1 AS `current_adminWallet_hashes`,
 1 AS `createProfile_blockNumber`,
 1 AS `createProfile_txHash`,
 1 AS `createProfile_ts`,
 1 AS `createProfile_date`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stake`
--

DROP TABLE IF EXISTS `v_nodes_stake`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stake`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stake` AS SELECT 
 1 AS `nodeId`,
 1 AS `date`,
 1 AS `nodeStake`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_daily`
--

DROP TABLE IF EXISTS `v_nodes_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_daily` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_daily`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_daily`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_daily` AS SELECT 
 1 AS `date`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_hourly_7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_hourly_7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_hourly_7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_hourly_7d` AS SELECT 
 1 AS `date`,
 1 AS `datetime`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_monthly`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_monthly` AS SELECT 
 1 AS `date`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_total`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_total`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_total`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_total` AS SELECT 
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `proofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_hourly_7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_hourly_7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_hourly_7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_hourly_7d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `datetime`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last1h`
--

DROP TABLE IF EXISTS `v_nodes_stats_last1h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last1h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last1h` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last24h`
--

DROP TABLE IF EXISTS `v_nodes_stats_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last24h` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last30d`
--

DROP TABLE IF EXISTS `v_nodes_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last30d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last7d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_latest`
--

DROP TABLE IF EXISTS `v_nodes_stats_latest`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_latest`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_latest` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_monthly`
--

DROP TABLE IF EXISTS `v_nodes_stats_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_monthly` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs`
--

DROP TABLE IF EXISTS `v_pubs`;
/*!50001 DROP VIEW IF EXISTS `v_pubs`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs` AS SELECT 
 1 AS `contract_address`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `UAL`,
 1 AS `chain_id`,
 1 AS `chain_name`,
 1 AS `size`,
 1 AS `triples_number`,
 1 AS `chunks_number`,
 1 AS `hash_function_id`,
 1 AS `epochs_number`,
 1 AS `epoch_length`,
 1 AS `epoch_length_days`,
 1 AS `token_amount`,
 1 AS `bid`,
 1 AS `transaction_hash`,
 1 AS `transaction_index`,
 1 AS `block_number`,
 1 AS `block_timestamp`,
 1 AS `block_ts`,
 1 AS `block_date`,
 1 AS `block_ts_hour`,
 1 AS `state_index`,
 1 AS `state`,
 1 AS `previous_states`,
 1 AS `publisher`,
 1 AS `publisher_short`,
 1 AS `owner`,
 1 AS `winners`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_activity_last1min`
--

DROP TABLE IF EXISTS `v_pubs_activity_last1min`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last1min`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_activity_last1min` AS SELECT 
 1 AS `chain_id`,
 1 AS `signer`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_activity_last24h`
--

DROP TABLE IF EXISTS `v_pubs_activity_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_activity_last24h` AS SELECT 
 1 AS `chain_id`,
 1 AS `signer`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_daily`
--

DROP TABLE IF EXISTS `v_pubs_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_daily` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_hourly`
--

DROP TABLE IF EXISTS `v_pubs_stats_hourly`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_hourly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_hourly` AS SELECT 
 1 AS `date`,
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last1h`
--

DROP TABLE IF EXISTS `v_pubs_stats_last1h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last1h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last1h` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last24h`
--

DROP TABLE IF EXISTS `v_pubs_stats_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last24h` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last30d`
--

DROP TABLE IF EXISTS `v_pubs_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last30d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last7d`
--

DROP TABLE IF EXISTS `v_pubs_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last7d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_monthly`
--

DROP TABLE IF EXISTS `v_pubs_stats_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_monthly` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_total`
--

DROP TABLE IF EXISTS `v_pubs_stats_total`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_total`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_total` AS SELECT 
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_notif_contracts_change`
--

DROP TABLE IF EXISTS `v_sys_notif_contracts_change`;
/*!50001 DROP VIEW IF EXISTS `v_sys_notif_contracts_change`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_notif_contracts_change` AS SELECT 
 1 AS `block_date`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_date`
--

DROP TABLE IF EXISTS `v_sys_staging_date`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_date`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_date` AS SELECT 
 1 AS `number`,
 1 AS `timestamp`,
 1 AS `block_date`,
 1 AS `block_ts`,
 1 AS `block_ts_hour`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_commit_submitted`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_commit_submitted`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_commit_submitted`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_commit_submitted` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `identity_id`,
 1 AS `keyword`,
 1 AS `hash_function_id`,
 1 AS `epoch`,
 1 AS `score`,
 1 AS `state_index`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `contract_id`,
 1 AS `block_number`,
 1 AS `timestamp`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_proof_submitted`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_proof_submitted`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_proof_submitted`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_proof_submitted` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `epoch`,
 1 AS `identity_id`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `contract_id`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `value`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_pub`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_pub`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_pub`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_pub` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `size`,
 1 AS `triples_number`,
 1 AS `chunks_number`,
 1 AS `hash_function_id`,
 1 AS `epochs_number`,
 1 AS `epoch_length`,
 1 AS `token_amount`,
 1 AS `bid`,
 1 AS `transaction_hash`,
 1 AS `transaction_index`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `state_index`,
 1 AS `state`,
 1 AS `previous_states`,
 1 AS `from`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_update_dead`
--

DROP TABLE IF EXISTS `v_sys_staging_update_dead`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_update_dead`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_update_dead` AS SELECT 
 1 AS `sync_delta`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_sync_date`
--

DROP TABLE IF EXISTS `v_sys_sync_date`;
/*!50001 DROP VIEW IF EXISTS `v_sys_sync_date`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_sync_date` AS SELECT 
 1 AS `number`,
 1 AS `timestamp`,
 1 AS `block_date`,
 1 AS `block_ts`,
 1 AS `block_ts_hour`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_tx_all`
--

DROP TABLE IF EXISTS `v_tx_all`;
/*!50001 DROP VIEW IF EXISTS `v_tx_all`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_tx_all` AS SELECT 
 1 AS `block_number`,
 1 AS `transaction_index`,
 1 AS `table`*/;
SET character_set_client = @saved_cs_client;

--
-- Dumping events for database 'sync_otp_testnet'
--
/*!50106 SET @save_time_zone= @@TIME_ZONE */ ;
/*!50106 DROP EVENT IF EXISTS `update_staging_tables` */;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8mb4 */ ;;
/*!50003 SET character_set_results = utf8mb4 */ ;;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `update_staging_tables` ON SCHEDULE EVERY 30 SECOND STARTS '2023-07-04 08:54:21' ON COMPLETION NOT PRESERVE ENABLE DO CALL sp_update_staging() */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
DELIMITER ;
/*!50106 SET TIME_ZONE= @save_time_zone */ ;

--
-- Dumping routines for database 'sync_otp_testnet'
--
/*!50003 DROP PROCEDURE IF EXISTS `sp_clear_all_tables` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_clear_all_tables`(IN procedure_input varchar(250))
BEGIN
    IF procedure_input = 'just do it' THEN
        DELETE FROM `contracts`;
        DELETE FROM `sync_status`;
        DELETE FROM `block`;
        DELETE FROM `other_tx`;
		DELETE FROM `assertion_tx`;
		DELETE FROM `assertion_assertion_created`;
		DELETE FROM `commit_manager_v1_tx`;
		DELETE FROM `commit_manager_v1_commit_submitted`;
		DELETE FROM `commit_manager_v1_u1_tx`;
		DELETE FROM `commit_manager_v1_u1_commit_submitted`;
        DELETE FROM `commit_manager_v1_u1_state_finalized`;
		DELETE FROM `content_asset_tx`;
		DELETE FROM `content_asset_asset_burnt`;
		DELETE FROM `content_asset_asset_minted`;
		DELETE FROM `content_asset_payment_increased`;
		DELETE FROM `content_asset_asset_state_updated`;
		DELETE FROM `content_asset_asset_state_update_canceled`;
		DELETE FROM `content_asset_asset_storing_period_extended`;
		DELETE FROM `content_asset_asset_update_payment_increased`;
		DELETE FROM `hub_tx`;
		DELETE FROM `hub_new_contract`;
		DELETE FROM `hub_asset_storage_changed`;
		DELETE FROM `hub_contract_changed`;
		DELETE FROM `hub_new_asset_storage`;
		DELETE FROM `identity_tx`;
		DELETE FROM `identity_identity_created`;
		DELETE FROM `identity_identity_deleted`;
		DELETE FROM `identity_storage_tx`;
		DELETE FROM `identity_storage_key_added`;
		DELETE FROM `identity_storage_key_removed`;
		DELETE FROM `profile_tx`;
		DELETE FROM `profile_ask_updated`;
		DELETE FROM `profile_profile_created`;
		DELETE FROM `profile_profile_deleted`;
		DELETE FROM `proof_manager_v1_tx`;
		DELETE FROM `proof_manager_v1_proof_submitted`;
		DELETE FROM `proof_manager_v1_u1_tx`;
		DELETE FROM `proof_manager_v1_u1_proof_submitted`;
		DELETE FROM `staking_tx`;
		DELETE FROM `staking_accumulated_operator_fee_increased`;
		DELETE FROM `staking_accumulated_operator_fee_updated`;
		DELETE FROM `staking_stake_increased`;
		DELETE FROM `staking_stake_withdrawal_started`;
		DELETE FROM `staking_stake_withdrawn`;
        DELETE FROM `staking_reward_added`;
		DELETE FROM `sharding_table_tx`;
		DELETE FROM `sharding_table_node_added`;
		DELETE FROM `sharding_table_node_removed`;
		DELETE FROM `service_agreement_v1_tx`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_created`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_extended`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_reward_raised`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_terminated`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_update_reward_raised`;
		DELETE FROM `service_agreement_v1_proof_submitted`;
        DELETE FROM `service_agreement_v1_commit_submitted`;
		DELETE FROM `token_tx`;
		DELETE FROM `token_approval`;
		DELETE FROM `token_transfer`;
        
        -- Output a success message
        SELECT 'Data deleted successfully.';
    ELSE
        -- Output a message if the input does not match the condition
        SELECT 'Invalid procedure input.';
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_delete_from_tables_starting_block` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delete_from_tables_starting_block`(IN block_num int)
BEGIN
	
    DELETE FROM `block` where `number`>=block_num;
	DELETE FROM `other_tx` where block_number >= block_num;
	DELETE FROM `assertion_tx` where block_number >= block_num;
	DELETE FROM `assertion_assertion_created` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_tx` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_commit_submitted` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_u1_tx` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_u1_commit_submitted` where block_number >= block_num;
    DELETE FROM `commit_manager_v1_u1_state_finalized` where block_number >= block_num;
	DELETE FROM `content_asset_tx` where block_number >= block_num;
	DELETE FROM `content_asset_asset_burnt` where block_number >= block_num;
	DELETE FROM `content_asset_asset_minted` where block_number >= block_num;
	DELETE FROM `content_asset_payment_increased` where block_number >= block_num;
	DELETE FROM `content_asset_asset_state_updated` where block_number >= block_num;
	DELETE FROM `content_asset_asset_state_update_canceled` where block_number >= block_num;
	DELETE FROM `content_asset_asset_storing_period_extended` where block_number >= block_num;
	DELETE FROM `content_asset_asset_update_payment_increased` where block_number >= block_num;
	DELETE FROM `hub_tx` where block_number >= block_num;
	DELETE FROM `hub_new_contract` where block_number >= block_num;
	DELETE FROM `hub_asset_storage_changed` where block_number >= block_num;
	DELETE FROM `hub_contract_changed` where block_number >= block_num;
	DELETE FROM `hub_new_asset_storage` where block_number >= block_num;
	DELETE FROM `identity_tx` where block_number >= block_num;
	DELETE FROM `identity_identity_created` where block_number >= block_num;
	DELETE FROM `identity_identity_deleted` where block_number >= block_num;
	DELETE FROM `identity_storage_tx` where block_number >= block_num;
	DELETE FROM `identity_storage_key_added` where block_number >= block_num;
	DELETE FROM `identity_storage_key_removed` where block_number >= block_num;
	DELETE FROM `profile_tx` where block_number >= block_num;
	DELETE FROM `profile_ask_updated` where block_number >= block_num;
	DELETE FROM `profile_profile_created` where block_number >= block_num;
	DELETE FROM `profile_profile_deleted` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_tx` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_proof_submitted` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_u1_tx` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_u1_proof_submitted` where block_number >= block_num;
	DELETE FROM `staking_tx` where block_number >= block_num;
	DELETE FROM `staking_accumulated_operator_fee_increased` where block_number >= block_num;
	DELETE FROM `staking_accumulated_operator_fee_updated` where block_number >= block_num;
	DELETE FROM `staking_stake_increased` where block_number >= block_num;
	DELETE FROM `staking_stake_withdrawal_started` where block_number >= block_num;
	DELETE FROM `staking_stake_withdrawn` where block_number >= block_num;
    DELETE FROM `staking_reward_added` where block_number >= block_num;
	DELETE FROM `sharding_table_tx` where block_number >= block_num;
	DELETE FROM `sharding_table_node_added` where block_number >= block_num;
	DELETE FROM `sharding_table_node_removed` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_tx` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_created` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_extended` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_reward_raised` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_terminated` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_update_reward_raised` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_proof_submitted` where block_number >= block_num;
    DELETE FROM `service_agreement_v1_commit_submitted` where block_number >= block_num;
	DELETE FROM `token_tx` where block_number >= block_num;
	DELETE FROM `token_approval` where block_number >= block_num;
	DELETE FROM `token_transfer` where block_number >= block_num;
    DELETE FROM `content_asset_storage_transfer` where block_number >= block_num;
    DELETE FROM `content_asset_storage_tx` where block_number >= block_num;
    update sync_status set block_num = (block_num-1) where parameter = 'last_synced_block';

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_list_contracts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_list_contracts`(IN b1 int, IN win int)
BEGIN
#SET @b1 = 3151717;
#SET @win = 100;    
with 
new_and_changed as (
select contract_name, block_number, new_contract_address from hub_new_contract
UNION ALL select contract_name, block_number, new_contract_address from hub_contract_changed
UNION ALL select contract_name, block_number, new_contract_address  from hub_new_asset_storage
UNION ALL select contract_name, block_number, new_contract_address  from hub_asset_storage_changed
),

cte_a as (SELECT 
row_number() over (partition by contract_name order by block_number desc) as rn
, case when b1 <= block_number then 1 else 0 end as 'range_starts_before'
, case when b1 + win > block_number then 1 else 0 end as 'range_ends_after'
, contract_name, new_contract_address as 'contract_address', block_number
from new_and_changed
where block_number < b1 + win
),

cte_b as (select 
case 
    when range_starts_before = 1 and range_ends_after = 1 then 'block_range_hit_new_contract'
    when rn = 1 then 'latest_contract'
    end as 'label'
,block_number,contract_name,contract_address#, rn, range_starts_before, range_ends_after
from cte_a),

cte_c as (
select 
contract_address
,contract_name
,case when Lead(`label`,1) over (partition by contract_name order by block_number) = 'block_range_hit_new_contract' or `label` in ('latest_contract','block_range_hit_new_contract') then 1 else 0 end as 'final'
,Lead(`label`,1) over (partition by contract_name order by block_number) as 'p'
,`label`
,block_number
from cte_b
),

cte_d as (
select distinct contract_address,contract_name from (
select contract_address,contract_name from cte_c where final=1) as t 
UNION select contract_address, 'Hub' from contracts where contract_id=1
)

select a.contract_address, a.contract_name, b.contract_id
from cte_d as a
left join contracts as b on a.contract_address=b.contract_address
;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_standard_modification_event` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_standard_modification_event`(IN tableName varchar(255))
BEGIN

#uncomment for mainnet and comment for testnet
#SET @q = CONCAT('DROP INDEX `PRIMARY` ON ', tableName);
#PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

#uncomment for mainnet and comment for testnet
#SET @q = CONCAT('DROP INDEX `idx_block_num` ON ', tableName);
#PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName, ' add column contract_id tinyint UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;
                 
SET @q = CONCAT('UPDATE ', tableName, ' as a JOIN contracts as b ON a.address = b.contract_address SET a.contract_id = b.contract_id');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ',tableName, ' ADD CONSTRAINT fk_',right(tableName,49),'_contract_id FOREIGN KEY (contract_id) REFERENCES contracts (contract_id)');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
            'ALTER TABLE ', tableName,
            ' DROP COLUMN `event`,',
            ' DROP COLUMN `transaction_hash`,',
            ' DROP COLUMN `block_hash`,',
            ' DROP COLUMN `block_ts`,',
            ' DROP COLUMN `block_date`,',
            ' DROP COLUMN `block_ts_hour`,',
            ' DROP COLUMN `updated_at`,',
            ' DROP COLUMN `created_at`,',
            ' DROP COLUMN `block_timestamp`,',
            ' MODIFY COLUMN `log_index` SMALLINT UNSIGNED,',
            ' MODIFY COLUMN `transaction_index` SMALLINT UNSIGNED,',
            ' MODIFY COLUMN `block_number` INT UNSIGNED,',
			' DROP COLUMN `address`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_standard_modification_tx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_standard_modification_tx`(IN tableName varchar(255))
BEGIN

#comment for testnet, uncomment for mainnet
#SET @q = CONCAT('DROP INDEX `PRIMARY` ON ', tableName);
#PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

#comment for testnet, uncomment for mainnet
#SET @q = CONCAT('DROP INDEX `idx_block_num` ON ', tableName);
#PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'ALTER TABLE ', tableName,
    ' DROP COLUMN `block_hash`,',
    ' DROP COLUMN `input`,',
    ' DROP COLUMN `nonce`,',
    ' DROP COLUMN `public_key`,',
    ' DROP COLUMN `r`,',
    ' DROP COLUMN `raw`,',
    ' DROP COLUMN `s`,',
    ' DROP COLUMN `standard_v`,',
    ' DROP COLUMN `type`,',
    ' DROP COLUMN `v`,',
    ' DROP COLUMN `value`,',
    ' DROP COLUMN `block_ts`,',
    ' DROP COLUMN `block_date`,',
    ' DROP COLUMN `block_ts_hour`,',
    ' DROP COLUMN `created_at`,',
    ' DROP COLUMN `block_timestamp`,',
    ' DROP COLUMN `updated_at`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName,' ADD COLUMN to_id TINYINT UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'UPDATE ', tableName, ' AS a',
    ' JOIN contracts AS b ON a.`to` = b.contract_address',
    ' SET a.to_id = b.contract_id');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ',tableName, ' ADD CONSTRAINT fk_',right(tableName,49),'_contract_id FOREIGN KEY (`to_id`) REFERENCES contracts (contract_id)');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName, ' DROP COLUMN `to`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'ALTER TABLE ', tableName,
    ' MODIFY COLUMN `block_number` INT UNSIGNED,',
    ' MODIFY COLUMN `chain_id` SMALLINT UNSIGNED,',
    ' MODIFY COLUMN `creates` CHAR(42),',
    ' MODIFY COLUMN `from` CHAR(42),',
    ' MODIFY COLUMN `gas` BIGINT UNSIGNED,',
    ' MODIFY COLUMN `gas_price` BIGINT UNSIGNED,',
    ' MODIFY COLUMN `hash` CHAR(66),',
    ' MODIFY COLUMN `transaction_index` SMALLINT UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_update_contracts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_update_contracts`()
BEGIN
INSERT INTO `contracts` (contract_address)
WITH
all_contacts as (
select distinct contract_address from (
SELECT contract_address from contracts
UNION ALL SELECT new_contract_address from hub_new_asset_storage
UNION ALL SELECT new_contract_address from hub_new_contract
UNION ALL SELECT new_contract_address from hub_contract_changed 
UNION ALL SELECT new_contract_address from hub_asset_storage_changed) as a),

new_contracts as (
select a.contract_address from all_contacts as a
left join contracts as b on a.contract_address=b.contract_address
where b.contract_address is null)

select contract_address from new_contracts;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_update_staging` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_update_staging`()
BEGIN
    -- Declare a handler for exceptions
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
		GET DIAGNOSTICS CONDITION 1
		@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
		SELECT @p1 as RETURNED_SQLSTATE  , @p2 as MESSAGE_TEXT;
	
        -- Handle the error here, rollback the transaction, log, etc.
        ROLLBACK;
    END;

START TRANSACTION;
SET @staging = (select block_num from sync_status where parameter ='staging_table' FOR UPDATE);#UNCOMMENT
SET @sync = (select block_num from sync_status where parameter ='last_synced_block' FOR UPDATE);   

SET @stats_start_window = (select block_ts_hour from v_sys_staging_date FOR UPDATE);
SET @stats_start_window_date = (select block_date from v_sys_staging_date FOR UPDATE); 
SET @stats_end_window = (select block_ts_hour from v_sys_sync_date FOR UPDATE);
SET @stats_end_window_date = (select block_date from v_sys_sync_date FOR UPDATE);
SET SESSION group_concat_max_len = 1000000;
#select @stats_start_window
#select @stats_end_window 
COMMIT;


#if i have new date to put into staging tables
IF @staging < @sync THEN
	START TRANSACTION;

	#insert all proofs
	INSERT INTO `staging_proof_submitted` #insert new submit proof rows into staging table
	(asset_contract_id, token_id, keyword, epoch, identity_id
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp ,`value`)
	select * from v_sys_staging_insert_new_proof_submitted where block_number>@staging and block_number<=@sync;
   
	#insert all submit commit for state_index=0, commits for for state_index>0 are excluded from here
	INSERT INTO `staging_commit_submitted` #insert new submit commit rows into staging table
	(asset_contract_id, token_id, identity_id, keyword, hash_function_id, epoch, score, state_index
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp)
	select * from v_sys_staging_insert_new_commit_submitted where block_number>@staging and block_number<=@sync;
  
	#insert all new pubs
	INSERT INTO `staging_pub` #insert new pub rows into staging table
	(asset_contract_id, token_id, keyword, size, triples_number, chunks_number, hash_function_id
	, epochs_number, epoch_length, token_amount,bid, transaction_hash, transaction_index, block_number
	, block_timestamp,state_index, state, previous_states, `from`)
	select * from v_sys_staging_insert_new_pub where block_number>@staging and block_number<=@sync;
    

    
	#update owner, grab latest owner of the asset and update value in staging table
	with
	owner_1 as (select token_id, contract_id, `to` as 'owner'
	,row_number() over (partition by token_id, contract_id order by block_number desc, transaction_index desc) as rn
	from content_asset_storage_transfer
	where block_number>@staging and block_number<=@sync   ),
	owner_2 as (select token_id,contract_id, `owner` from owner_1 where rn=1)

	update staging_pub as a
	INNER JOIN owner_2 as b on a.asset_contract_id=b.contract_id and a.token_id=b.token_id
	set a.`owner`=b.`owner`;
   
   	
	#add new blank rows into stats_pub table
	INSERT INTO stats_pub (`block_date`, `block_ts_hour`)
	WITH
	RECURSIVE new_datetime_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_ts_hour`), interval 1 hour) FROM stats_pub), @stats_start_window) AS timestamp_val #generate timetable
	UNION ALL SELECT TIMESTAMPADD(HOUR, 1, timestamp_val) FROM new_datetime_0 
	WHERE timestamp_val < @stats_end_window)
    	
    SELECT cast(timestamp_val as date), timestamp_val FROM new_datetime_0
    where timestamp_val<=@stats_end_window;

	#grab new pubs and update stats_pub table, i do ignore change in pub proparties due to pub update here
	#these changes are too small to make a difference, but it's significantly simplifies the process
	WITH
	new_pubs_data as (select 
	cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) as 'block_date'
	,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(ifnull(d.create_asset_size,0)) as 'total_size'
	,sum(a.epochs_number) as 'total_epochs'
	,sum(cast(cast(a.token_amount as decimal(45,18)) / epochs_number / 3 / (d.create_asset_size / 1024) / 1000000000000000000 as decimal(27,18))) as 'total_bid' 
	,count(token_id) as 'total_pubs'
	,cast(cast(sum(a.token_amount) as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as 'total_trac_spent'
	,sum(case when d.create_asset_size=145 then 1 else 0 end) as 'private_pubs'
	from service_agreement_v1_service_agreement_v1_created as a
	left join content_asset_tx as d on a.block_number=d.block_number and a.transaction_index=d.transaction_index
	left join `block` as bb on a.block_number=bb.`number`
	where a.block_number>@staging and a.block_number<=@sync
	group by 
	cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)
	,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00'))

	update stats_pub as a
	INNER JOIN new_pubs_data as b on a.`block_date`=b.`block_date` and a.`block_ts_hour`=b.`block_ts_hour`
	set
		a.total_size = a.total_size + b.total_size,
		a.total_epochs = a.total_epochs + b.total_epochs,
		a.total_bid = a.total_bid + b.total_bid,
		a.total_pubs = a.total_pubs + b.total_pubs,
		a.total_trac_spent = a.total_trac_spent + b.total_trac_spent,
		a.private_pubs = a.private_pubs + b.private_pubs;

  
	#insert new blank rows into node_stat table
	INSERT INTO stats_node (`identity_id`, `block_date`)
	WITH 
    RECURSIVE new_date_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_date`), interval 1 day) FROM stats_node), @stats_start_window_date)  AS date_val 
    UNION ALL SELECT DATE_ADD(date_val, INTERVAL 1 DAY) FROM new_date_0 
    WHERE date_val < @stats_end_window_date),
	
	identities as (select a.identity_id, cast(convert_tz(from_unixtime(`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) as 'block_date'
	from profile_profile_created as a 
    left join `block` as bb on a.block_number=bb.`number` where a.block_number<=@sync),
	new_date_2 as (SELECT a.identity_id, b.date_val  FROM identities as a CROSS JOIN new_date_0 as b WHERE b.date_val >= a.block_date)
    
    select identity_id , date_val as 'block_date' from new_date_2 where date_val <= @stats_end_window_date;
     
	#in case we have finalized updates for assets i'd need to update pubs table with new values and also update previous_states column
	# and update submit commits staging
	IF (select count(block_number) from commit_manager_v1_u1_state_finalized where block_number>@staging and block_number<=@sync) > 0 THEN
		with
		finalized_updates as (select 
		a.asset_contract_id,a.token_id,a.keyword
		,ifnull(d.update_asset_state_size,0) as `size`
        ,ifnull(d.update_asset_state_triples_number,0) as `triples_number`
        ,ifnull(d.update_asset_state_chunks_number,0) as `chunks_number`
		,a.hash_function_id
		,cast(cast(ifnull(d.update_asset_state_update_token_amount,0) as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as token_amount
		,d.`hash` as 'transaction_hash',b.transaction_index,b.block_number,bb.`timestamp` as 'block_timestamp'
		,a.state,a.state_index
		,row_number() over (partition by a.token_id, a.asset_contract_id order by a.state_index desc) as rn
		from commit_manager_v1_u1_state_finalized as a
		left join content_asset_asset_state_updated as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.state_index=b.state_index
		left join `block` as bb on b.block_number=bb.`number`
        left join content_asset_tx as d on b.block_number=d.block_number and b.transaction_index=d.transaction_index
        where a.block_number>@staging and a.block_number<=@sync),

		updates_except_latest_grp as (select asset_contract_id ,token_id,sum(token_amount) as 'token_amount'
		,group_concat(concat(',["state_idx":',state_index, ',"state":"',state,
							'","size":',size, ',"triples":',triples_number,
							',"chunks":',chunks_number, ',"hash_f":',hash_function_id,
							',"tokens":',token_amount, ',"tx_hash":"',transaction_hash,
							'","block":',block_number,',"block_ts_u":',block_timestamp,
							',"block_ts":"',convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),
							'"]') order by state_index asc) as `previous_states`
		from finalized_updates where rn>1
        group by asset_contract_id,token_id),

		data_to_update_pubs as (select a.asset_contract_id,a.token_id,a.size,a.triples_number,a.chunks_number,a.hash_function_id
		,a.token_amount + ifnull(b.token_amount,0) as token_amount,a.state_index, a.state,b.previous_states
		from finalized_updates as a
		left join updates_except_latest_grp as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id where a.rn=1)
		
        #updateing staging_pub with new post asset update values 
		update staging_pub as a
			INNER JOIN data_to_update_pubs as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
		SET
			a.previous_states = 
                CONCAT(ifnull(a.previous_states,''),
						(case when a.previous_states is not null then ',' else '' end),
                        '["state_idx":',a.state_index, ',"state":"',a.state,
						'","size":',a.size, ',"triples":',a.triples_number,
						',"chunks":',a.chunks_number, ',"hash_f":',a.hash_function_id,
						',"tokens":',a.token_amount, ',"tx_hash":"',a.transaction_hash,
						'","block":',a.block_number,',"block_tsu":',a.block_timestamp,
						',"block_ts":"',convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'"]',
                        ifnull(b.previous_states,''))
			,a.size = b.size,a.triples_number = b.triples_number
			,a.chunks_number = b.chunks_number,a.hash_function_id = b.hash_function_id
			,a.token_amount = a.token_amount+b.token_amount,a.state_index = b.state_index,a.state = b.state;

		#staging_pub is updated according to finalized pub data
        #but before i remove irrelevant commits from staging_commit_submitted i need to adjust stats_node table
        #and remove these commits stats
        WITH
        affected_commits as (
        select distinct asset_contract_id, token_id, epoch
        from commit_manager_v1_u1_state_finalized
		where block_number>@staging and block_number<=@sync),
        
        commit_stats_to_subtract_updated_pubs as ( select 
		b.identity_id,b.block_date
		,sum(b.commit_any_epoch) as 'commit_any_epoch'
		,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
		,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
		,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
		from affected_commits as a
		inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch
		group by b.identity_id, b.block_date)
        
    
        update stats_node as a
        inner join commit_stats_to_subtract_updated_pubs as b
        on a.block_date=b.block_date and a.identity_id=b.identity_id
        set
			a.commit_any_epoch = a.commit_any_epoch - ifnull(b.commit_any_epoch,0),
            a.commit_1st_epoch = a.commit_1st_epoch - ifnull(b.commit_1st_epoch,0),
            a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - ifnull(b.estimated_earnings_any_epoch,0),
            a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - ifnull(b.estimated_earnings_1st_epoch_only,0);
				
        #removing submitCommits for previous state index, they are no longer valid as this token_id-epoch could have different winners
        delete a from staging_commit_submitted as a
        INNER JOIN (select distinct asset_contract_id, token_id, epoch
					from commit_manager_v1_u1_state_finalized
					where block_number>@staging and block_number<=@sync) as b 
					ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch;
		
	END IF;
	 
	#adding latest submitCommits for updated assets
	INSERT INTO `staging_commit_submitted` 
	(asset_contract_id, token_id, identity_id, keyword, hash_function_id, epoch, score, state_index
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp)
	with
	post_update_commits as (select
	a.asset_contract_id, a.token_id, identity_id, keyword, hash_function_id, a.epoch, a.score
	,a.transaction_index, d.`hash` as 'transaction_hash', a.contract_id, a.block_number, bb.`timestamp` as 'block_timestamp'
	,dense_rank() over (partition by a.token_id, a.asset_contract_id, a.epoch order by a.state_index desc) as dr, a.state_index
	from commit_manager_v1_u1_commit_submitted as a
	left join `block` as bb on a.block_number=bb.`number`
	left join commit_manager_v1_u1_tx as d on a.block_number=d.block_number and a.transaction_index=d.transaction_index    
	where a.state_index>0 and a.block_number>@staging and a.block_number<=@sync),
	
	post_update_commits_latest as (select
	a.asset_contract_id, a.token_id, a.identity_id, a.keyword, a.hash_function_id, a.epoch, a.score, a.state_index
	,a.transaction_index, a.transaction_hash, a.contract_id, a.block_number, a.block_timestamp
	from post_update_commits as a where a.dr=1)
	select * from post_update_commits_latest;
    
	
    #before i update staging_commit_submitted i need to substract old values from stats table, then update staging_commit_submitted, then add new stats values
	WITH
    pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized 
    where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted 
    where block_number>@staging),
    
    commit_stats_to_subtract_updated_pubs as (select
	b.identity_id,b.block_date
	,sum(b.commit_any_epoch) as 'commit_any_epoch'
	,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch 
    group by b.identity_id,b.block_date)
    
	update stats_node as a
	inner join commit_stats_to_subtract_updated_pubs as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.commit_any_epoch = a.commit_any_epoch - ifnull(b.commit_any_epoch,0),
		a.commit_1st_epoch = a.commit_1st_epoch - ifnull(b.commit_1st_epoch,0),
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - ifnull(b.estimated_earnings_any_epoch,0),
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - ifnull(b.estimated_earnings_1st_epoch_only,0);
   
       
	#updating earnings in staging_commit_submitted
	WITH
	pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted where block_number>@staging), #need to update commits as new commits for this assets arrived
    
    pubs_to_update_token_amount as (select 
	a.asset_contract_id,a.token_id, cast(a.token_amount as decimal(27,18)) as 'token_amount'
	,a.epochs_number
	from staging_pub as a
	INNER JOIN (select distinct asset_contract_id, token_id from pubs_epochs_to_update) as b ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id),
   
    #adding earnings to commits
	update_commits_0 as (select
	a.asset_contract_id,a.token_id, a.block_number, a.transaction_index
	,row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc, block_number asc, transaction_index asc) as `rank`
	,case when (row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc,block_number asc, transaction_index asc)) <= 3 
		then c.token_amount / 3 / (c.epochs_number)
		else 0 end as estimated_earnings_any_epoch
	,case when a.epoch = 0 and (row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 
		then c.token_amount / 3 / (c.epochs_number)
		else 0 end as estimated_earnings_1st_epoch_only
	,case when (row_number() over (partition by token_id, asset_contract_id,  a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 then 1
		else 0 end as commit_any_epoch 
	,case when a.epoch = 0 and (row_number() over (partition by token_id, asset_contract_id,  a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 then 1
		else 0 end as commit_1st_epoch
	,1 as commit_any_epoch_incl_out_of_top3
	,case when a.epoch = 0 then 1 else 0 end as commit_1st_epoch_incl_out_of_top3
	from staging_commit_submitted as a
	INNER JOIN pubs_epochs_to_update as b ON a.asset_contract_id=b.asset_contract_id and a.token_id=b.token_id and a.epoch=b.epoch
	left join pubs_to_update_token_amount as c on a.asset_contract_id=c.asset_contract_id and a.token_id=c.token_id)


	#update commits records
	update staging_commit_submitted as a 
		INNER JOIN update_commits_0 as b
			ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.block_number=b.block_number and a.transaction_index=b.transaction_index
	SET
	a.`rank` = b.`rank`,
	a.`estimated_earnings_any_epoch` = b.`estimated_earnings_any_epoch`,
	a.`estimated_earnings_1st_epoch_only` = b.`estimated_earnings_1st_epoch_only`,
	a.`commit_any_epoch` = b.`commit_any_epoch`,
	a.`commit_1st_epoch` = b.`commit_1st_epoch`,
	a.`commit_any_epoch_incl_out_of_top3` = b.`commit_any_epoch_incl_out_of_top3`,
	a.`commit_1st_epoch_incl_out_of_top3` = b.`commit_1st_epoch_incl_out_of_top3`; 

	
    WITH
	#now i can add new values to stats_node table
    pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized 
    where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted 
    where block_number>@staging),
    
    commit_stats_to_add_updated_pubs as (select
	b.identity_id,b.block_date
	,sum(b.commit_any_epoch) as 'commit_any_epoch'
	,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch 
    group by b.identity_id,b.block_date)
    
	update stats_node as a
	inner join commit_stats_to_add_updated_pubs as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.commit_any_epoch = a.commit_any_epoch + b.commit_any_epoch,
		a.commit_1st_epoch = a.commit_1st_epoch + b.commit_1st_epoch,
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch + b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only + b.estimated_earnings_1st_epoch_only;
   
   
   
	#if i have new proof i need to update estimated earnings in staging_commit_submitted
    #but before that i need to substract from stats table current values
	with
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id
	from staging_proof_submitted where block_number>@staging),
   
	commit_stats_to_subtract_proof_arrived as (select
	b.identity_id,b.block_date
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_identity_id_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id=b.identity_id
	group by  b.identity_id,b.block_date)
    
    update stats_node as a
	inner join commit_stats_to_subtract_proof_arrived as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - b.estimated_earnings_1st_epoch_only;

   
	# now update staging_commit_submitted with earnings from proofs
	with
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id, `value` as 'paidout'
	from staging_proof_submitted where block_number>@staging)
       
    update staging_commit_submitted as a 
		INNER JOIN pubs_epochs_identity_id_to_update as b
		ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id = b.identity_id
	SET
	a.`estimated_earnings_any_epoch` = b.paidout,
	a.`estimated_earnings_1st_epoch_only` = (case when a.epoch=0 then b.paidout else a.`estimated_earnings_1st_epoch_only` end);
   

    #now i have updated data in staging_commit_submitted, time to update stats_node table
	WITH
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id
	from staging_proof_submitted where block_number>@staging),

	commit_stats_to_add_proof_arrived as (select
	b.identity_id,b.block_date
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_identity_id_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id=b.identity_id
	group by  b.identity_id,b.block_date)
   
	update stats_node as a
	inner join commit_stats_to_add_proof_arrived as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch + b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only + b.estimated_earnings_1st_epoch_only;
   


	#updating payouts in stats_node table in case proof arrived
	with
	payouts_to_update as (select
    block_date,identity_id,sum(`value`) as paidout, count(`value`) as proofs_submitted
    from staging_proof_submitted 
    where block_number>@staging
    group by block_date, identity_id)
    
    update stats_node as a
    INNER JOIN payouts_to_update as b on a.block_date=b.block_date and a.identity_id=b.identity_id
    set a.payouts = a.payouts + b.paidout,
		a.proofs_submitted = a.proofs_submitted + b.proofs_submitted;
    
            
	#once i have updated list of winners i need to update staging_pub table
	WITH
	pubs_to_update as (
	select distinct asset_contract_id, token_id
	from commit_manager_v1_u1_state_finalized
	where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select distinct asset_contract_id,token_id 
	from staging_commit_submitted where block_number>@staging),
   
	pub_commits_1 as (select a.asset_contract_id, a.token_id, a.epoch
	,CONCAT('[',group_concat(a.identity_id order by a.identity_id),']') as winners_epoch
	from staging_commit_submitted as a
	INNER JOIN pubs_to_update as b ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
	where a.commit_any_epoch=1
	group by a.asset_contract_id, a.token_id, a.epoch),

	pub_commits_2 as (select asset_contract_id, token_id ,CONCAT('[',group_concat(winners_epoch order by epoch),']') as winners
	from pub_commits_1 group by asset_contract_id, token_id)
   
	UPDATE staging_pub as a
		INNER JOIN (select distinct asset_contract_id,token_id from staging_commit_submitted where block_number>@staging) as b
			ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
		LEFT JOIN pub_commits_2 as c
            ON a.token_id=c.token_id and a.asset_contract_id=c.asset_contract_id
	SET 
	a.winners = c.winners;
   
   
    #this block is about updateing staging_stake table
    #adding new rows (if needed) and updateing staging_stake table
    #delete from staging_stake
	INSERT INTO staging_stake (identity_id, block_date, block_ts_hour, stake_change, stake)
	WITH
	RECURSIVE new_datetime_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_ts_hour`), interval 1 hour) FROM staging_stake), @stats_start_window) AS timestamp_val #generate timetable
	UNION ALL SELECT TIMESTAMPADD(HOUR, 1, timestamp_val) FROM new_datetime_0 
	WHERE timestamp_val < @stats_end_window),
    identities as (select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	from profile_profile_created as a left join `block` as bb on a.block_number=bb.`number`),
	staking_2 as (SELECT a.identity_id, b.timestamp_val as 'block_ts_hour' FROM identities as a CROSS JOIN new_datetime_0 as b WHERE b.timestamp_val >= a.block_ts_hour)
    
	#adding new rows to staging_stake table
	select a.identity_id, cast(a.block_ts_hour as date) as 'block_date' ,a.block_ts_hour, 0 as 'stake_change', Null  as 'stake' 
    from staking_2 as a
    WHERE a.block_ts_hour<=@stats_end_window;

	WITH #summarize new stake change data by identity_id and block_ts_hour, and update staging_stake
	stake_change_1 as (
	select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(case when old_stake is null then new_stake else new_stake - old_stake end) as 'stake'  
	from staking_stake_increased as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')
	
    UNION ALL select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(reward_amount) 
	from staking_reward_added as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')
	
    UNION ALL select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,-1 * sum(withdrawn_stake_amount) 
	from staking_stake_withdrawn as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')),

	stake_change_2 as (select identity_id, cast(block_ts_hour as date) as 'block_date', block_ts_hour
	#,cast(sum(stake) / 1000000000000000000 as decimal(27,18)) as 'stake_change' from stake_change_1 
    ,cast(cast(sum(stake) as decimal (45,18)) / 1000000000000000000 as decimal(27,18)) as 'stake_change' from stake_change_1 
	group by identity_id, cast(block_ts_hour as date), block_ts_hour)
	
	UPDATE staging_stake as a
	INNER JOIN stake_change_2 as b on a.identity_id=b.identity_id and a.block_date = b.block_date and a.block_ts_hour = b.block_ts_hour
	SET a.stake_change = a.stake_change+b.stake_change;
		
    WITH
	updated_stake as (select identity_id,block_date, block_ts_hour
    ,case when FIRST_VALUE(stake) OVER (partition by identity_id order by block_ts_hour asc) is Null #covers initial population of the table
		       then SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_date, block_ts_hour)
          else FIRST_VALUE(stake) OVER (partition by identity_id order by block_ts_hour asc)
		       + SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour)
               - FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc)
          end as 'stake'
    /*,stake_change
    ,`stake` as 'stake_original'
    ,FIRST_VALUE(stake) OVER ( partition by identity_id order by block_ts_hour asc) as 'first_val_stake'
    ,FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc) as 'first_val_stake_change'
    ,SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour) AS cumulative_stake_change
    ,FIRST_VALUE(stake) OVER ( partition by identity_id order by block_ts_hour asc)
		+ SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour)
        - FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc)
        as 'stake2'*/
	from staging_stake
	where block_date>=cast(date_add(@stats_start_window,interval -1 day) as date) and block_ts_hour>=date_add(@stats_start_window,interval -1 hour))
    
	UPDATE staging_stake as a
	INNER JOIN updated_stake as b on a.identity_id=b.identity_id and a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour
	SET a.stake = b.stake;
    
    #now update Ask in staging_stake table
    #update staging_stake set ask=Null
    WITH
    ask_1 as (select 
    cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS block_date
    ,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') as block_ts_hour
    ,row_number() OVER (PARTITION BY a.identity_id,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') ORDER BY bb.`timestamp` desc )  AS rn
	,a.identity_id
	,cast(cast(a.ask as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as 'ask'
	from profile_ask_updated a 
	left join block bb on a.block_number = bb.`number`
    where a.block_number>@staging and a.block_number<=@sync),
	ask_2 as (select identity_id, block_date, block_ts_hour, ask from ask_1 where rn = 1)
    
    update staging_stake as a
    inner join ask_2 as b on a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour and a.identity_id=b.identity_id
    set a.ask=b.ask;
    
    #fill gaps in Ask table
	WITH 
    ask_3 as (SELECT identity_id,block_date,block_ts_hour,ask
	,count(ask) OVER (PARTITION BY identity_id ORDER BY block_date asc, block_ts_hour asc )  AS value_partition 
    FROM staging_stake 
    where block_date>=@stats_start_window_date and block_ts_hour>=@stats_start_window),
        
    ask_4 as (select identity_id,block_date,block_ts_hour,ask
    ,first_value(ask) OVER (PARTITION BY identity_id, value_partition ORDER BY block_date,block_ts_hour)  AS ask_result 
    from ask_3)
	
    update staging_stake as a
    inner join ask_4 as b on a.identity_id=b.identity_id and a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour
    set a.ask=b.ask_result
    where a.ask is null;

   
    #now i can update node_stats nodeStake values based on staging_stake table
    WITH 
    latest_stake_ask_0 as (select block_date,identity_id, stake, ask
    ,row_number() over (partition by block_date, identity_id order by block_ts_hour desc) as rn
    from staging_stake
    where block_date>=@stats_start_window_date and block_ts_hour>=@stats_start_window),
    latest_stake_ask_1 as (select block_date,identity_id, stake, ask from latest_stake_ask_0 where rn=1)
    
    update stats_node as a
    inner join latest_stake_ask_1 as b on a.identity_id=b.identity_id and a.block_date=b.block_date
    set a.ask = b.ask, a.node_stake=b.stake;
     

    #update sync_status with new staging block_number
    UPDATE sync_status
    SET block_num = @sync
    WHERE parameter = 'staging_table';

   COMMIT;
END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Final view structure for view `v_asset_history`
--

/*!50001 DROP VIEW IF EXISTS `v_asset_history`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_asset_history` AS select 'AssetMinted' AS `event`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`d`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,`a`.`state` AS `minted_state`,concat(`ac`.`contract_address`,`c`.`keyword`) AS `minted_keyword`,`c`.`hash_function_id` AS `minted_hash_function_id`,`c`.`start_time` AS `minted_start_time`,`c`.`epochs_number` AS `minted_epochs_number`,`c`.`epoch_length` AS `minted_epoch_length`,`c`.`token_amount` AS `minted_token_amount`,`c`.`size` AS `minted_size`,`c`.`triples_number` AS `minted_triples_number`,`c`.`chunks_number` AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((((`content_asset_asset_minted` `a` left join (select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`start_time` AS `start_time`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,`a`.`token_amount` AS `token_amount`,`b`.`create_asset_size` AS `size`,`b`.`create_asset_triples_number` AS `triples_number`,`b`.`create_asset_chunks_number` AS `chunks_number` from (`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`))))) `c` on(((`a`.`asset_contract_id` = `c`.`asset_contract_id`) and (`a`.`token_id` = `c`.`token_id`)))) left join `content_asset_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'Transfer' AS `Transfer`,`a`.`token_id` AS `token_id`,`addc`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,`a`.`from` AS `transfer_from`,`a`.`to` AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((`content_asset_storage_transfer` `a` left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `content_asset_storage_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`from` <> '0x0000000000000000000000000000000000000000') union all select 'AssetStateUpdated' AS `event`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`c`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,`a`.`state_index` AS `state_updated_state_index`,`a`.`update_token_amount` AS `state_updated_update_token_amount`,(case when (`b`.`token_id` is not null) then 'StateFinalized' end) AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((((`content_asset_asset_state_updated` `a` left join `commit_manager_v1_u1_state_finalized` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`) and (`a`.`state_index` = `b`.`state_index`)))) left join `content_asset_tx` `c` on(((`a`.`block_number` = `c`.`block_number`) and (`a`.`transaction_index` = `c`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetStateUpdatedCancelled' AS `AssetStateUpdatedCancelled`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,`a`.`state_index` AS `update_cancelled_state_index`,`a`.`returned_token_amount` AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_state_update_canceled` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetStoringPeriodExtended' AS `AssetStoringPeriodExtended`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,`a`.`epochs_number` AS `storing_period_extended_epochs_number`,`a`.`token_amount` AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_storing_period_extended` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetUpdatePaymentIncreased' AS `AssetUpdatePaymentIncreased`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,`a`.`token_amount` AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_update_payment_increased` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetPaymentIncreased' AS `AssetPaymentIncreased`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,`a`.`token_amount` AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_payment_increased` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetBurnt' AS `AssetBurnt`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,`a`.`returned_token_amount` AS `burnt_returned_token_amount` from ((((`content_asset_asset_burnt` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes` AS with `latest_stake_0` as (select `staging_stake`.`identity_id` AS `identity_id`,`staging_stake`.`stake` AS `stake`,`staging_stake`.`ask` AS `ask` from `staging_stake` where ((`staging_stake`.`block_date` = (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` = (select `v_sys_staging_date`.`block_ts_hour` from `v_sys_staging_date`)))), `nodes_0` as (select `a`.`nodeId` AS `nodeId`,`a`.`networkId` AS `networkId`,`a`.`tokenName` AS `tokenName`,`a`.`tokenSymbol` AS `tokenSymbol`,`a`.`nodeOwner` AS `nodeOwner`,`a`.`nodeGroup` AS `nodeGroup`,`a`.`createProfile_adminWallet` AS `createProfile_adminWallet`,`a`.`createProfile_adminWallet_hash` AS `createProfile_adminWallet_hash`,`a`.`current_adminWallet_hashes` AS `current_adminWallet_hashes`,`a`.`createProfile_blockNumber` AS `createProfile_blockNumber`,`a`.`createProfile_txHash` AS `createProfile_txHash`,`a`.`createProfile_ts` AS `createProfile_ts`,`a`.`createProfile_date` AS `createProfile_date`,((to_days(curdate()) - to_days(`a`.`createProfile_date`)) + 1) AS `nodeAgeDays`,`b`.`stake` AS `nodeStake`,`b`.`ask` AS `nodeAsk` from (`v_nodes_barebone` `a` left join `latest_stake_0` `b` on((`a`.`nodeId` = `b`.`identity_id`))) where (`b`.`ask` is not null)) select `nodes_0`.`nodeId` AS `nodeId`,`nodes_0`.`networkId` AS `networkId`,`nodes_0`.`tokenName` AS `tokenName`,`nodes_0`.`tokenSymbol` AS `tokenSymbol`,`nodes_0`.`nodeOwner` AS `nodeOwner`,`nodes_0`.`nodeGroup` AS `nodeGroup`,`nodes_0`.`createProfile_adminWallet` AS `createProfile_adminWallet`,`nodes_0`.`createProfile_adminWallet_hash` AS `createProfile_adminWallet_hash`,`nodes_0`.`current_adminWallet_hashes` AS `current_adminWallet_hashes`,`nodes_0`.`createProfile_blockNumber` AS `createProfile_blockNumber`,`nodes_0`.`createProfile_txHash` AS `createProfile_txHash`,`nodes_0`.`createProfile_ts` AS `createProfile_ts`,`nodes_0`.`createProfile_date` AS `createProfile_date`,`nodes_0`.`nodeAgeDays` AS `nodeAgeDays`,`nodes_0`.`nodeStake` AS `nodeStake`,`nodes_0`.`nodeAsk` AS `nodeAsk` from `nodes_0` union all select 0 AS `NodeId`,'avgNode' AS `NetworkId`,'avgNode' AS `TokenName`,'avgNode' AS `TokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,NULL AS `createProfile_adminWallet`,NULL AS `createProfile_adminWallet_hash`,NULL AS `current_adminWallet_hashes`,NULL AS `createProfile_blockNumber`,NULL AS `createProfile_txHash`,NULL AS `createProfile_ts`,NULL AS `createProfile_date`,0 AS `nodeAgeDays`,avg(`nodes_0`.`nodeStake`) AS `nodeStake`,avg(`nodes_0`.`nodeAsk`) AS `nodeAsk` from `nodes_0` where (`nodes_0`.`nodeStake` >= 50000) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_activity_last1min`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last1min`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_activity_last1min` AS with `activity_1` as (select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_commit_submitted` `a` join `commit_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_u1_commit_submitted` `a` join `commit_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_proof_submitted` `a` join `proof_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_u1_proof_submitted` `a` join `proof_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AskUpdated' AS `event_name`,cast((cast(`a`.`ask` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`profile_ask_updated` `a` join `profile_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'KeyAdded' AS `event_name`,`a`.`key` AS `event_value_1` from ((`identity_storage_key_added` `a` join `identity_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'StakeIncreased' AS `event_name`,cast((cast(`a`.`new_stake` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`staking_stake_increased` `a` left join (select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_tx`.`hash` AS `hash` from `proof_manager_v1_tx` where (`proof_manager_v1_tx`.`block_number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_u1_tx`.`hash` AS `hash` from `proof_manager_v1_u1_tx` where (`proof_manager_v1_u1_tx`.`block_number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`))))) `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`br`.`nodeId` AS `nodeId`,`br`.`tokenName` AS `tokenName`,`br`.`tokenSymbol` AS `tokenSymbol`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from ((((`activity_1` `a` left join `v_nodes_barebone` `br` on((`a`.`identity_id` = `br`.`nodeId`))) left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_activity_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_activity_last24h` AS with `activity_1` as (select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_commit_submitted` `a` left join `commit_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_u1_commit_submitted` `a` left join `commit_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_proof_submitted` `a` left join `proof_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_u1_proof_submitted` `a` left join `proof_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AskUpdated' AS `event_name`,cast((cast(`a`.`ask` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`profile_ask_updated` `a` left join `profile_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'KeyAdded' AS `event_name`,`a`.`key` AS `event_value_1` from ((`identity_storage_key_added` `a` left join `identity_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'StakeIncreased' AS `event_name`,cast((cast(`a`.`new_stake` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`staking_stake_increased` `a` left join (select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_tx`.`hash` AS `hash` from `proof_manager_v1_tx` where (`proof_manager_v1_tx`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_u1_tx`.`hash` AS `hash` from `proof_manager_v1_u1_tx` where (`proof_manager_v1_u1_tx`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1))) `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`br`.`nodeId` AS `nodeId`,`br`.`tokenName` AS `tokenName`,`br`.`tokenSymbol` AS `tokenSymbol`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from ((((`activity_1` `a` left join `v_nodes_barebone` `br` on((`a`.`identity_id` = `br`.`nodeId`))) left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_avgnode`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_avgnode`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_avgnode` AS select 0 AS `NodeId`,'avgNode' AS `NetworkId`,'avgNode' AS `TokenName`,'avgNode' AS `TokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,NULL AS `createProfile_adminWallet`,NULL AS `createProfile_adminWallet_hash`,NULL AS `current_adminWallet_hashes`,NULL AS `createProfile_blockNumber`,NULL AS `createProfile_txHash`,NULL AS `createProfile_ts`,NULL AS `createProfile_date`,0 AS `nodeAgeDays`,avg(`v_nodes`.`nodeStake`) AS `nodeStake`,avg(`v_nodes`.`nodeAsk`) AS `nodeAsk` from `v_nodes` where (`v_nodes`.`nodeStake` > 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_barebone`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_barebone`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_barebone` AS with `added_admin_keys` as (select `identity_storage_key_added`.`identity_id` AS `identity_id`,`identity_storage_key_added`.`key` AS `key` from `identity_storage_key_added` where (`identity_storage_key_added`.`purpose` = 1)), `removed_keys` as (select `a`.`identity_id` AS `identity_id`,`b`.`remove_key_key` AS `remove_key_key` from (`identity_storage_key_removed` `a` left join `identity_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`) and (`b`.`function` = 'removeKey'))))), `actual_keys` as (select `a`.`identity_id` AS `identity_id`,`a`.`key` AS `key` from (`added_admin_keys` `a` left join `removed_keys` `b` on(((`a`.`identity_id` = `b`.`identity_id`) and (`a`.`key` = `b`.`remove_key_key`)))) where (`b`.`identity_id` is null)), `actual_keys_concat` as (select `actual_keys`.`identity_id` AS `identity_id`,group_concat(`actual_keys`.`key` separator ',') AS `admin_keys_hashes` from `actual_keys` group by `actual_keys`.`identity_id`) select `a`.`identity_id` AS `nodeId`,(case when (`b`.`create_profile_node_id` = '0x5cac41237127f94c2d21dae0b14bfefa998806302e357127ed9d44860b322a2314a5ce338d2aec67cd3ded5c9adeed60718ce26c') then 'invalidNetworkID1' else convert(unhex(substr(`b`.`create_profile_node_id`,3,92)) using utf8mb4) end) AS `networkId`,`b`.`create_profile_shares_token_name` AS `tokenName`,`b`.`create_profile_shares_token_symbol` AS `tokenSymbol`,NULL AS `nodeOwner`,(case when (left(`b`.`create_profile_shares_token_symbol`,6) = 'TLNODE') then 'Trace Labs' when (`b`.`create_profile_shares_token_symbol` in ('TechnoTesseract','QuantumRealm','CyberstormCentral','StellarSynapse','SynthwaveSanctuary','GalacticGateway','CyberVortex','ViperVerse','DreamMachine','OrionBreeze','NovaLuna','AstroSphere','SolarFlare','Tars','GalacticCore','CometCruiser','CelestialCloud','LunaLander','CosmoCluster','SaturnStation','StarshipSynth','CosmicCrypt','InterstellarNode','FusionLink','ElextraStream','TitanLink','PulsarVertex','CodeDynamo','AuroraByte','EonSecure')) then 'Trace Labs' else 'Community' end) AS `nodeGroup`,`b`.`create_profile_admin_wallet` AS `createProfile_adminWallet`,`c`.`admin_key` AS `createProfile_adminWallet_hash`,`d`.`admin_keys_hashes` AS `current_adminWallet_hashes`,`a`.`block_number` AS `createProfile_blockNumber`,`b`.`hash` AS `createProfile_txHash`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `createProfile_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `createProfile_date` from ((((`profile_profile_created` `a` left join `profile_tx` `b` on(((`a`.`contract_id` = `b`.`to_id`) and (`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `identity_identity_created` `c` on(((`a`.`block_number` = `c`.`block_number`) and (`a`.`transaction_index` = `c`.`transaction_index`)))) left join `actual_keys_concat` `d` on((`a`.`identity_id` = `d`.`identity_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stake`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stake`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stake` AS select `stats_node`.`identity_id` AS `nodeId`,`stats_node`.`block_date` AS `date`,`stats_node`.`node_stake` AS `nodeStake` from `stats_node` union all select 0 AS `nodeId`,`stats_node`.`block_date` AS `date`,avg(`stats_node`.`node_stake`) AS `nodeStake` from `stats_node` where (`stats_node`.`node_stake` >= 50000) group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_daily` AS with `nodes_0` as (select `a`.`identity_id` AS `nodeId`,`a`.`block_date` AS `date`,`a`.`node_stake` AS `nodeStake`,`a`.`commit_any_epoch` AS `pubsCommited`,`a`.`commit_1st_epoch` AS `pubsCommited1stEpochOnly`,sum(`a`.`commit_any_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePubsCommited`,sum(`a`.`commit_1st_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimated_earnings_any_epoch` AS `estimatedEarnings`,`a`.`estimated_earnings_1st_epoch_only` AS `estimatedEarnings1stEpochOnly`,sum(`a`.`estimated_earnings_any_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativeEstimatedEarnings`,sum(`a`.`estimated_earnings_1st_epoch_only`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,sum(`a`.`payouts`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePayouts`,`a`.`ask` AS `ask` from `stats_node` `a`) select `a`.`nodeId` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date` AS `date`,`a`.`nodeStake` AS `nodeStake`,`a`.`pubsCommited` AS `pubsCommited`,`a`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`a`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`a`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimatedEarnings` AS `estimatedEarnings`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`a`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`a`.`ask` AS `ask` from (`nodes_0` `a` join `v_nodes_barebone` `b` on((`a`.`nodeId` = `b`.`nodeId`))) union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`stats_node`.`block_date` AS `date`,avg(`stats_node`.`node_stake`) AS `nodeStake`,avg(`stats_node`.`commit_any_epoch`) AS `pubsCommited`,avg(`stats_node`.`commit_1st_epoch`) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_node`.`estimated_earnings_any_epoch`) AS `estimatedEarnings`,avg(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_node`.`payouts`) AS `payouts`,NULL AS `NULL`,avg(`stats_node`.`ask`) AS `ask` from `stats_node` where (`stats_node`.`node_stake` >= 50000) group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_daily` AS select `stats_node`.`block_date` AS `date`,sum(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`stats_node`.`estimated_earnings_any_epoch`) - sum(`stats_node`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`stats_node`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,sum(sum(`stats_node`.`commit_1st_epoch`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum((sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`))) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeCommitsSubmitted2plusEpochs`,sum(`stats_node`.`payouts`) AS `payouts`,sum(sum(`stats_node`.`payouts`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativePayouts`,sum(`stats_node`.`proofs_submitted`) AS `proofsSubmitted`,sum(sum(`stats_node`.`proofs_submitted`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeProofsSubmitted`,sum(`stats_node`.`node_stake`) AS `combinedNodesStake`,(sum(`stats_node`.`node_stake`) / sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end))) AS `avgNodeStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk`,(sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) / sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end))) AS `avgAsk` from `stats_node` group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_hourly_7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_hourly_7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_hourly_7d` AS with `dates` as (select `staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,sum(`staging_stake`.`stake`) AS `stake`,sum((case when (`staging_stake`.`stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`staging_stake`.`stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`staging_stake`.`stake` >= 50000) then `staging_stake`.`ask` else 0 end)) AS `combined_ask` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`))) group by `staging_stake`.`block_date`,`staging_stake`.`block_ts_hour`), `commits` as (select `staging_commit_submitted`.`block_date` AS `block_date`,`staging_commit_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_commit_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_commit_submitted`.`block_date`,`staging_commit_submitted`.`block_ts_hour`), `paidouts` as (select `staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout`,count(`staging_proof_submitted`.`value`) AS `proofs_submitted` from `staging_proof_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_proof_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`) select `a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`c`.`estimated_earnings_1st_epoch_only` AS `estimatedEarnings1stEpochOnly`,(`c`.`estimated_earnings_any_epoch` - `c`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings2plusEpochs`,`c`.`commit_1st_epoch` AS `commitsSubmitted1stEpochOnly`,sum(`c`.`commit_1st_epoch`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(`c`.`commit_any_epoch` - `c`.`commit_1st_epoch`) AS `commitsSubmitted2plusEpochs`,sum((`c`.`commit_any_epoch` - `c`.`commit_1st_epoch`)) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeCommitsSubmitted2plusEpochs`,`p`.`paidout` AS `payouts`,sum(`p`.`paidout`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativePayouts`,`p`.`proofs_submitted` AS `proofsSubmitted`,sum(`p`.`proofs_submitted`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeProofsSubmitted`,`a`.`stake` AS `combinedNodesStake`,(`a`.`stake` / `a`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`a`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`a`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`a`.`combined_ask` AS `combinedAsk`,(`a`.`combined_ask` / `a`.`nodesWithMoreThan50kStake`) AS `avgAsk` from ((`dates` `a` left join `commits` `c` on(((`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join `paidouts` `p` on(((`a`.`date_val` = `p`.`block_date`) and (`a`.`ts_val` = `p`.`block_ts_hour`)))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_monthly` AS with `stake_0` as (select `stats_node`.`block_date` AS `block_date`,sum(`stats_node`.`node_stake`) AS `node_stake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk`,row_number() OVER (PARTITION BY date_format(`stats_node`.`block_date`,'%Y-%m-01') ORDER BY `stats_node`.`block_date` desc )  AS `rn` from `stats_node` group by `stats_node`.`block_date`), `stake_1` as (select date_format(`stake_0`.`block_date`,'%Y-%m-01') AS `date`,`stake_0`.`node_stake` AS `node_stake`,`stake_0`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`stake_0`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`stake_0`.`combinedAsk` AS `combinedAsk` from `stake_0` where (`stake_0`.`rn` = 1)), `grouped_0` as (select date_format(`a`.`block_date`,'%Y-%m-01') AS `date`,sum(`a`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`a`.`estimated_earnings_any_epoch`) - sum(`a`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`a`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,sum(sum(`a`.`commit_1st_epoch`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(sum(`a`.`commit_any_epoch`) - sum(`a`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum((sum(`a`.`commit_any_epoch`) - sum(`a`.`commit_1st_epoch`))) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeCommitsSubmitted2plusEpochs`,sum(`a`.`payouts`) AS `payouts`,sum(sum(`a`.`payouts`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePayouts`,sum(`a`.`proofs_submitted`) AS `proofsSubmitted`,sum(sum(`a`.`proofs_submitted`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeProofsSubmitted` from `stats_node` `a` group by date_format(`a`.`block_date`,'%Y-%m-01')) select `a`.`date` AS `date`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`estimatedEarnings2plusEpochs` AS `estimatedEarnings2plusEpochs`,`a`.`commitsSubmitted1stEpochOnly` AS `commitsSubmitted1stEpochOnly`,`a`.`cumulativeCommitsSubmitted1stEpochOnly` AS `cumulativeCommitsSubmitted1stEpochOnly`,`a`.`commitsSubmitted2plusEpochs` AS `commitsSubmitted2plusEpochs`,`a`.`cumulativeCommitsSubmitted2plusEpochs` AS `cumulativeCommitsSubmitted2plusEpochs`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`a`.`proofsSubmitted` AS `proofsSubmitted`,`a`.`cumulativeProofsSubmitted` AS `cumulativeProofsSubmitted`,`b`.`node_stake` AS `combinedNodesStake`,(`b`.`node_stake` / `b`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`b`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`b`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`b`.`combinedAsk` AS `combinedAsk`,(`b`.`combinedAsk` / `b`.`nodesWithMoreThan50kStake`) AS `avgAsk` from (`grouped_0` `a` join `stake_1` `b` on((`a`.`date` = `b`.`date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_total`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_total`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_total` AS with `stake_0` as (select sum(`stats_node`.`node_stake`) AS `node_stake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk` from `stats_node` where (`stats_node`.`block_date` = (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`)) group by `stats_node`.`block_date`), `grouped_0` as (select sum(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`stats_node`.`estimated_earnings_any_epoch`) - sum(`stats_node`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`stats_node`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,(sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum(`stats_node`.`payouts`) AS `payouts`,sum(`stats_node`.`proofs_submitted`) AS `proofsSubmitted` from `stats_node`) select `a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`estimatedEarnings2plusEpochs` AS `estimatedEarnings2plusEpochs`,`a`.`commitsSubmitted1stEpochOnly` AS `commitsSubmitted1stEpochOnly`,`a`.`commitsSubmitted2plusEpochs` AS `commitsSubmitted2plusEpochs`,`a`.`payouts` AS `payouts`,`a`.`proofsSubmitted` AS `proofsSubmitted`,`b`.`node_stake` AS `combinedNodesStake`,(`b`.`node_stake` / `b`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`b`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`b`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`b`.`combinedAsk` AS `combinedAsk`,(`b`.`combinedAsk` / `b`.`nodesWithMoreThan50kStake`) AS `avgAsk` from (`grouped_0` `a` join `stake_0` `b`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_hourly_7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_hourly_7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_hourly_7d` AS with `nodeids_dates` as (select `staging_stake`.`identity_id` AS `nodeId`,`staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,`staging_stake`.`stake` AS `stake`,`staging_stake`.`ask` AS `ask` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`)))), `node_stats_0` as (select `a`.`nodeId` AS `nodeId`,`a`.`date_val` AS `date_val`,`a`.`ts_val` AS `ts_val`,max(`a`.`stake`) AS `nodeStake`,max(`a`.`ask`) AS `ask`,sum(`c`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`c`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(sum(`c`.`estimated_earnings_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `estimated_earnings_any_epoch_cum`,sum(sum(`c`.`estimated_earnings_1st_epoch_only`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `estimated_earnings_1st_epoch_only_cum`,sum(`c`.`commit_any_epoch`) AS `commit_any_epoch`,sum(sum(`c`.`commit_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `commit_any_epoch_cum`,sum(`c`.`commit_1st_epoch`) AS `commit_1st_epoch`,sum(sum(`c`.`commit_1st_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `commit_1st_epoch_cum`,`e`.`paidout` AS `paidout`,sum(`e`.`paidout`) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `paidout_cum` from ((`nodeids_dates` `a` left join `staging_commit_submitted` `c` on(((`a`.`nodeId` = `c`.`identity_id`) and (`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join (select `staging_proof_submitted`.`identity_id` AS `identity_id`,`staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where (`staging_proof_submitted`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) group by `staging_proof_submitted`.`identity_id`,`staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`) `e` on(((`a`.`nodeId` = `e`.`identity_id`) and (`a`.`date_val` = `e`.`block_date`) and (`a`.`ts_val` = `e`.`block_ts_hour`)))) where ((`c`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) or (`c`.`block_date` is null)) group by `a`.`nodeId`,`a`.`date_val`,`a`.`ts_val`), `dates_avg_node` as (select `staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,avg(`staging_stake`.`stake`) AS `stake`,avg(`staging_stake`.`ask`) AS `ask`,count(`staging_stake`.`block_date`) AS `node_count` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`)) and (`staging_stake`.`stake` >= 50000)) group by `staging_stake`.`block_date`,`staging_stake`.`block_ts_hour`), `commits_avg_node` as (select `staging_commit_submitted`.`block_date` AS `block_date`,`staging_commit_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_commit_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_commit_submitted`.`block_date`,`staging_commit_submitted`.`block_ts_hour`), `paidout_avg_node` as (select `staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_proof_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`), `node_stats_0_avg_node` as (select `a`.`date_val` AS `date_val`,`a`.`ts_val` AS `ts_val`,`a`.`stake` AS `nodeStake`,`a`.`ask` AS `ask`,(`c`.`estimated_earnings_any_epoch` / `a`.`node_count`) AS `estimated_earnings_any_epoch`,(`c`.`estimated_earnings_1st_epoch_only` / `a`.`node_count`) AS `estimated_earnings_1st_epoch_only`,(`c`.`commit_any_epoch` / `a`.`node_count`) AS `commit_any_epoch`,(`c`.`commit_1st_epoch` / `a`.`node_count`) AS `commit_1st_epoch`,(`p`.`paidout` / `a`.`node_count`) AS `paidout` from ((`dates_avg_node` `a` left join `commits_avg_node` `c` on(((`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join `paidout_avg_node` `p` on(((`a`.`date_val` = `p`.`block_date`) and (`a`.`ts_val` = `p`.`block_ts_hour`))))) select `a`.`nodeId` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`a`.`nodeStake` AS `nodeStake`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly`,ifnull(`a`.`commit_any_epoch_cum`,0) AS `cumulativePubsCommited`,ifnull(`a`.`commit_1st_epoch_cum`,0) AS `cumulativePubsCommited1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch_cum`,0) AS `cumulativeEstimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only_cum`,0) AS `cumulativeEstimatedEarnings1stEpochOnly`,ifnull(`a`.`paidout`,0) AS `payouts`,ifnull(`a`.`paidout_cum`,0) AS `cumulativePayouts`,`a`.`ask` AS `ask` from (`node_stats_0` `a` left join `v_nodes_barebone` `b` on((`a`.`nodeId` = `b`.`nodeId`))) union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`a`.`nodeStake` AS `nodeStake`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,ifnull(`a`.`paidout`,0) AS `payouts`,NULL AS `NULL`,`a`.`ask` AS `ask` from `node_stats_0_avg_node` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last1h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last1h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last1h` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(2) hour) AS `t` from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last24h` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(2) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(2) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last30d` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) where (`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(30) day) as date) from `v_sys_staging_date`)) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last7d` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) where (`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(7) day) as date) from `v_sys_staging_date`)) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_latest`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_latest`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_latest` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_monthly` AS with `stake_ask_0` as (select `stats_node`.`identity_id` AS `identity_id`,`stats_node`.`block_date` AS `block_date`,`stats_node`.`node_stake` AS `node_stake`,`stats_node`.`ask` AS `ask`,row_number() OVER (PARTITION BY `stats_node`.`identity_id`,date_format(`stats_node`.`block_date`,'%Y-%m-01') ORDER BY `stats_node`.`block_date` desc )  AS `rn` from `stats_node`), `stake_ask_1` as (select `stake_ask_0`.`identity_id` AS `identity_id`,date_format(`stake_ask_0`.`block_date`,'%Y-%m-01') AS `date`,`stake_ask_0`.`node_stake` AS `node_stake`,`stake_ask_0`.`ask` AS `ask` from `stake_ask_0` where (`stake_ask_0`.`rn` = 1)), `stats_0` as (select `a`.`identity_id` AS `identity_id`,date_format(`a`.`block_date`,'%Y-%m-01') AS `date`,sum(`a`.`commit_any_epoch`) AS `pubsCommited`,sum(`a`.`commit_1st_epoch`) AS `pubsCommited1stEpochOnly`,sum(sum(`a`.`commit_any_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePubsCommited`,sum(sum(`a`.`commit_1st_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePubsCommited1stEpochOnly`,sum(`a`.`estimated_earnings_any_epoch`) AS `estimatedEarnings`,sum(`a`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,sum(sum(`a`.`estimated_earnings_any_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeEstimatedEarnings`,sum(sum(`a`.`estimated_earnings_1st_epoch_only`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeEstimatedEarnings1stEpochOnly`,sum(`a`.`payouts`) AS `payouts`,sum(sum(`a`.`payouts`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePayouts` from `stats_node` `a` group by `a`.`identity_id`,date_format(`a`.`block_date`,'%Y-%m-01')), `stats_1` as (select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date` AS `date`,`c`.`node_stake` AS `nodeStake`,`a`.`pubsCommited` AS `pubsCommited`,`a`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`a`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`a`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimatedEarnings` AS `estimatedEarnings`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`a`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`c`.`ask` AS `ask` from ((`stats_0` `a` join `v_nodes_barebone` `b` on((`a`.`identity_id` = `b`.`nodeId`))) join `stake_ask_1` `c` on(((`a`.`identity_id` = `c`.`identity_id`) and (`a`.`date` = `c`.`date`))))) select `stats_1`.`nodeId` AS `nodeId`,`stats_1`.`networkId` AS `networkId`,`stats_1`.`tokenName` AS `tokenName`,`stats_1`.`tokenSymbol` AS `tokenSymbol`,`stats_1`.`nodeOwner` AS `nodeOwner`,`stats_1`.`nodeGroup` AS `nodeGroup`,`stats_1`.`date` AS `date`,`stats_1`.`nodeStake` AS `nodeStake`,`stats_1`.`pubsCommited` AS `pubsCommited`,`stats_1`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`stats_1`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`stats_1`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`stats_1`.`estimatedEarnings` AS `estimatedEarnings`,`stats_1`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`stats_1`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`stats_1`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`stats_1`.`payouts` AS `payouts`,`stats_1`.`cumulativePayouts` AS `cumulativePayouts`,`stats_1`.`ask` AS `ask` from `stats_1` union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`stats_1`.`date` AS `date`,avg(`stats_1`.`nodeStake`) AS `nodeStake`,avg(`stats_1`.`pubsCommited`) AS `pubsCommited`,avg(`stats_1`.`pubsCommited1stEpochOnly`) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_1`.`estimatedEarnings`) AS `estimatedEarnings`,avg(`stats_1`.`estimatedEarnings1stEpochOnly`) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_1`.`payouts`) AS `payouts`,NULL AS `NULL`,avg(`stats_1`.`ask`) AS `ask` from `stats_1` where (`stats_1`.`nodeStake` >= 50000) group by `stats_1`.`date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs` AS select `b`.`contract_address` AS `contract_address`,`a`.`token_id` AS `token_id`,concat(`b`.`contract_address`,`a`.`keyword`) AS `keyword`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`c`.`chain_id` AS `chain_id`,`ch`.`chain_name` AS `chain_name`,`a`.`size` AS `size`,`a`.`triples_number` AS `triples_number`,`a`.`chunks_number` AS `chunks_number`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,((`a`.`epoch_length` / 3600) / 24) AS `epoch_length_days`,`a`.`token_amount` AS `token_amount`,`a`.`bid` AS `bid`,`a`.`transaction_hash` AS `transaction_hash`,`a`.`transaction_index` AS `transaction_index`,`a`.`block_number` AS `block_number`,`a`.`block_timestamp` AS `block_timestamp`,`a`.`block_ts` AS `block_ts`,`a`.`block_date` AS `block_date`,`a`.`block_ts_hour` AS `block_ts_hour`,`a`.`state_index` AS `state_index`,`a`.`state` AS `state`,concat('[',`a`.`previous_states`,']') AS `previous_states`,`a`.`from` AS `publisher`,concat(left(`a`.`from`,6),'...',right(`a`.`from`,4)) AS `publisher_short`,`a`.`owner` AS `owner`,`a`.`winners` AS `winners` from (((`staging_pub` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_activity_last1min`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last1min`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_activity_last1min` AS with `activity_1` as (select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetCreated' AS `event_name`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetTransferred' AS `event_name`,`a`.`to` AS `event_value_1` from ((`content_asset_storage_transfer` `a` join `content_asset_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)) and (`a`.`from` <> '0x0000000000000000000000000000000000000000') and (`a`.`to` <> '0x0000000000000000000000000000000000000000')) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetBurnt' AS `event_name`,cast((cast(`a`.`returned_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_burnt` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetUpdated' AS `event_name`,cast((cast(`a`.`update_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_state_updated` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`a`.`from` AS `signer`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from (((`activity_1` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_activity_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_activity_last24h` AS with `activity_1` as (select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetCreated' AS `event_name`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetTransferred' AS `event_name`,`a`.`to` AS `event_value_1` from ((`content_asset_storage_transfer` `a` join `content_asset_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)) and (`a`.`from` <> '0x0000000000000000000000000000000000000000') and (`a`.`to` <> '0x0000000000000000000000000000000000000000')) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetBurnt' AS `event_name`,cast((cast(`a`.`returned_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_burnt` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetUpdated' AS `event_name`,cast((cast(`a`.`update_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_state_updated` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`a`.`from` AS `signer`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from (((`activity_1` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_daily` AS select `a`.`block_date` AS `date`,ifnull((sum(`a`.`total_size`) / sum(`a`.`total_pubs`)),0) AS `avgPubSize`,ifnull((sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)),0) AS `avgEpochsNumber`,ifnull((sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)),0) AS `avgPubPrice`,ifnull((sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)),0) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,ifnull(round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0),0) AS `privatePubsPercentage`,sum(sum(`a`.`total_trac_spent`)) OVER (ORDER BY `a`.`block_date` )  AS `cumulativeTotalTracSpent`,sum(sum(`a`.`total_pubs`)) OVER (ORDER BY `a`.`block_date` )  AS `cumulativePubs` from `stats_pub` `a` group by `a`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_hourly`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_hourly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_hourly` AS select `a`.`block_date` AS `date`,`a`.`block_ts_hour` AS `datetime`,ifnull((`a`.`total_size` / `a`.`total_pubs`),0) AS `avgPubSize`,ifnull((`a`.`total_epochs` / `a`.`total_pubs`),0) AS `avgEpochsNumber`,ifnull((`a`.`total_trac_spent` / `a`.`total_pubs`),0) AS `avgPubPrice`,ifnull((`a`.`total_bid` / `a`.`total_pubs`),0) AS `avgBid`,`a`.`total_pubs` AS `totalPubs`,`a`.`total_trac_spent` AS `totalTracSpent`,round((ifnull((`a`.`private_pubs` / `a`.`total_pubs`),0) * 100),0) AS `privatePubsPercentage`,sum(`a`.`total_trac_spent`) OVER (ORDER BY `a`.`block_date`,`a`.`block_ts_hour` )  AS `cumulativeTotalTracSpent`,sum(`a`.`total_pubs`) OVER (ORDER BY `a`.`block_date`,`a`.`block_ts_hour` )  AS `cumulativePubs` from `stats_pub` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last1h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last1h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last1h` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_ts` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(2) hour) from `v_sys_staging_date`)) and (`a`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last24h` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last30d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last7d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_monthly` AS with `daily` as (select `stats_pub`.`block_date` AS `date`,sum(`stats_pub`.`total_size`) AS `size`,sum(`stats_pub`.`total_epochs`) AS `epochs_number`,sum(`stats_pub`.`total_bid`) AS `bid`,sum(`stats_pub`.`total_pubs`) AS `totalPubs`,sum(`stats_pub`.`total_trac_spent`) AS `totalTracSpent`,sum(`stats_pub`.`private_pubs`) AS `privatePubs` from `stats_pub` group by `stats_pub`.`block_date`) select date_format(`daily`.`date`,'%Y-%m-01') AS `date`,(sum(`daily`.`size`) / sum(`daily`.`totalPubs`)) AS `avgPubSize`,(sum(`daily`.`epochs_number`) / sum(`daily`.`totalPubs`)) AS `avgEpochsNumber`,(sum(`daily`.`totalTracSpent`) / sum(`daily`.`totalPubs`)) AS `avgPubPrice`,(sum(`daily`.`bid`) / sum(`daily`.`totalPubs`)) AS `avgBid`,sum(`daily`.`totalPubs`) AS `totalPubs`,sum(`daily`.`totalTracSpent`) AS `totalTracSpent`,round(((sum(`daily`.`privatePubs`) / sum(`daily`.`totalPubs`)) * 100),0) AS `privatePubsPercentage`,sum(sum(`daily`.`totalTracSpent`)) OVER (ORDER BY date_format(`daily`.`date`,'%Y-%m-01') )  AS `cumulativeTotalTracSpent`,sum(sum(`daily`.`totalPubs`)) OVER (ORDER BY date_format(`daily`.`date`,'%Y-%m-01') )  AS `cumulativePubs` from `daily` group by date_format(`daily`.`date`,'%Y-%m-01') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_total`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_total`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_total` AS select (sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_notif_contracts_change`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_notif_contracts_change`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_notif_contracts_change` AS with `a` as (select `hub_asset_storage_changed`.`block_number` AS `block_number` from `hub_asset_storage_changed` union all select `hub_contract_changed`.`block_number` AS `block_number` from `hub_contract_changed` union all select `hub_new_asset_storage`.`block_number` AS `block_number` from `hub_new_asset_storage` union all select `hub_new_contract`.`block_number` AS `block_number` from `hub_new_contract`) select cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date` from (`a` left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) >= (cast(curdate() as date) - interval 2 day)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_date`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_date`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_date` AS select `block`.`number` AS `number`,`block`.`timestamp` AS `timestamp`,cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour` from `block` where (`block`.`number` = (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table') limit 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_commit_submitted`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_commit_submitted`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_commit_submitted` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`service_agreement_v1_commit_submitted` `a` left join `service_agreement_v1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`commit_manager_v1_commit_submitted` `a` left join `commit_manager_v1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`commit_manager_v1_u1_commit_submitted` `a` left join `commit_manager_v1_u1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`state_index` = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_proof_submitted`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_proof_submitted`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_proof_submitted` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`service_agreement_v1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `service_agreement_v1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`proof_manager_v1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `proof_manager_v1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`block_number` <> 2881732) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`proof_manager_v1_u1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `proof_manager_v1_u1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_pub`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_pub`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_pub` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,ifnull(`d`.`create_asset_size`,0) AS `size`,ifnull(`d`.`create_asset_triples_number`,0) AS `triples_number`,ifnull(`d`.`create_asset_chunks_number`,0) AS `chunks_number`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `token_amount`,(case when (`d`.`create_asset_size` is not null) then cast(((((cast(`a`.`token_amount` as decimal(45,18)) / `a`.`epochs_number`) / 3) / (`d`.`create_asset_size` / 1024)) / 1000000000000000000) as decimal(27,18)) else 0 end) AS `bid`,`d`.`hash` AS `transaction_hash`,`a`.`transaction_index` AS `transaction_index`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,0 AS `state_index`,ifnull(`b`.`state`,0) AS `state`,NULL AS `previous_states`,ifnull(`d`.`from`,'0x0') AS `from` from (((`service_agreement_v1_service_agreement_v1_created` `a` left join `content_asset_asset_minted` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `content_asset_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_update_dead`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_update_dead`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_update_dead` AS select (case when (((select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block')) - (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table'))) > 100) then ((select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block')) - (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table'))) else NULL end) AS `sync_delta` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_sync_date`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_sync_date`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_sync_date` AS select `block`.`number` AS `number`,`block`.`timestamp` AS `timestamp`,cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour` from `block` where (`block`.`number` = (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block') limit 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_tx_all`
--

/*!50001 DROP VIEW IF EXISTS `v_tx_all`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_tx_all` AS select `assertion_tx`.`block_number` AS `block_number`,`assertion_tx`.`transaction_index` AS `transaction_index`,'assertion_tx' AS `table` from `assertion_tx` union all select `commit_manager_v1_tx`.`block_number` AS `block_number`,`commit_manager_v1_tx`.`transaction_index` AS `transaction_index`,'commit_manager_v1_tx' AS `commit_manager_v1_tx` from `commit_manager_v1_tx` union all select `commit_manager_v1_u1_tx`.`block_number` AS `block_number`,`commit_manager_v1_u1_tx`.`transaction_index` AS `transaction_index`,'commit_manager_v1_u1_tx' AS `commit_manager_v1_u1_tx` from `commit_manager_v1_u1_tx` union all select `content_asset_tx`.`block_number` AS `block_number`,`content_asset_tx`.`transaction_index` AS `transaction_index`,'content_asset_tx' AS `content_asset_tx` from `content_asset_tx` union all select `hub_tx`.`block_number` AS `block_number`,`hub_tx`.`transaction_index` AS `transaction_index`,'hub_tx' AS `hub_tx` from `hub_tx` union all select `identity_tx`.`block_number` AS `block_number`,`identity_tx`.`transaction_index` AS `transaction_index`,'identity_tx' AS `identity_tx` from `identity_tx` union all select `other_tx`.`block_number` AS `block_number`,`other_tx`.`transaction_index` AS `transaction_index`,'other_tx' AS `other_tx` from `other_tx` union all select `profile_tx`.`block_number` AS `block_number`,`profile_tx`.`transaction_index` AS `transaction_index`,'profile_tx' AS `profile_tx` from `profile_tx` union all select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`transaction_index` AS `transaction_index`,'proof_manager_v1_tx' AS `proof_manager_v1_tx` from `proof_manager_v1_tx` union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`transaction_index` AS `transaction_index`,'proof_manager_v1_u1_tx' AS `proof_manager_v1_u1_tx` from `proof_manager_v1_u1_tx` union all select `service_agreement_v1_tx`.`block_number` AS `block_number`,`service_agreement_v1_tx`.`transaction_index` AS `transaction_index`,'service_agreement_v1_tx' AS `service_agreement_v1_tx` from `service_agreement_v1_tx` union all select `sharding_table_tx`.`block_number` AS `block_number`,`sharding_table_tx`.`transaction_index` AS `transaction_index`,'sharding_table_tx' AS `sharding_table_tx` from `sharding_table_tx` union all select `staking_tx`.`block_number` AS `block_number`,`staking_tx`.`transaction_index` AS `transaction_index`,'staking_tx' AS `staking_tx` from `staking_tx` union all select `token_tx`.`block_number` AS `block_number`,`token_tx`.`transaction_index` AS `transaction_index`,'token_tx' AS `token_tx` from `token_tx` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-01-25  9:39:58
CREATE DATABASE  IF NOT EXISTS `sync_gnosis_mainnet` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;
USE `sync_gnosis_mainnet`;
-- MySQL dump 10.13  Distrib 8.0.32, for Win64 (x86_64)
--
-- Host: 127.0.0.1    Database: sync_gnosis_mainnet
-- ------------------------------------------------------
-- Server version	8.0.32

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Temporary view structure for view `_raw_v_nodes_stats_daily`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_daily` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_last30d`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_last30d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_last7d`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_last7d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_last7d_raw`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_last7d_raw`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d_raw`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_last7d_raw` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_nodes_stats_latest`
--

DROP TABLE IF EXISTS `_raw_v_nodes_stats_latest`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_latest`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_nodes_stats_latest` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_daily`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_daily` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_hourly`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_hourly`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_hourly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_hourly` AS SELECT 
 1 AS `date`,
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_last24h`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_last24h`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_last24h` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_last30d`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_last30d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_last7d`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_last7d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `_raw_v_pubs_stats_monthly`
--

DROP TABLE IF EXISTS `_raw_v_pubs_stats_monthly`;
/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `_raw_v_pubs_stats_monthly` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `assertion_assertion_created`
--

DROP TABLE IF EXISTS `assertion_assertion_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `assertion_assertion_created` (
  `assertion_id` char(66) DEFAULT NULL,
  `size` int unsigned DEFAULT NULL,
  `triples_number` mediumint unsigned DEFAULT NULL,
  `chunks_number` mediumint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_assertion_assertion_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_assertion_assertion_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `assertion_tx`
--

DROP TABLE IF EXISTS `assertion_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `assertion_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_assertion_assertion_id` char(66) DEFAULT NULL,
  `create_assertion_size` int unsigned DEFAULT NULL,
  `create_assertion_triples_number` mediumint unsigned DEFAULT NULL,
  `create_assertion_chunks_number` mediumint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_assertion_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_assertion_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `block`
--

DROP TABLE IF EXISTS `block`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `block` (
  `number` int unsigned NOT NULL,
  `timestamp` int unsigned DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`number`),
  UNIQUE KEY `v_nodes_activity` (`timestamp` DESC,`number`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_commit_submitted`
--

DROP TABLE IF EXISTS `commit_manager_v1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_commit_submitted` (
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `score` int unsigned DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`identity_id`,`epoch`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_commit_submitted_contract_id` (`contract_id`),
  KEY `fk_commit_manager_v1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_tx`
--

DROP TABLE IF EXISTS `commit_manager_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_tx_contract_id` (`to_id`),
  KEY `fk_commit_manager_v1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_commit_submitted`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_commit_submitted` (
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `score` int unsigned DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`epoch`,`identity_id`,`state_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_commit_submitted_contract_id` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_state_finalized`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_state_finalized`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_state_finalized` (
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `state` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`epoch`,`state_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_state_finalized_asset_contract_id` (`asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_state_finalized_contract_id` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_state_finalized_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_state_finalized_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `commit_manager_v1_u1_tx`
--

DROP TABLE IF EXISTS `commit_manager_v1_u1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `commit_manager_v1_u1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `submit_update_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_update_commit_keyword` char(64) DEFAULT NULL,
  `submit_update_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_update_commit_epoch` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `submit_update_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_commit_manager_v1_u1_tx_contract_id` (`to_id`),
  KEY `fk_commit_manager_v1_u1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  KEY `fk_commit_manager_v1_u1_tx_update_commit_asset_contract_id` (`submit_update_commit_asset_contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_commit_manager_v1_u1_tx_update_commit_asset_contract_id` FOREIGN KEY (`submit_update_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_burnt`
--

DROP TABLE IF EXISTS `content_asset_asset_burnt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_burnt` (
  `token_id` bigint unsigned NOT NULL,
  `returned_token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_burnt_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_burnt_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_burnt_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_burnt_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_minted`
--

DROP TABLE IF EXISTS `content_asset_asset_minted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_minted` (
  `token_id` bigint unsigned NOT NULL,
  `state` char(66) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`state`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_minted_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_minted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_minted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_minted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_state_update_canceled`
--

DROP TABLE IF EXISTS `content_asset_asset_state_update_canceled`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_state_update_canceled` (
  `token_id` bigint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `returned_token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`state_index`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_state_update_canceled_asset_contract_id` (`asset_contract_id`),
  KEY `fk_content_asset_asset_state_update_canceled_contract_id` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_update_canceled_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_update_canceled_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_state_updated`
--

DROP TABLE IF EXISTS `content_asset_asset_state_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_state_updated` (
  `token_id` bigint unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `update_token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`state_index`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_state_updated_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_state_updated_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_updated_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_state_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_storing_period_extended`
--

DROP TABLE IF EXISTS `content_asset_asset_storing_period_extended`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_storing_period_extended` (
  `token_id` bigint unsigned NOT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_storing_period_extended_contract_id` (`contract_id`),
  KEY `fk_content_asset_asset_storing_period_extended_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_asset_storing_period_extended_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_storing_period_extended_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_asset_update_payment_increased`
--

DROP TABLE IF EXISTS `content_asset_asset_update_payment_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_asset_update_payment_increased` (
  `token_id` bigint unsigned NOT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_asset_update_payment_increased_contract_id` (`contract_id`),
  KEY `f_content_asset_asset_update_payment_increased_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `f_content_asset_asset_update_payment_increased_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_asset_update_payment_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_payment_increased`
--

DROP TABLE IF EXISTS `content_asset_payment_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_payment_increased` (
  `token_id` bigint unsigned NOT NULL,
  `token_amount` decimal(27,0) NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_payment_increased_contract_id` (`contract_id`),
  KEY `fk_content_asset_payment_increased_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_content_asset_payment_increased_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_content_asset_payment_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_storage_transfer`
--

DROP TABLE IF EXISTS `content_asset_storage_transfer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_storage_transfer` (
  `from` char(42) DEFAULT NULL,
  `to` char(42) DEFAULT NULL,
  `token_id` bigint unsigned NOT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_storage_transfer_contract_id` (`contract_id`),
  CONSTRAINT `fk_content_asset_storage_transfer_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_storage_tx`
--

DROP TABLE IF EXISTS `content_asset_storage_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_storage_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_storage_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_content_asset_storage_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `content_asset_tx`
--

DROP TABLE IF EXISTS `content_asset_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `content_asset_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_asset_assertion_id` char(66) DEFAULT NULL,
  `create_asset_size` int unsigned DEFAULT NULL,
  `create_asset_triples_number` mediumint unsigned DEFAULT NULL,
  `create_asset_chunks_number` mediumint unsigned DEFAULT NULL,
  `create_asset_epochs_number` smallint unsigned DEFAULT NULL,
  `create_asset_token_amount` decimal(27,0) DEFAULT NULL,
  `create_asset_score_function_id` tinyint unsigned DEFAULT NULL,
  `create_asset_immutable_` tinyint unsigned DEFAULT NULL,
  `burn_asset_token_id` bigint unsigned DEFAULT NULL,
  `cancel_asset_state_update_token_id` bigint unsigned DEFAULT NULL,
  `extend_asset_storing_period_token_id` bigint unsigned DEFAULT NULL,
  `extend_asset_storing_period_epochs_number` smallint unsigned DEFAULT NULL,
  `extend_asset_storing_period_token_amount` decimal(27,0) DEFAULT NULL,
  `increase_asset_token_amount_token_id` bigint unsigned DEFAULT NULL,
  `increase_asset_token_amount_token_amount` decimal(27,0) DEFAULT NULL,
  `increase_asset_update_token_amount_token_id` bigint unsigned DEFAULT NULL,
  `increase_asset_update_token_amount_token_amount` decimal(27,0) DEFAULT NULL,
  `update_asset_state_token_id` bigint unsigned DEFAULT NULL,
  `update_asset_state_assertion_id` char(66) DEFAULT NULL,
  `update_asset_state_size` int unsigned DEFAULT NULL,
  `update_asset_state_triples_number` mediumint unsigned DEFAULT NULL,
  `update_asset_state_chunks_number` mediumint unsigned DEFAULT NULL,
  `update_asset_state_update_token_amount` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_content_asset_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_content_asset_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `contracts`
--

DROP TABLE IF EXISTS `contracts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `contracts` (
  `contract_id` tinyint unsigned NOT NULL AUTO_INCREMENT,
  `contract_address` char(42) NOT NULL,
  PRIMARY KEY (`contract_id`),
  UNIQUE KEY `contract_address` (`contract_address`)
) ENGINE=InnoDB AUTO_INCREMENT=92 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_asset_storage_changed`
--

DROP TABLE IF EXISTS `hub_asset_storage_changed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_asset_storage_changed` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_hub_asset_storage_changed_contract_id` (`contract_id`),
  CONSTRAINT `fk_hub_asset_storage_changed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_contract_changed`
--

DROP TABLE IF EXISTS `hub_contract_changed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_contract_changed` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_contract_changed_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_contract_changed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_new_asset_storage`
--

DROP TABLE IF EXISTS `hub_new_asset_storage`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_new_asset_storage` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_new_asset_storage_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_new_asset_storage_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_new_contract`
--

DROP TABLE IF EXISTS `hub_new_contract`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_new_contract` (
  `contract_name` varchar(255) NOT NULL,
  `new_contract_address` char(42) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_hub_new_contract_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_hub_new_contract_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `hub_tx`
--

DROP TABLE IF EXISTS `hub_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `hub_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `set_contract_address_contract_name` varchar(255) DEFAULT NULL,
  `set_contract_address_new_contract_address` varchar(42) DEFAULT NULL,
  `set_asset_storage_address_asset_storage_name` varchar(255) DEFAULT NULL,
  `set_asset_storage_address_asset_storage_address` varchar(42) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_hub_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_hub_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_identity_created`
--

DROP TABLE IF EXISTS `identity_identity_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_identity_created` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `operational_key` char(66) DEFAULT NULL,
  `admin_key` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_identity_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_identity_identity_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_identity_deleted`
--

DROP TABLE IF EXISTS `identity_identity_deleted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_identity_deleted` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_identity_deleted_contract_id` (`contract_id`),
  CONSTRAINT `fk_identity_identity_deleted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_key_added`
--

DROP TABLE IF EXISTS `identity_storage_key_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_key_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `key` char(66) DEFAULT NULL,
  `purpose` tinyint unsigned DEFAULT NULL,
  `key_type` tinyint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_identity_storage_key_added_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_identity_storage_key_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_key_removed`
--

DROP TABLE IF EXISTS `identity_storage_key_removed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_key_removed` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `key` char(66) DEFAULT NULL,
  `purpose` tinyint unsigned DEFAULT NULL,
  `key_type` tinyint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  KEY `fk_identity_storage_key_removed_contract_id` (`contract_id`),
  KEY `idx_block_tx` (`block_number`,`transaction_index`),
  CONSTRAINT `fk_identity_storage_key_removed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_storage_tx`
--

DROP TABLE IF EXISTS `identity_storage_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_storage_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `delete_identity` smallint unsigned DEFAULT NULL,
  `set_operational_key_identity_id_operational_key` char(66) DEFAULT NULL,
  `set_operational_key_identity_id_identity_id` smallint unsigned DEFAULT NULL,
  `remote_operational_key_identity_id_operational_key` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_storage_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_identity_storage_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `identity_tx`
--

DROP TABLE IF EXISTS `identity_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identity_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_key_identity_id` smallint unsigned DEFAULT NULL,
  `add_key_key` char(66) DEFAULT NULL,
  `add_key_key_purpose` tinyint unsigned DEFAULT NULL,
  `add_key_key_type` tinyint unsigned DEFAULT NULL,
  `create_identity_operational` char(42) DEFAULT NULL,
  `create_identity_admin` char(42) DEFAULT NULL,
  `delete_identity_identity_id` smallint unsigned DEFAULT NULL,
  `remove_key_identity_id` smallint unsigned DEFAULT NULL,
  `remove_key_key` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_identity_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_identity_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `manual_bad_txs`
--

DROP TABLE IF EXISTS `manual_bad_txs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `manual_bad_txs` (
  `transaction_hash` varchar(66) NOT NULL,
  `comment` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`transaction_hash`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `other_tx`
--

DROP TABLE IF EXISTS `other_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `other_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `input` text NOT NULL,
  `to` char(42) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_ask_updated`
--

DROP TABLE IF EXISTS `profile_ask_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_ask_updated` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `ask` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_ask_updated_contract_id` (`contract_id`),
  KEY `v_nodes` (`identity_id`,`ask`,`block_number`),
  CONSTRAINT `fk_profile_ask_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_profile_created`
--

DROP TABLE IF EXISTS `profile_profile_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_profile_created` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_profile_created_contract_id` (`contract_id`),
  CONSTRAINT `fk_profile_profile_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_profile_deleted`
--

DROP TABLE IF EXISTS `profile_profile_deleted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_profile_deleted` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_profile_deleted_contract_id` (`contract_id`),
  CONSTRAINT `fk_profile_profile_deleted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `profile_tx`
--

DROP TABLE IF EXISTS `profile_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profile_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `create_profile_admin_wallet` char(42) DEFAULT NULL,
  `create_profile_node_id` char(94) DEFAULT NULL,
  `create_profile_shares_token_name` varchar(255) DEFAULT NULL,
  `create_profile_shares_token_symbol` varchar(255) DEFAULT NULL,
  `set_ask_identity_id` smallint unsigned DEFAULT NULL,
  `set_ask_ask` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_profile_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_profile_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_proof_submitted`
--

DROP TABLE IF EXISTS `proof_manager_v1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_proof_manager_v1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_tx`
--

DROP TABLE IF EXISTS `proof_manager_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `get_challenge_sender` char(42) DEFAULT NULL,
  `get_challenge_token_id` bigint unsigned DEFAULT NULL,
  `get_challenge_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `get_challenge_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_tx_contract_id` (`to_id`),
  KEY `fk_proof_manager_v1_tx_get_challenge_asset_contract_id` (`get_challenge_asset_contract_id`),
  KEY `fk_proof_manager_v1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_get_challenge_asset_contract_id` FOREIGN KEY (`get_challenge_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_u1_proof_submitted`
--

DROP TABLE IF EXISTS `proof_manager_v1_u1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_u1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `state_index` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_u1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_proof_manager_v1_u1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `proof_manager_v1_u1_tx`
--

DROP TABLE IF EXISTS `proof_manager_v1_u1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proof_manager_v1_u1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `get_challenge_token_id` bigint unsigned DEFAULT NULL,
  `get_challenge_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `get_challenge_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_proof_manager_v1_u1_tx_contract_id` (`to_id`),
  KEY `fk_proof_manager_v1_u1_tx_get_challenge_asset_contract_id` (`get_challenge_asset_contract_id`),
  KEY `fk_proof_manager_v1_u1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_get_challenge_asset_contract_id` FOREIGN KEY (`get_challenge_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_proof_manager_v1_u1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_commit_submitted`
--

DROP TABLE IF EXISTS `service_agreement_v1_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_commit_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `score` int unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_commit_submitted_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_commit_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_commit_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_commit_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_proof_submitted`
--

DROP TABLE IF EXISTS `service_agreement_v1_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_proof_submitted` (
  `token_id` bigint unsigned DEFAULT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `epoch` smallint unsigned DEFAULT NULL,
  `identity_id` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_proof_submitted_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_proof_submitted_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_proof_submitted_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_proof_submitted_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_created`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_created`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_created` (
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) DEFAULT NULL,
  `hash_function_id` tinyint unsigned DEFAULT NULL,
  `start_time` int unsigned DEFAULT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `epoch_length` int unsigned DEFAULT NULL,
  `token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  `asset_contract_id` tinyint unsigned NOT NULL,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_service_agreement_v1_created_contract_id` (`contract_id`),
  KEY `fk_service_agreement_v1_created_asset_contract_id` (`asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_created_asset_contract_id` FOREIGN KEY (`asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_service_agreement_v1_created_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_extended`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_extended`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_extended` (
  `agreement_id` char(66) DEFAULT NULL,
  `epochs_number` smallint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_ervice_agreement_v1_service_agreement_v1_extended_contract_id` (`contract_id`),
  CONSTRAINT `fk_ervice_agreement_v1_service_agreement_v1_extended_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_reward_raised`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_reward_raised`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_reward_raised` (
  `agreement_id` char(66) DEFAULT NULL,
  `token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_e_agreement_v1_service_agreement_v1_reward_raised_contract_id` (`contract_id`),
  CONSTRAINT `fk_e_agreement_v1_service_agreement_v1_reward_raised_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_terminated`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_terminated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_terminated` (
  `agreement_id` char(66) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_vice_agreement_v1_service_agreement_v1_terminated_contract_id` (`contract_id`),
  CONSTRAINT `fk_vice_agreement_v1_service_agreement_v1_terminated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_service_agreement_v1_update_reward_raised`
--

DROP TABLE IF EXISTS `service_agreement_v1_service_agreement_v1_update_reward_raised`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_service_agreement_v1_update_reward_raised` (
  `agreement_id` char(66) DEFAULT NULL,
  `update_token_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_ment_v1_service_agreement_v1_update_reward_raised_contract_id` (`contract_id`),
  CONSTRAINT `fk_ment_v1_service_agreement_v1_update_reward_raised_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `service_agreement_v1_tx`
--

DROP TABLE IF EXISTS `service_agreement_v1_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `service_agreement_v1_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_tokens_asset_owner` char(42) DEFAULT NULL,
  `add_tokens_agreement_id` char(66) DEFAULT NULL,
  `add_tokens_token_amount` decimal(27,0) DEFAULT NULL,
  `add_update_tokens_asset_owner` char(42) DEFAULT NULL,
  `add_update_tokens_agreement_id` char(66) DEFAULT NULL,
  `add_update_tokens_token_amount` decimal(27,0) DEFAULT NULL,
  `create_service_agreement_asset_creator` char(42) DEFAULT NULL,
  `create_service_agreement_token_id` bigint unsigned DEFAULT NULL,
  `create_service_agreement_keyword` char(64) DEFAULT NULL,
  `create_service_agreement_hash_function_id` tinyint unsigned DEFAULT NULL,
  `create_service_agreement_epochs_number` smallint unsigned DEFAULT NULL,
  `create_service_agreement_token_amount` decimal(27,0) DEFAULT NULL,
  `create_service_agreement_score_function_id` tinyint unsigned DEFAULT NULL,
  `extend_storing_period_asset_owner` char(42) DEFAULT NULL,
  `extend_storing_agreement_id` char(66) DEFAULT NULL,
  `extend_storing_epochs_number` smallint unsigned DEFAULT NULL,
  `extend_storing_token_amount` decimal(27,0) DEFAULT NULL,
  `send_proof_token_id` bigint unsigned DEFAULT NULL,
  `send_proof_keyword` char(64) DEFAULT NULL,
  `send_proof_hash_function_id` tinyint unsigned DEFAULT NULL,
  `send_proof_epoch` smallint unsigned DEFAULT NULL,
  `send_proof_proof` varchar(1000) DEFAULT NULL,
  `send_proof_chunk_hash` char(66) DEFAULT NULL,
  `submit_commit_token_id` bigint unsigned DEFAULT NULL,
  `submit_commit_keyword` char(64) DEFAULT NULL,
  `submit_commit_hash_function_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_epoch` smallint unsigned DEFAULT NULL,
  `terminate_agreement_asset_owner` char(42) DEFAULT NULL,
  `terminate_agreement_agreement_id` char(66) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `create_service_agreement_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `send_proof_asset_contract_id` tinyint unsigned DEFAULT NULL,
  `submit_commit_asset_contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_service_agreement_v1_tx_contract_id` (`to_id`),
  KEY `fk_service_agreement_v1_tx_create_asset_contract_id` (`create_service_agreement_asset_contract_id`),
  KEY `fk_service_agreement_v1_tx_send_proof_asset_contract_id` (`send_proof_asset_contract_id`),
  KEY `fk_service_agreement_v1_tx_submit_commit_asset_contract_id` (`submit_commit_asset_contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_create_asset_contract_id` FOREIGN KEY (`create_service_agreement_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_send_proof_asset_contract_id` FOREIGN KEY (`send_proof_asset_contract_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_service_agreement_v1_tx_submit_commit_asset_contract_id` FOREIGN KEY (`submit_commit_asset_contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_node_added`
--

DROP TABLE IF EXISTS `sharding_table_node_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_node_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `ask` decimal(27,0) DEFAULT NULL,
  `stake` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_node_added_contract_id` (`contract_id`),
  CONSTRAINT `fk_sharding_table_node_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_node_removed`
--

DROP TABLE IF EXISTS `sharding_table_node_removed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_node_removed` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_node_removed_contract_id` (`contract_id`),
  CONSTRAINT `fk_sharding_table_node_removed_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sharding_table_tx`
--

DROP TABLE IF EXISTS `sharding_table_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sharding_table_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `push_back_identity_id` smallint unsigned DEFAULT NULL,
  `push_front_identity_id` smallint unsigned DEFAULT NULL,
  `remove_node_identity_id` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_sharding_table_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_sharding_table_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_commit_submitted`
--

DROP TABLE IF EXISTS `staging_commit_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_commit_submitted` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `hash_function_id` tinyint unsigned NOT NULL,
  `epoch` smallint unsigned NOT NULL,
  `score` int unsigned NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `rank` smallint DEFAULT NULL,
  `estimated_earnings_any_epoch` decimal(27,18) DEFAULT NULL,
  `estimated_earnings_1st_epoch_only` decimal(27,18) DEFAULT NULL,
  `commit_any_epoch` bit(1) DEFAULT NULL,
  `commit_1st_epoch` bit(1) DEFAULT NULL,
  `commit_any_epoch_incl_out_of_top3` bit(1) DEFAULT NULL,
  `commit_1st_epoch_incl_out_of_top3` bit(1) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`,`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_sp_update_staging1` (`block_number`,`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`score`,`transaction_index`),
  KEY `idx_sp_update_staging2` (`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`),
  KEY `v_nodes_stats_hourly_7d` (`block_date`,`identity_id`,`block_ts_hour`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`),
  KEY `v_chart_earnings_payouts_daily` (`block_date`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`),
  KEY `v_nodes_assets` (`identity_id`,`token_id`,`asset_contract_id`,`epoch`),
  KEY `v_nodes_stats_hourly_7d_avgnode` (`block_date`,`block_ts_hour`,`estimated_earnings_any_epoch`,`estimated_earnings_1st_epoch_only`,`commit_any_epoch`,`commit_1st_epoch`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_proof_submitted`
--

DROP TABLE IF EXISTS `staging_proof_submitted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_proof_submitted` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `epoch` smallint unsigned NOT NULL,
  `identity_id` smallint unsigned NOT NULL,
  `transaction_index` smallint NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `contract_id` tinyint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `value` decimal(27,18) NOT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`,`token_id`,`asset_contract_id`,`block_number`,`transaction_index`),
  UNIQUE KEY `idx_sp_update_staging1` (`block_number`,`token_id`,`asset_contract_id`,`epoch`,`identity_id`,`value`,`transaction_index`),
  KEY `v_nodes_stats_hourly_7d` (`block_date`,`identity_id`,`block_ts_hour`,`value`),
  KEY `v_chart_earnings_payouts_daily` (`block_date`,`value`),
  KEY `v_nodes_assets` (`identity_id`,`token_id`,`asset_contract_id`,`epoch`,`value`),
  KEY `v_nodes_stats_hourly_7d_avgnode` (`block_date`,`block_ts_hour`,`value`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_pub`
--

DROP TABLE IF EXISTS `staging_pub`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_pub` (
  `asset_contract_id` tinyint unsigned NOT NULL,
  `token_id` bigint unsigned NOT NULL,
  `keyword` char(64) NOT NULL,
  `size` int unsigned NOT NULL,
  `triples_number` mediumint unsigned NOT NULL,
  `chunks_number` mediumint unsigned NOT NULL,
  `hash_function_id` tinyint unsigned NOT NULL,
  `epochs_number` smallint unsigned NOT NULL,
  `epoch_length` int unsigned NOT NULL,
  `token_amount` decimal(27,18) NOT NULL,
  `bid` decimal(27,18) NOT NULL,
  `transaction_hash` char(66) NOT NULL,
  `transaction_index` smallint unsigned NOT NULL,
  `block_number` int unsigned NOT NULL,
  `block_timestamp` int unsigned NOT NULL,
  `block_ts` datetime GENERATED ALWAYS AS (convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC')) STORED,
  `block_date` date GENERATED ALWAYS AS (cast(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)) STORED NOT NULL,
  `block_ts_hour` datetime GENERATED ALWAYS AS (date_format(convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00')) STORED NOT NULL,
  `state_index` smallint unsigned NOT NULL,
  `state` char(66) NOT NULL,
  `previous_states` varchar(8000) DEFAULT NULL,
  `from` char(42) NOT NULL,
  `owner` char(42) DEFAULT NULL,
  `winners` varchar(2300) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`token_id`,`asset_contract_id`),
  KEY `idx_v_pubs_stats` (`block_date`,`size`,`epochs_number`,`token_amount`,`bid`),
  KEY `idx_v_pubs_stats_hourly` (`block_date`,`block_ts_hour`,`size`,`epochs_number`,`token_amount`,`bid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci PACK_KEYS=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staging_stake`
--

DROP TABLE IF EXISTS `staging_stake`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staging_stake` (
  `identity_id` smallint unsigned NOT NULL,
  `block_date` date NOT NULL,
  `block_ts_hour` datetime NOT NULL,
  `stake_change` decimal(27,18) DEFAULT NULL,
  `stake` decimal(27,18) DEFAULT NULL,
  `ask` decimal(27,18) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`,`block_ts_hour`),
  UNIQUE KEY `v_nodes` (`block_date`,`block_ts_hour`,`identity_id`,`stake`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_accumulated_operator_fee_increased`
--

DROP TABLE IF EXISTS `staking_accumulated_operator_fee_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_accumulated_operator_fee_increased` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `old_accumulated_operator_fee` decimal(27,0) DEFAULT NULL,
  `new_accumulated_operator_fee` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_accumulated_operator_fee_increased_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_accumulated_operator_fee_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_accumulated_operator_fee_updated`
--

DROP TABLE IF EXISTS `staking_accumulated_operator_fee_updated`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_accumulated_operator_fee_updated` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `operator_fee` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_accumulated_operator_fee_updated_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_accumulated_operator_fee_updated_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_reward_added`
--

DROP TABLE IF EXISTS `staking_reward_added`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_reward_added` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `reward_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_reward_added_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`reward_amount`),
  CONSTRAINT `fk_staking_reward_added_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_increased`
--

DROP TABLE IF EXISTS `staking_stake_increased`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_increased` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `old_stake` decimal(27,0) DEFAULT NULL,
  `new_stake` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_increased_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`new_stake`,`old_stake`),
  CONSTRAINT `fk_staking_stake_increased_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_withdrawal_started`
--

DROP TABLE IF EXISTS `staking_stake_withdrawal_started`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_withdrawal_started` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `old_stake` decimal(27,0) DEFAULT NULL,
  `new_stake` decimal(27,0) DEFAULT NULL,
  `stake_amount` decimal(27,0) DEFAULT NULL,
  `withdrawal_period_end` bigint unsigned DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_withdrawal_started_contract_id` (`contract_id`),
  CONSTRAINT `fk_staking_stake_withdrawal_started_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_stake_withdrawn`
--

DROP TABLE IF EXISTS `staking_stake_withdrawn`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_stake_withdrawn` (
  `identity_id` smallint unsigned DEFAULT NULL,
  `node_id` char(94) DEFAULT NULL,
  `staker` char(42) DEFAULT NULL,
  `withdrawn_stake_amount` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_stake_withdrawn_contract_id` (`contract_id`),
  KEY `idx_sp_staging1` (`block_number`,`identity_id`,`withdrawn_stake_amount`),
  CONSTRAINT `fk_staking_stake_withdrawn_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `staking_tx`
--

DROP TABLE IF EXISTS `staking_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `staking_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `add_reward_agreement_id` char(66) DEFAULT NULL,
  `add_reward_identity_id` smallint unsigned DEFAULT NULL,
  `add_reward_reward_amount` decimal(27,0) DEFAULT NULL,
  `add_stake_identity_id` smallint unsigned DEFAULT NULL,
  `add_stake_stake_amount` decimal(27,0) DEFAULT NULL,
  `set_operator_fee_identity_id` smallint unsigned DEFAULT NULL,
  `set_operator_fee_operator_fee` decimal(27,0) DEFAULT NULL,
  `slash_identity_id` smallint unsigned DEFAULT NULL,
  `start_stake_withdrawal_identity_id` smallint unsigned DEFAULT NULL,
  `start_stake_withdrawal_shares_to_burn` decimal(27,0) DEFAULT NULL,
  `withdraw_stake_identity_id` smallint unsigned DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_staking_tx_contract_id` (`to_id`),
  CONSTRAINT `fk_staking_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `stats_node`
--

DROP TABLE IF EXISTS `stats_node`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `stats_node` (
  `identity_id` smallint unsigned NOT NULL,
  `block_date` date NOT NULL,
  `node_stake` decimal(27,18) DEFAULT '0.000000000000000000',
  `commit_any_epoch` int unsigned DEFAULT '0',
  `commit_1st_epoch` int unsigned DEFAULT '0',
  `estimated_earnings_any_epoch` decimal(27,18) DEFAULT '0.000000000000000000',
  `estimated_earnings_1st_epoch_only` decimal(27,18) DEFAULT '0.000000000000000000',
  `payouts` decimal(27,18) DEFAULT '0.000000000000000000',
  `proofs_submitted` int unsigned DEFAULT '0',
  `ask` decimal(27,18) DEFAULT '0.000000000000000000',
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`identity_id`,`block_date`),
  KEY `block_date` (`block_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `stats_pub`
--

DROP TABLE IF EXISTS `stats_pub`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `stats_pub` (
  `block_date` date NOT NULL,
  `block_ts_hour` datetime NOT NULL,
  `total_size` int unsigned DEFAULT '0',
  `total_epochs` int unsigned DEFAULT '0',
  `total_bid` decimal(27,18) DEFAULT '0.000000000000000000',
  `total_pubs` int unsigned DEFAULT '0',
  `total_trac_spent` decimal(27,18) DEFAULT '0.000000000000000000',
  `private_pubs` int unsigned DEFAULT '0',
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`block_date`,`block_ts_hour`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sync_status`
--

DROP TABLE IF EXISTS `sync_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sync_status` (
  `parameter` varchar(255) DEFAULT NULL,
  `block_num` int DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_approval`
--

DROP TABLE IF EXISTS `token_approval`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_approval` (
  `owner` char(42) DEFAULT NULL,
  `spender` char(42) DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_token_approval_contract_id` (`contract_id`),
  CONSTRAINT `fk_token_approval_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_transfer`
--

DROP TABLE IF EXISTS `token_transfer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_transfer` (
  `from` char(42) DEFAULT NULL,
  `to` char(42) DEFAULT NULL,
  `value` decimal(27,0) DEFAULT NULL,
  `log_index` smallint unsigned DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `block_number` int unsigned DEFAULT NULL,
  `contract_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`,`log_index`),
  KEY `fk_token_transfer_contract_id` (`contract_id`),
  CONSTRAINT `fk_token_transfer_contract_id` FOREIGN KEY (`contract_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `token_tx`
--

DROP TABLE IF EXISTS `token_tx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `token_tx` (
  `block_number` int unsigned DEFAULT NULL,
  `chain_id` smallint unsigned DEFAULT NULL,
  `creates` char(42) DEFAULT NULL,
  `from` char(42) DEFAULT NULL,
  `gas` int unsigned DEFAULT NULL,
  `gas_price` bigint unsigned DEFAULT NULL,
  `hash` char(66) DEFAULT NULL,
  `transaction_index` smallint unsigned DEFAULT NULL,
  `function` varchar(255) DEFAULT NULL,
  `transfer_to` char(42) DEFAULT NULL,
  `transfer_amount` decimal(27,0) DEFAULT NULL,
  `transfer_from_from` char(42) DEFAULT NULL,
  `transfer_from_to` char(42) DEFAULT NULL,
  `transfer_from_amount` decimal(27,0) DEFAULT NULL,
  `allowance_owner` char(42) DEFAULT NULL,
  `allowance_spender` char(42) DEFAULT NULL,
  `approve_spender` char(42) DEFAULT NULL,
  `approve_amount` decimal(27,0) DEFAULT NULL,
  `mint_to` char(42) DEFAULT NULL,
  `mint_amount` decimal(27,0) DEFAULT NULL,
  `decrease_allowance_subtracted_value` decimal(27,0) DEFAULT NULL,
  `increase_allowance_added_value` decimal(27,0) DEFAULT NULL,
  `to_id` tinyint unsigned DEFAULT NULL,
  `increase_allowance_spender_id` tinyint unsigned DEFAULT NULL,
  `decrease_allowance_spender_id` tinyint unsigned DEFAULT NULL,
  UNIQUE KEY `idx_block_tx` (`block_number`,`transaction_index`),
  KEY `fk_token_tx_contract_id` (`to_id`),
  KEY `fk_token_tx_increase_allowance_spender_id` (`increase_allowance_spender_id`),
  KEY `fk_token_tx_decrease_allowance_spender_id` (`decrease_allowance_spender_id`),
  CONSTRAINT `fk_token_tx_contract_id` FOREIGN KEY (`to_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_token_tx_decrease_allowance_spender_id` FOREIGN KEY (`decrease_allowance_spender_id`) REFERENCES `contracts` (`contract_id`),
  CONSTRAINT `fk_token_tx_increase_allowance_spender_id` FOREIGN KEY (`increase_allowance_spender_id`) REFERENCES `contracts` (`contract_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Temporary view structure for view `v_asset_history`
--

DROP TABLE IF EXISTS `v_asset_history`;
/*!50001 DROP VIEW IF EXISTS `v_asset_history`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_asset_history` AS SELECT 
 1 AS `event`,
 1 AS `token_id`,
 1 AS `asset_contract`,
 1 AS `log_index`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `address`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `block_ts`,
 1 AS `block_date`,
 1 AS `block_ts_hour`,
 1 AS `minted_state`,
 1 AS `minted_keyword`,
 1 AS `minted_hash_function_id`,
 1 AS `minted_start_time`,
 1 AS `minted_epochs_number`,
 1 AS `minted_epoch_length`,
 1 AS `minted_token_amount`,
 1 AS `minted_size`,
 1 AS `minted_triples_number`,
 1 AS `minted_chunks_number`,
 1 AS `transfer_from`,
 1 AS `transfer_to`,
 1 AS `state_updated_state_index`,
 1 AS `state_updated_update_token_amount`,
 1 AS `state_updated_finalized`,
 1 AS `update_cancelled_state_index`,
 1 AS `update_cancelled_returned_token_amount`,
 1 AS `storing_period_extended_epochs_number`,
 1 AS `storing_period_extended_token_amount`,
 1 AS `asset_update_payment_increased_token_amount`,
 1 AS `payment_increased_token_amount`,
 1 AS `burnt_returned_token_amount`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes`
--

DROP TABLE IF EXISTS `v_nodes`;
/*!50001 DROP VIEW IF EXISTS `v_nodes`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `createProfile_adminWallet`,
 1 AS `createProfile_adminWallet_hash`,
 1 AS `current_adminWallet_hashes`,
 1 AS `createProfile_blockNumber`,
 1 AS `createProfile_txHash`,
 1 AS `createProfile_ts`,
 1 AS `createProfile_date`,
 1 AS `nodeAgeDays`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_activity_last1min`
--

DROP TABLE IF EXISTS `v_nodes_activity_last1min`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last1min`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_activity_last1min` AS SELECT 
 1 AS `chain_id`,
 1 AS `nodeId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_activity_last24h`
--

DROP TABLE IF EXISTS `v_nodes_activity_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_activity_last24h` AS SELECT 
 1 AS `chain_id`,
 1 AS `nodeId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_barebone`
--

DROP TABLE IF EXISTS `v_nodes_barebone`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_barebone`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_barebone` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `createProfile_adminWallet`,
 1 AS `createProfile_adminWallet_hash`,
 1 AS `current_adminWallet_hashes`,
 1 AS `createProfile_blockNumber`,
 1 AS `createProfile_txHash`,
 1 AS `createProfile_ts`,
 1 AS `createProfile_date`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stake`
--

DROP TABLE IF EXISTS `v_nodes_stake`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stake`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stake` AS SELECT 
 1 AS `nodeId`,
 1 AS `date`,
 1 AS `nodeStake`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_daily`
--

DROP TABLE IF EXISTS `v_nodes_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_daily` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_daily`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_daily`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_daily` AS SELECT 
 1 AS `date`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_hourly_7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_hourly_7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_hourly_7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_hourly_7d` AS SELECT 
 1 AS `date`,
 1 AS `datetime`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_monthly`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_monthly` AS SELECT 
 1 AS `date`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `cumulativeCommitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `cumulativeCommitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `proofsSubmitted`,
 1 AS `cumulativeProofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_grouped_total`
--

DROP TABLE IF EXISTS `v_nodes_stats_grouped_total`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_total`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_grouped_total` AS SELECT 
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `estimatedEarnings2plusEpochs`,
 1 AS `commitsSubmitted1stEpochOnly`,
 1 AS `commitsSubmitted2plusEpochs`,
 1 AS `payouts`,
 1 AS `proofsSubmitted`,
 1 AS `combinedNodesStake`,
 1 AS `avgNodeStake`,
 1 AS `nodesWithMoreThan50kStake`,
 1 AS `nodesWithLessThan50kStake`,
 1 AS `combinedAsk`,
 1 AS `avgAsk`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_hourly_7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_hourly_7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_hourly_7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_hourly_7d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `datetime`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last1h`
--

DROP TABLE IF EXISTS `v_nodes_stats_last1h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last1h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last1h` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last24h`
--

DROP TABLE IF EXISTS `v_nodes_stats_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last24h` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last30d`
--

DROP TABLE IF EXISTS `v_nodes_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last30d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_last7d`
--

DROP TABLE IF EXISTS `v_nodes_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_last7d` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_latest`
--

DROP TABLE IF EXISTS `v_nodes_stats_latest`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_latest`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_latest` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `nodeStake`,
 1 AS `nodeAsk`,
 1 AS `cumulativePayouts`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_nodes_stats_monthly`
--

DROP TABLE IF EXISTS `v_nodes_stats_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_nodes_stats_monthly` AS SELECT 
 1 AS `nodeId`,
 1 AS `networkId`,
 1 AS `tokenName`,
 1 AS `tokenSymbol`,
 1 AS `nodeOwner`,
 1 AS `nodeGroup`,
 1 AS `date`,
 1 AS `nodeStake`,
 1 AS `pubsCommited`,
 1 AS `pubsCommited1stEpochOnly`,
 1 AS `cumulativePubsCommited`,
 1 AS `cumulativePubsCommited1stEpochOnly`,
 1 AS `estimatedEarnings`,
 1 AS `estimatedEarnings1stEpochOnly`,
 1 AS `cumulativeEstimatedEarnings`,
 1 AS `cumulativeEstimatedEarnings1stEpochOnly`,
 1 AS `payouts`,
 1 AS `cumulativePayouts`,
 1 AS `ask`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs`
--

DROP TABLE IF EXISTS `v_pubs`;
/*!50001 DROP VIEW IF EXISTS `v_pubs`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs` AS SELECT 
 1 AS `contract_address`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `UAL`,
 1 AS `chain_id`,
 1 AS `chain_name`,
 1 AS `size`,
 1 AS `triples_number`,
 1 AS `chunks_number`,
 1 AS `hash_function_id`,
 1 AS `epochs_number`,
 1 AS `epoch_length`,
 1 AS `epoch_length_days`,
 1 AS `token_amount`,
 1 AS `bid`,
 1 AS `transaction_hash`,
 1 AS `transaction_index`,
 1 AS `block_number`,
 1 AS `block_timestamp`,
 1 AS `block_ts`,
 1 AS `block_date`,
 1 AS `block_ts_hour`,
 1 AS `state_index`,
 1 AS `state`,
 1 AS `previous_states`,
 1 AS `publisher`,
 1 AS `publisher_short`,
 1 AS `owner`,
 1 AS `winners`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_activity_last1min`
--

DROP TABLE IF EXISTS `v_pubs_activity_last1min`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last1min`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_activity_last1min` AS SELECT 
 1 AS `chain_id`,
 1 AS `signer`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_activity_last24h`
--

DROP TABLE IF EXISTS `v_pubs_activity_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_activity_last24h` AS SELECT 
 1 AS `chain_id`,
 1 AS `signer`,
 1 AS `UAL`,
 1 AS `datetime`,
 1 AS `assetContractId`,
 1 AS `tokenId`,
 1 AS `transactionHash`,
 1 AS `eventName`,
 1 AS `eventValue1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_daily`
--

DROP TABLE IF EXISTS `v_pubs_stats_daily`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_daily`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_daily` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_hourly`
--

DROP TABLE IF EXISTS `v_pubs_stats_hourly`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_hourly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_hourly` AS SELECT 
 1 AS `date`,
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last1h`
--

DROP TABLE IF EXISTS `v_pubs_stats_last1h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last1h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last1h` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last24h`
--

DROP TABLE IF EXISTS `v_pubs_stats_last24h`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last24h`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last24h` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last30d`
--

DROP TABLE IF EXISTS `v_pubs_stats_last30d`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last30d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last30d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_last7d`
--

DROP TABLE IF EXISTS `v_pubs_stats_last7d`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last7d`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_last7d` AS SELECT 
 1 AS `datetime`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_monthly`
--

DROP TABLE IF EXISTS `v_pubs_stats_monthly`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_monthly`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_monthly` AS SELECT 
 1 AS `date`,
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`,
 1 AS `cumulativeTotalTracSpent`,
 1 AS `cumulativePubs`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_pubs_stats_total`
--

DROP TABLE IF EXISTS `v_pubs_stats_total`;
/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_total`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_pubs_stats_total` AS SELECT 
 1 AS `avgPubSize`,
 1 AS `avgEpochsNumber`,
 1 AS `avgPubPrice`,
 1 AS `avgBid`,
 1 AS `totalPubs`,
 1 AS `totalTracSpent`,
 1 AS `privatePubsPercentage`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_notif_contracts_change`
--

DROP TABLE IF EXISTS `v_sys_notif_contracts_change`;
/*!50001 DROP VIEW IF EXISTS `v_sys_notif_contracts_change`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_notif_contracts_change` AS SELECT 
 1 AS `block_date`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_date`
--

DROP TABLE IF EXISTS `v_sys_staging_date`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_date`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_date` AS SELECT 
 1 AS `number`,
 1 AS `timestamp`,
 1 AS `block_date`,
 1 AS `block_ts`,
 1 AS `block_ts_hour`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_commit_submitted`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_commit_submitted`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_commit_submitted`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_commit_submitted` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `identity_id`,
 1 AS `keyword`,
 1 AS `hash_function_id`,
 1 AS `epoch`,
 1 AS `score`,
 1 AS `state_index`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `contract_id`,
 1 AS `block_number`,
 1 AS `timestamp`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_proof_submitted`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_proof_submitted`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_proof_submitted`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_proof_submitted` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `epoch`,
 1 AS `identity_id`,
 1 AS `transaction_index`,
 1 AS `transaction_hash`,
 1 AS `contract_id`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `value`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_insert_new_pub`
--

DROP TABLE IF EXISTS `v_sys_staging_insert_new_pub`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_pub`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_insert_new_pub` AS SELECT 
 1 AS `asset_contract_id`,
 1 AS `token_id`,
 1 AS `keyword`,
 1 AS `size`,
 1 AS `triples_number`,
 1 AS `chunks_number`,
 1 AS `hash_function_id`,
 1 AS `epochs_number`,
 1 AS `epoch_length`,
 1 AS `token_amount`,
 1 AS `bid`,
 1 AS `transaction_hash`,
 1 AS `transaction_index`,
 1 AS `block_number`,
 1 AS `timestamp`,
 1 AS `state_index`,
 1 AS `state`,
 1 AS `previous_states`,
 1 AS `from`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_staging_update_dead`
--

DROP TABLE IF EXISTS `v_sys_staging_update_dead`;
/*!50001 DROP VIEW IF EXISTS `v_sys_staging_update_dead`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_staging_update_dead` AS SELECT 
 1 AS `sync_delta`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_sys_sync_date`
--

DROP TABLE IF EXISTS `v_sys_sync_date`;
/*!50001 DROP VIEW IF EXISTS `v_sys_sync_date`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_sys_sync_date` AS SELECT 
 1 AS `number`,
 1 AS `timestamp`,
 1 AS `block_date`,
 1 AS `block_ts`,
 1 AS `block_ts_hour`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_tx_all`
--

DROP TABLE IF EXISTS `v_tx_all`;
/*!50001 DROP VIEW IF EXISTS `v_tx_all`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `v_tx_all` AS SELECT 
 1 AS `block_number`,
 1 AS `hash`,
 1 AS `table`*/;
SET character_set_client = @saved_cs_client;

--
-- Dumping events for database 'sync_gnosis_mainnet'
--
/*!50106 SET @save_time_zone= @@TIME_ZONE */ ;
/*!50106 DROP EVENT IF EXISTS `update_staging_tables` */;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8mb4 */ ;;
/*!50003 SET character_set_results = utf8mb4 */ ;;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `update_staging_tables` ON SCHEDULE EVERY 30 SECOND STARTS '2023-07-04 08:54:21' ON COMPLETION NOT PRESERVE ENABLE DO CALL sp_update_staging() */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
DELIMITER ;
/*!50106 SET TIME_ZONE= @save_time_zone */ ;

--
-- Dumping routines for database 'sync_gnosis_mainnet'
--
/*!50003 DROP PROCEDURE IF EXISTS `sp_clear_all_tables` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_clear_all_tables`(IN procedure_input varchar(250))
BEGIN
    IF procedure_input = 'just do it' THEN
        DELETE FROM `contracts`;
        DELETE FROM `sync_status`;
        DELETE FROM `block`;
        DELETE FROM `other_tx`;
		DELETE FROM `assertion_tx`;
		DELETE FROM `assertion_assertion_created`;
		DELETE FROM `commit_manager_v1_tx`;
		DELETE FROM `commit_manager_v1_commit_submitted`;
		DELETE FROM `commit_manager_v1_u1_tx`;
		DELETE FROM `commit_manager_v1_u1_commit_submitted`;
        DELETE FROM `commit_manager_v1_u1_state_finalized`;
		DELETE FROM `content_asset_tx`;
		DELETE FROM `content_asset_asset_burnt`;
		DELETE FROM `content_asset_asset_minted`;
		DELETE FROM `content_asset_payment_increased`;
		DELETE FROM `content_asset_asset_state_updated`;
		DELETE FROM `content_asset_asset_state_update_canceled`;
		DELETE FROM `content_asset_asset_storing_period_extended`;
		DELETE FROM `content_asset_asset_update_payment_increased`;
		DELETE FROM `hub_tx`;
		DELETE FROM `hub_new_contract`;
		DELETE FROM `hub_asset_storage_changed`;
		DELETE FROM `hub_contract_changed`;
		DELETE FROM `hub_new_asset_storage`;
		DELETE FROM `identity_tx`;
		DELETE FROM `identity_identity_created`;
		DELETE FROM `identity_identity_deleted`;
		DELETE FROM `identity_storage_tx`;
		DELETE FROM `identity_storage_key_added`;
		DELETE FROM `identity_storage_key_removed`;
		DELETE FROM `profile_tx`;
		DELETE FROM `profile_ask_updated`;
		DELETE FROM `profile_profile_created`;
		DELETE FROM `profile_profile_deleted`;
		DELETE FROM `proof_manager_v1_tx`;
		DELETE FROM `proof_manager_v1_proof_submitted`;
		DELETE FROM `proof_manager_v1_u1_tx`;
		DELETE FROM `proof_manager_v1_u1_proof_submitted`;
		DELETE FROM `staking_tx`;
		DELETE FROM `staking_accumulated_operator_fee_increased`;
		DELETE FROM `staking_accumulated_operator_fee_updated`;
		DELETE FROM `staking_stake_increased`;
		DELETE FROM `staking_stake_withdrawal_started`;
		DELETE FROM `staking_stake_withdrawn`;
        DELETE FROM `staking_reward_added`;
		DELETE FROM `sharding_table_tx`;
		DELETE FROM `sharding_table_node_added`;
		DELETE FROM `sharding_table_node_removed`;
		DELETE FROM `service_agreement_v1_tx`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_created`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_extended`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_reward_raised`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_terminated`;
		DELETE FROM `service_agreement_v1_service_agreement_v1_update_reward_raised`;
		DELETE FROM `service_agreement_v1_proof_submitted`;
        DELETE FROM `service_agreement_v1_commit_submitted`;
		DELETE FROM `token_tx`;
		DELETE FROM `token_approval`;
		DELETE FROM `token_transfer`;
        
        -- Output a success message
        SELECT 'Data deleted successfully.';
    ELSE
        -- Output a message if the input does not match the condition
        SELECT 'Invalid procedure input.';
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_delete_from_tables_starting_block` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delete_from_tables_starting_block`(IN block_num int)
BEGIN
	
    DELETE FROM `block` where `number`>=block_num;
	DELETE FROM `other_tx` where block_number >= block_num;
	DELETE FROM `assertion_tx` where block_number >= block_num;
	DELETE FROM `assertion_assertion_created` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_tx` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_commit_submitted` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_u1_tx` where block_number >= block_num;
	DELETE FROM `commit_manager_v1_u1_commit_submitted` where block_number >= block_num;
    DELETE FROM `commit_manager_v1_u1_state_finalized` where block_number >= block_num;
	DELETE FROM `content_asset_tx` where block_number >= block_num;
	DELETE FROM `content_asset_asset_burnt` where block_number >= block_num;
	DELETE FROM `content_asset_asset_minted` where block_number >= block_num;
	DELETE FROM `content_asset_payment_increased` where block_number >= block_num;
	DELETE FROM `content_asset_asset_state_updated` where block_number >= block_num;
	DELETE FROM `content_asset_asset_state_update_canceled` where block_number >= block_num;
	DELETE FROM `content_asset_asset_storing_period_extended` where block_number >= block_num;
	DELETE FROM `content_asset_asset_update_payment_increased` where block_number >= block_num;
	DELETE FROM `hub_tx` where block_number >= block_num;
	DELETE FROM `hub_new_contract` where block_number >= block_num;
	DELETE FROM `hub_asset_storage_changed` where block_number >= block_num;
	DELETE FROM `hub_contract_changed` where block_number >= block_num;
	DELETE FROM `hub_new_asset_storage` where block_number >= block_num;
	DELETE FROM `identity_tx` where block_number >= block_num;
	DELETE FROM `identity_identity_created` where block_number >= block_num;
	DELETE FROM `identity_identity_deleted` where block_number >= block_num;
	DELETE FROM `identity_storage_tx` where block_number >= block_num;
	DELETE FROM `identity_storage_key_added` where block_number >= block_num;
	DELETE FROM `identity_storage_key_removed` where block_number >= block_num;
	DELETE FROM `profile_tx` where block_number >= block_num;
	DELETE FROM `profile_ask_updated` where block_number >= block_num;
	DELETE FROM `profile_profile_created` where block_number >= block_num;
	DELETE FROM `profile_profile_deleted` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_tx` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_proof_submitted` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_u1_tx` where block_number >= block_num;
	DELETE FROM `proof_manager_v1_u1_proof_submitted` where block_number >= block_num;
	DELETE FROM `staking_tx` where block_number >= block_num;
	DELETE FROM `staking_accumulated_operator_fee_increased` where block_number >= block_num;
	DELETE FROM `staking_accumulated_operator_fee_updated` where block_number >= block_num;
	DELETE FROM `staking_stake_increased` where block_number >= block_num;
	DELETE FROM `staking_stake_withdrawal_started` where block_number >= block_num;
	DELETE FROM `staking_stake_withdrawn` where block_number >= block_num;
    DELETE FROM `staking_reward_added` where block_number >= block_num;
	DELETE FROM `sharding_table_tx` where block_number >= block_num;
	DELETE FROM `sharding_table_node_added` where block_number >= block_num;
	DELETE FROM `sharding_table_node_removed` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_tx` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_created` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_extended` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_reward_raised` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_terminated` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_service_agreement_v1_update_reward_raised` where block_number >= block_num;
	DELETE FROM `service_agreement_v1_proof_submitted` where block_number >= block_num;
    DELETE FROM `service_agreement_v1_commit_submitted` where block_number >= block_num;
	DELETE FROM `token_tx` where block_number >= block_num;
	DELETE FROM `token_approval` where block_number >= block_num;
	DELETE FROM `token_transfer` where block_number >= block_num;
    DELETE FROM `content_asset_storage_transfer` where block_number >= block_num;
    DELETE FROM `content_asset_storage_tx` where block_number >= block_num;
    update sync_status set block_num = (block_num-1) where parameter = 'last_synced_block';

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_list_contracts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_list_contracts`(IN b1 int, IN win int)
BEGIN
#SET @b1 = 3151717;
#SET @win = 100;    
with 
new_and_changed as (
select contract_name, block_number, new_contract_address from hub_new_contract
UNION ALL select contract_name, block_number, new_contract_address from hub_contract_changed
UNION ALL select contract_name, block_number, new_contract_address  from hub_new_asset_storage
UNION ALL select contract_name, block_number, new_contract_address  from hub_asset_storage_changed
),

cte_a as (SELECT 
row_number() over (partition by contract_name order by block_number desc) as rn
, case when b1 <= block_number then 1 else 0 end as 'range_starts_before'
, case when b1 + win > block_number then 1 else 0 end as 'range_ends_after'
, contract_name, new_contract_address as 'contract_address', block_number
from new_and_changed
where block_number < b1 + win
),

cte_b as (select 
case 
    when range_starts_before = 1 and range_ends_after = 1 then 'block_range_hit_new_contract'
    when rn = 1 then 'latest_contract'
    end as 'label'
,block_number,contract_name,contract_address#, rn, range_starts_before, range_ends_after
from cte_a),

cte_c as (
select 
contract_address
,contract_name
,case when Lead(`label`,1) over (partition by contract_name order by block_number) = 'block_range_hit_new_contract' or `label` in ('latest_contract','block_range_hit_new_contract') then 1 else 0 end as 'final'
,Lead(`label`,1) over (partition by contract_name order by block_number) as 'p'
,`label`
,block_number
from cte_b
),

cte_d as (
select distinct contract_address,contract_name from (
select contract_address,contract_name from cte_c where final=1) as t 
UNION select contract_address, 'Hub' from contracts where contract_id=1
)

select a.contract_address, a.contract_name, b.contract_id
from cte_d as a
left join contracts as b on a.contract_address=b.contract_address
;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_standard_modification_event` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_standard_modification_event`(IN tableName varchar(255))
BEGIN

SET @q = CONCAT('DROP INDEX `PRIMARY` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('DROP INDEX `idx_block_num` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName, ' add column contract_id tinyint UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;
                 
SET @q = CONCAT('UPDATE ', tableName, ' as a JOIN contracts as b ON a.address = b.contract_address SET a.contract_id = b.contract_id');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ',tableName, ' ADD CONSTRAINT fk_',right(tableName,49),'_contract_id FOREIGN KEY (contract_id) REFERENCES contracts (contract_id)');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
            'ALTER TABLE ', tableName,
            ' DROP COLUMN `event`,',
            ' DROP COLUMN `transaction_hash`,',
            ' DROP COLUMN `block_hash`,',
            ' DROP COLUMN `block_ts`,',
            ' DROP COLUMN `block_date`,',
            ' DROP COLUMN `block_ts_hour`,',
            ' DROP COLUMN `updated_at`,',
            ' DROP COLUMN `created_at`,',
            ' DROP COLUMN `block_timestamp`,',
            ' MODIFY COLUMN `log_index` SMALLINT UNSIGNED,',
            ' MODIFY COLUMN `transaction_index` SMALLINT UNSIGNED,',
            ' MODIFY COLUMN `block_number` INT UNSIGNED,',
			' DROP COLUMN `address`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_standard_modification_tx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_standard_modification_tx`(IN tableName varchar(255))
BEGIN

SET @q = CONCAT('DROP INDEX `PRIMARY` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('DROP INDEX `idx_block_num` ON ', tableName);
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'ALTER TABLE ', tableName,
    ' DROP COLUMN `block_hash`,',
    ' DROP COLUMN `input`,',
    ' DROP COLUMN `nonce`,',
    ' DROP COLUMN `public_key`,',
    ' DROP COLUMN `r`,',
    ' DROP COLUMN `raw`,',
    ' DROP COLUMN `s`,',
    ' DROP COLUMN `standard_v`,',
    ' DROP COLUMN `type`,',
    ' DROP COLUMN `v`,',
    ' DROP COLUMN `value`,',
    ' DROP COLUMN `block_ts`,',
    ' DROP COLUMN `block_date`,',
    ' DROP COLUMN `block_ts_hour`,',
    ' DROP COLUMN `created_at`,',
    ' DROP COLUMN `block_timestamp`,',
    ' DROP COLUMN `updated_at`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName,' ADD COLUMN to_id TINYINT UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'UPDATE ', tableName, ' AS a',
    ' JOIN contracts AS b ON a.`to` = b.contract_address',
    ' SET a.to_id = b.contract_id');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ',tableName, ' ADD CONSTRAINT fk_',right(tableName,49),'_contract_id FOREIGN KEY (`to_id`) REFERENCES contracts (contract_id)');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT('ALTER TABLE ', tableName, ' DROP COLUMN `to`');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;

SET @q = CONCAT(
    'ALTER TABLE ', tableName,
    ' MODIFY COLUMN `block_number` INT UNSIGNED,',
    ' MODIFY COLUMN `chain_id` SMALLINT UNSIGNED,',
    ' MODIFY COLUMN `creates` CHAR(42),',
    ' MODIFY COLUMN `from` CHAR(42),',
    ' MODIFY COLUMN `gas` INT UNSIGNED,',
    ' MODIFY COLUMN `gas_price` INT UNSIGNED,',
    ' MODIFY COLUMN `hash` CHAR(66),',
    ' MODIFY COLUMN `transaction_index` SMALLINT UNSIGNED');
PREPARE stmt FROM @q; EXECUTE stmt; DEALLOCATE PREPARE stmt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_update_contracts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_update_contracts`()
BEGIN
INSERT INTO `contracts` (contract_address)
WITH
all_contacts as (
select distinct contract_address from (
SELECT contract_address from contracts
UNION ALL SELECT new_contract_address from hub_new_asset_storage
UNION ALL SELECT new_contract_address from hub_new_contract
UNION ALL SELECT new_contract_address from hub_contract_changed 
UNION ALL SELECT new_contract_address from hub_asset_storage_changed) as a),

new_contracts as (
select a.contract_address from all_contacts as a
left join contracts as b on a.contract_address=b.contract_address
where b.contract_address is null)

select contract_address from new_contracts;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_update_staging` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_update_staging`()
BEGIN
    -- Declare a handler for exceptions
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
		GET DIAGNOSTICS CONDITION 1
		@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
		SELECT @p1 as RETURNED_SQLSTATE  , @p2 as MESSAGE_TEXT;
	
        -- Handle the error here, rollback the transaction, log, etc.
        ROLLBACK;
    END;

START TRANSACTION;
SET @staging = (select block_num from sync_status where parameter ='staging_table' FOR UPDATE);#UNCOMMENT
SET @sync = (select block_num from sync_status where parameter ='last_synced_block' FOR UPDATE);   

SET @stats_start_window = (select block_ts_hour from v_sys_staging_date FOR UPDATE);
SET @stats_start_window_date = (select block_date from v_sys_staging_date FOR UPDATE); 
SET @stats_end_window = (select block_ts_hour from v_sys_sync_date FOR UPDATE);
SET @stats_end_window_date = (select block_date from v_sys_sync_date FOR UPDATE);
SET SESSION group_concat_max_len = 1000000;
#select @stats_start_window
#select @stats_end_window 
COMMIT;


#if i have new date to put into staging tables
IF @staging < @sync THEN
	START TRANSACTION;

	#insert all proofs
	INSERT INTO `staging_proof_submitted` #insert new submit proof rows into staging table
	(asset_contract_id, token_id, keyword, epoch, identity_id
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp ,`value`)
	select * from v_sys_staging_insert_new_proof_submitted where block_number>@staging and block_number<=@sync;
   
	#insert all submit commit for state_index=0, commits for for state_index>0 are excluded from here
	INSERT INTO `staging_commit_submitted` #insert new submit commit rows into staging table
	(asset_contract_id, token_id, identity_id, keyword, hash_function_id, epoch, score, state_index
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp)
	select * from v_sys_staging_insert_new_commit_submitted where block_number>@staging and block_number<=@sync;
  
	#insert all new pubs
	INSERT INTO `staging_pub` #insert new pub rows into staging table
	(asset_contract_id, token_id, keyword, size, triples_number, chunks_number, hash_function_id
	, epochs_number, epoch_length, token_amount,bid, transaction_hash, transaction_index, block_number
	, block_timestamp,state_index, state, previous_states, `from`)
	select * from v_sys_staging_insert_new_pub where block_number>@staging and block_number<=@sync;
    

    
	#update owner, grab latest owner of the asset and update value in staging table
	with
	owner_1 as (select token_id, contract_id, `to` as 'owner'
	,row_number() over (partition by token_id, contract_id order by block_number desc, transaction_index desc) as rn
	from content_asset_storage_transfer
	where block_number>@staging and block_number<=@sync   ),
	owner_2 as (select token_id,contract_id, `owner` from owner_1 where rn=1)

	update staging_pub as a
	INNER JOIN owner_2 as b on a.asset_contract_id=b.contract_id and a.token_id=b.token_id
	set a.`owner`=b.`owner`;
   
   	
	#add new blank rows into stats_pub table
	INSERT INTO stats_pub (`block_date`, `block_ts_hour`)
	WITH
	RECURSIVE new_datetime_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_ts_hour`), interval 1 hour) FROM stats_pub), @stats_start_window) AS timestamp_val #generate timetable
	UNION ALL SELECT TIMESTAMPADD(HOUR, 1, timestamp_val) FROM new_datetime_0 
	WHERE timestamp_val < @stats_end_window)
    	
    SELECT cast(timestamp_val as date), timestamp_val FROM new_datetime_0
    where timestamp_val<=@stats_end_window;

	#grab new pubs and update stats_pub table, i do ignore change in pub proparties due to pub update here
	#these changes are too small to make a difference, but it's significantly simplifies the process
	WITH
	new_pubs_data as (select 
	cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) as 'block_date'
	,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(ifnull(d.create_asset_size,0)) as 'total_size'
	,sum(a.epochs_number) as 'total_epochs'
	,sum(cast(cast(a.token_amount as decimal(45,18)) / epochs_number / 3 / (d.create_asset_size / 1024) / 1000000000000000000 as decimal(27,18))) as 'total_bid' 
	,count(token_id) as 'total_pubs'
	,cast(cast(sum(a.token_amount) as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as 'total_trac_spent'
	,sum(case when d.create_asset_size=145 then 1 else 0 end) as 'private_pubs'
	from service_agreement_v1_service_agreement_v1_created as a
	left join content_asset_tx as d on a.block_number=d.block_number and a.transaction_index=d.transaction_index
	left join `block` as bb on a.block_number=bb.`number`
	where a.block_number>@staging and a.block_number<=@sync
	group by 
	cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date)
	,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00'))

	update stats_pub as a
	INNER JOIN new_pubs_data as b on a.`block_date`=b.`block_date` and a.`block_ts_hour`=b.`block_ts_hour`
	set
		a.total_size = a.total_size + b.total_size,
		a.total_epochs = a.total_epochs + b.total_epochs,
		a.total_bid = a.total_bid + b.total_bid,
		a.total_pubs = a.total_pubs + b.total_pubs,
		a.total_trac_spent = a.total_trac_spent + b.total_trac_spent,
		a.private_pubs = a.private_pubs + b.private_pubs;

  
	#insert new blank rows into node_stat table
	INSERT INTO stats_node (`identity_id`, `block_date`)
	WITH 
    RECURSIVE new_date_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_date`), interval 1 day) FROM stats_node), @stats_start_window_date)  AS date_val 
    UNION ALL SELECT DATE_ADD(date_val, INTERVAL 1 DAY) FROM new_date_0 
    WHERE date_val < @stats_end_window_date),
	
	identities as (select a.identity_id, cast(convert_tz(from_unixtime(`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) as 'block_date'
	from profile_profile_created as a 
    left join `block` as bb on a.block_number=bb.`number` where a.block_number<=@sync),
	new_date_2 as (SELECT a.identity_id, b.date_val  FROM identities as a CROSS JOIN new_date_0 as b WHERE b.date_val >= a.block_date)
    
    select identity_id , date_val as 'block_date' from new_date_2 where date_val <= @stats_end_window_date;
     
	#in case we have finalized updates for assets i'd need to update pubs table with new values and also update previous_states column
	# and update submit commits staging
	IF (select count(block_number) from commit_manager_v1_u1_state_finalized where block_number>@staging and block_number<=@sync) > 0 THEN
		with
		finalized_updates as (select 
		a.asset_contract_id,a.token_id,a.keyword
		,ifnull(d.update_asset_state_size,0) as `size`
        ,ifnull(d.update_asset_state_triples_number,0) as `triples_number`
        ,ifnull(d.update_asset_state_chunks_number,0) as `chunks_number`
		,a.hash_function_id
		,cast(cast(ifnull(d.update_asset_state_update_token_amount,0) as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as token_amount
		,d.`hash` as 'transaction_hash',b.transaction_index,b.block_number,bb.`timestamp` as 'block_timestamp'
		,a.state,a.state_index
		,row_number() over (partition by a.token_id, a.asset_contract_id order by a.state_index desc) as rn
		from commit_manager_v1_u1_state_finalized as a
		left join content_asset_asset_state_updated as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.state_index=b.state_index
		left join `block` as bb on b.block_number=bb.`number`
        left join content_asset_tx as d on b.block_number=d.block_number and b.transaction_index=d.transaction_index
        where a.block_number>@staging and a.block_number<=@sync),

		updates_except_latest_grp as (select asset_contract_id ,token_id,sum(token_amount) as 'token_amount'
		,group_concat(concat(',["state_idx":',state_index, ',"state":"',state,
							'","size":',size, ',"triples":',triples_number,
							',"chunks":',chunks_number, ',"hash_f":',hash_function_id,
							',"tokens":',token_amount, ',"tx_hash":"',transaction_hash,
							'","block":',block_number,',"block_ts_u":',block_timestamp,
							',"block_ts":"',convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),
							'"]') order by state_index asc) as `previous_states`
		from finalized_updates where rn>1
        group by asset_contract_id,token_id),

		data_to_update_pubs as (select a.asset_contract_id,a.token_id,a.size,a.triples_number,a.chunks_number,a.hash_function_id
		,a.token_amount + ifnull(b.token_amount,0) as token_amount,a.state_index, a.state,b.previous_states
		from finalized_updates as a
		left join updates_except_latest_grp as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id where a.rn=1)
		
        #updateing staging_pub with new post asset update values 
		update staging_pub as a
			INNER JOIN data_to_update_pubs as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
		SET
			a.previous_states = 
                CONCAT(ifnull(a.previous_states,''),
						(case when a.previous_states is not null then ',' else '' end),
                        '["state_idx":',a.state_index, ',"state":"',a.state,
						'","size":',a.size, ',"triples":',a.triples_number,
						',"chunks":',a.chunks_number, ',"hash_f":',a.hash_function_id,
						',"tokens":',a.token_amount, ',"tx_hash":"',a.transaction_hash,
						'","block":',a.block_number,',"block_tsu":',a.block_timestamp,
						',"block_ts":"',convert_tz(from_unixtime(`block_timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'"]',
                        ifnull(b.previous_states,''))
			,a.size = b.size,a.triples_number = b.triples_number
			,a.chunks_number = b.chunks_number,a.hash_function_id = b.hash_function_id
			,a.token_amount = a.token_amount+b.token_amount,a.state_index = b.state_index,a.state = b.state;

		#staging_pub is updated according to finalized pub data
        #but before i remove irrelevant commits from staging_commit_submitted i need to adjust stats_node table
        #and remove these commits stats
        WITH
        affected_commits as (
        select distinct asset_contract_id, token_id, epoch
        from commit_manager_v1_u1_state_finalized
		where block_number>@staging and block_number<=@sync),
        
        commit_stats_to_subtract_updated_pubs as ( select 
		b.identity_id,b.block_date
		,sum(b.commit_any_epoch) as 'commit_any_epoch'
		,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
		,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
		,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
		from affected_commits as a
		inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch
		group by b.identity_id, b.block_date)
        
    
        update stats_node as a
        inner join commit_stats_to_subtract_updated_pubs as b
        on a.block_date=b.block_date and a.identity_id=b.identity_id
        set
			a.commit_any_epoch = a.commit_any_epoch - ifnull(b.commit_any_epoch,0),
            a.commit_1st_epoch = a.commit_1st_epoch - ifnull(b.commit_1st_epoch,0),
            a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - ifnull(b.estimated_earnings_any_epoch,0),
            a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - ifnull(b.estimated_earnings_1st_epoch_only,0);
				
        #removing submitCommits for previous state index, they are no longer valid as this token_id-epoch could have different winners
        delete a from staging_commit_submitted as a
        INNER JOIN (select distinct asset_contract_id, token_id, epoch
					from commit_manager_v1_u1_state_finalized
					where block_number>@staging and block_number<=@sync) as b 
					ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch;
		
	END IF;
	 
	#adding latest submitCommits for updated assets
	INSERT INTO `staging_commit_submitted` 
	(asset_contract_id, token_id, identity_id, keyword, hash_function_id, epoch, score, state_index
	,transaction_index, transaction_hash, contract_id, block_number, block_timestamp)
	with
	post_update_commits as (select
	a.asset_contract_id, a.token_id, identity_id, keyword, hash_function_id, a.epoch, a.score
	,a.transaction_index, d.`hash` as 'transaction_hash', a.contract_id, a.block_number, bb.`timestamp` as 'block_timestamp'
	,dense_rank() over (partition by a.token_id, a.asset_contract_id, a.epoch order by a.state_index desc) as dr, a.state_index
	from commit_manager_v1_u1_commit_submitted as a
	left join `block` as bb on a.block_number=bb.`number`
	left join commit_manager_v1_u1_tx as d on a.block_number=d.block_number and a.transaction_index=d.transaction_index    
	where a.state_index>0 and a.block_number>@staging and a.block_number<=@sync),
	
	post_update_commits_latest as (select
	a.asset_contract_id, a.token_id, a.identity_id, a.keyword, a.hash_function_id, a.epoch, a.score, a.state_index
	,a.transaction_index, a.transaction_hash, a.contract_id, a.block_number, a.block_timestamp
	from post_update_commits as a where a.dr=1)
	select * from post_update_commits_latest;
    
	
    #before i update staging_commit_submitted i need to substract old values from stats table, then update staging_commit_submitted, then add new stats values
	WITH
    pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized 
    where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted 
    where block_number>@staging),
    
    commit_stats_to_subtract_updated_pubs as (select
	b.identity_id,b.block_date
	,sum(b.commit_any_epoch) as 'commit_any_epoch'
	,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch 
    group by b.identity_id,b.block_date)
    
	update stats_node as a
	inner join commit_stats_to_subtract_updated_pubs as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.commit_any_epoch = a.commit_any_epoch - ifnull(b.commit_any_epoch,0),
		a.commit_1st_epoch = a.commit_1st_epoch - ifnull(b.commit_1st_epoch,0),
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - ifnull(b.estimated_earnings_any_epoch,0),
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - ifnull(b.estimated_earnings_1st_epoch_only,0);
   
       
	#updating earnings in staging_commit_submitted
	WITH
	pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted where block_number>@staging), #need to update commits as new commits for this assets arrived
    
    pubs_to_update_token_amount as (select 
	a.asset_contract_id,a.token_id, cast(a.token_amount as decimal(27,18)) as 'token_amount'
	,a.epochs_number
	from staging_pub as a
	INNER JOIN (select distinct asset_contract_id, token_id from pubs_epochs_to_update) as b ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id),
   
    #adding earnings to commits
	update_commits_0 as (select
	a.asset_contract_id,a.token_id, a.block_number, a.transaction_index
	,row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc, block_number asc, transaction_index asc) as `rank`
	,case when (row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc,block_number asc, transaction_index asc)) <= 3 
		then c.token_amount / 3 / (c.epochs_number)
		else 0 end as estimated_earnings_any_epoch
	,case when a.epoch = 0 and (row_number() over (partition by token_id, asset_contract_id, a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 
		then c.token_amount / 3 / (c.epochs_number)
		else 0 end as estimated_earnings_1st_epoch_only
	,case when (row_number() over (partition by token_id, asset_contract_id,  a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 then 1
		else 0 end as commit_any_epoch 
	,case when a.epoch = 0 and (row_number() over (partition by token_id, asset_contract_id,  a.epoch order by score desc, block_number asc, transaction_index asc)) <= 3 then 1
		else 0 end as commit_1st_epoch
	,1 as commit_any_epoch_incl_out_of_top3
	,case when a.epoch = 0 then 1 else 0 end as commit_1st_epoch_incl_out_of_top3
	from staging_commit_submitted as a
	INNER JOIN pubs_epochs_to_update as b ON a.asset_contract_id=b.asset_contract_id and a.token_id=b.token_id and a.epoch=b.epoch
	left join pubs_to_update_token_amount as c on a.asset_contract_id=c.asset_contract_id and a.token_id=c.token_id)


	#update commits records
	update staging_commit_submitted as a 
		INNER JOIN update_commits_0 as b
			ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.block_number=b.block_number and a.transaction_index=b.transaction_index
	SET
	a.`rank` = b.`rank`,
	a.`estimated_earnings_any_epoch` = b.`estimated_earnings_any_epoch`,
	a.`estimated_earnings_1st_epoch_only` = b.`estimated_earnings_1st_epoch_only`,
	a.`commit_any_epoch` = b.`commit_any_epoch`,
	a.`commit_1st_epoch` = b.`commit_1st_epoch`,
	a.`commit_any_epoch_incl_out_of_top3` = b.`commit_any_epoch_incl_out_of_top3`,
	a.`commit_1st_epoch_incl_out_of_top3` = b.`commit_1st_epoch_incl_out_of_top3`; 

	
    WITH
	#now i can add new values to stats_node table
    pubs_epochs_to_update as (
	select asset_contract_id, token_id, epoch #need to update commits as asset was updated
	from commit_manager_v1_u1_state_finalized 
    where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select asset_contract_id,token_id, epoch 
    from staging_commit_submitted 
    where block_number>@staging),
    
    commit_stats_to_add_updated_pubs as (select
	b.identity_id,b.block_date
	,sum(b.commit_any_epoch) as 'commit_any_epoch'
	,sum(b.commit_1st_epoch) as 'commit_1st_epoch'
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch 
    group by b.identity_id,b.block_date)
    
	update stats_node as a
	inner join commit_stats_to_add_updated_pubs as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.commit_any_epoch = a.commit_any_epoch + b.commit_any_epoch,
		a.commit_1st_epoch = a.commit_1st_epoch + b.commit_1st_epoch,
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch + b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only + b.estimated_earnings_1st_epoch_only;
   
   
   
	#if i have new proof i need to update estimated earnings in staging_commit_submitted
    #but before that i need to substract from stats table current values
	with
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id
	from staging_proof_submitted where block_number>@staging),
   
	commit_stats_to_subtract_proof_arrived as (select
	b.identity_id,b.block_date
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_identity_id_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id=b.identity_id
	group by  b.identity_id,b.block_date)
    
    update stats_node as a
	inner join commit_stats_to_subtract_proof_arrived as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch - b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only - b.estimated_earnings_1st_epoch_only;

   
	# now update staging_commit_submitted with earnings from proofs
	with
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id, `value` as 'paidout'
	from staging_proof_submitted where block_number>@staging)
       
    update staging_commit_submitted as a 
		INNER JOIN pubs_epochs_identity_id_to_update as b
		ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id = b.identity_id
	SET
	a.`estimated_earnings_any_epoch` = b.paidout,
	a.`estimated_earnings_1st_epoch_only` = (case when a.epoch=0 then b.paidout else a.`estimated_earnings_1st_epoch_only` end);
   

    #now i have updated data in staging_commit_submitted, time to update stats_node table
	WITH
	pubs_epochs_identity_id_to_update as (
	select asset_contract_id,token_id, epoch, identity_id
	from staging_proof_submitted where block_number>@staging),

	commit_stats_to_add_proof_arrived as (select
	b.identity_id,b.block_date
	,sum(b.estimated_earnings_any_epoch) as 'estimated_earnings_any_epoch'
	,sum(b.estimated_earnings_1st_epoch_only) as 'estimated_earnings_1st_epoch_only'
	from pubs_epochs_identity_id_to_update as a
	inner join staging_commit_submitted as b on a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id and a.epoch=b.epoch and a.identity_id=b.identity_id
	group by  b.identity_id,b.block_date)
   
	update stats_node as a
	inner join commit_stats_to_add_proof_arrived as b
	on a.block_date=b.block_date and a.identity_id=b.identity_id
	set
		a.estimated_earnings_any_epoch = a.estimated_earnings_any_epoch + b.estimated_earnings_any_epoch,
		a.estimated_earnings_1st_epoch_only = a.estimated_earnings_1st_epoch_only + b.estimated_earnings_1st_epoch_only;
   


	#updating payouts in stats_node table in case proof arrived
	with
	payouts_to_update as (select
    block_date,identity_id,sum(`value`) as paidout, count(`value`) as proofs_submitted
    from staging_proof_submitted 
    where block_number>@staging
    group by block_date, identity_id)
    
    update stats_node as a
    INNER JOIN payouts_to_update as b on a.block_date=b.block_date and a.identity_id=b.identity_id
    set a.payouts = a.payouts + b.paidout,
		a.proofs_submitted = a.proofs_submitted + b.proofs_submitted;
    
            
	#once i have updated list of winners i need to update staging_pub table
	WITH
	pubs_to_update as (
	select distinct asset_contract_id, token_id
	from commit_manager_v1_u1_state_finalized
	where block_number>@staging and block_number<=@sync
	UNION DISTINCT
	select distinct asset_contract_id,token_id 
	from staging_commit_submitted where block_number>@staging),
   
	pub_commits_1 as (select a.asset_contract_id, a.token_id, a.epoch
	,CONCAT('[',group_concat(a.identity_id order by a.identity_id),']') as winners_epoch
	from staging_commit_submitted as a
	INNER JOIN pubs_to_update as b ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
	where a.commit_any_epoch=1
	group by a.asset_contract_id, a.token_id, a.epoch),

	pub_commits_2 as (select asset_contract_id, token_id ,CONCAT('[',group_concat(winners_epoch order by epoch),']') as winners
	from pub_commits_1 group by asset_contract_id, token_id)
   
	UPDATE staging_pub as a
		INNER JOIN (select distinct asset_contract_id,token_id from staging_commit_submitted where block_number>@staging) as b
			ON a.token_id=b.token_id and a.asset_contract_id=b.asset_contract_id
		LEFT JOIN pub_commits_2 as c
            ON a.token_id=c.token_id and a.asset_contract_id=c.asset_contract_id
	SET 
	a.winners = c.winners;
   
   
    #this block is about updateing staging_stake table
    #adding new rows (if needed) and updateing staging_stake table
    #delete from staging_stake
	INSERT INTO staging_stake (identity_id, block_date, block_ts_hour, stake_change, stake)
	WITH
	RECURSIVE new_datetime_0 AS ( 
	SELECT IFNULL((SELECT date_add(MAX(`block_ts_hour`), interval 1 hour) FROM staging_stake), @stats_start_window) AS timestamp_val #generate timetable
	UNION ALL SELECT TIMESTAMPADD(HOUR, 1, timestamp_val) FROM new_datetime_0 
	WHERE timestamp_val < @stats_end_window),
    identities as (select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	from profile_profile_created as a left join `block` as bb on a.block_number=bb.`number`),
	staking_2 as (SELECT a.identity_id, b.timestamp_val as 'block_ts_hour' FROM identities as a CROSS JOIN new_datetime_0 as b WHERE b.timestamp_val >= a.block_ts_hour)
    
	#adding new rows to staging_stake table
	select a.identity_id, cast(a.block_ts_hour as date) as 'block_date' ,a.block_ts_hour, 0 as 'stake_change', Null  as 'stake' 
    from staking_2 as a
    WHERE a.block_ts_hour<=@stats_end_window;

	WITH #summarize new stake change data by identity_id and block_ts_hour, and update staging_stake
	stake_change_1 as (
	select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(case when old_stake is null then new_stake else new_stake - old_stake end) as 'stake'  
	from staking_stake_increased as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')
	
    UNION ALL select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,sum(reward_amount) 
	from staking_reward_added as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')
	
    UNION ALL select a.identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00') as 'block_ts_hour'
	,-1 * sum(withdrawn_stake_amount) 
	from staking_stake_withdrawn as a left join `block` as bb on a.block_number=bb.`number` where a.block_number>@staging and a.block_number<=@sync
	group by identity_id, DATE_FORMAT(CONVERT_TZ(FROM_UNIXTIME(bb.`timestamp`), 'SYSTEM', 'UTC'),'%Y-%m-%d %H:00:00')),

	stake_change_2 as (select identity_id, cast(block_ts_hour as date) as 'block_date', block_ts_hour
	#,cast(sum(stake) / 1000000000000000000 as decimal(27,18)) as 'stake_change' from stake_change_1 
    ,cast(cast(sum(stake) as decimal (45,18)) / 1000000000000000000 as decimal(27,18)) as 'stake_change' from stake_change_1 
	group by identity_id, cast(block_ts_hour as date), block_ts_hour)
	
	UPDATE staging_stake as a
	INNER JOIN stake_change_2 as b on a.identity_id=b.identity_id and a.block_date = b.block_date and a.block_ts_hour = b.block_ts_hour
	SET a.stake_change = a.stake_change+b.stake_change;
		
    WITH
	updated_stake as (select identity_id,block_date, block_ts_hour
    ,case when FIRST_VALUE(stake) OVER (partition by identity_id order by block_ts_hour asc) is Null #covers initial population of the table
		       then SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_date, block_ts_hour)
          else FIRST_VALUE(stake) OVER (partition by identity_id order by block_ts_hour asc)
		       + SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour)
               - FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc)
          end as 'stake'
    /*,stake_change
    ,`stake` as 'stake_original'
    ,FIRST_VALUE(stake) OVER ( partition by identity_id order by block_ts_hour asc) as 'first_val_stake'
    ,FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc) as 'first_val_stake_change'
    ,SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour) AS cumulative_stake_change
    ,FIRST_VALUE(stake) OVER ( partition by identity_id order by block_ts_hour asc)
		+ SUM(stake_change) OVER (PARTITION BY identity_id ORDER BY block_ts_hour)
        - FIRST_VALUE(stake_change) OVER ( partition by identity_id order by block_ts_hour asc)
        as 'stake2'*/
	from staging_stake
	where block_date>=cast(date_add(@stats_start_window,interval -1 day) as date) and block_ts_hour>=date_add(@stats_start_window,interval -1 hour))
    
	UPDATE staging_stake as a
	INNER JOIN updated_stake as b on a.identity_id=b.identity_id and a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour
	SET a.stake = b.stake;
    
    #now update Ask in staging_stake table
    #update staging_stake set ask=Null
    WITH
    ask_1 as (select 
    cast(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS block_date
    ,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') as block_ts_hour
    ,row_number() OVER (PARTITION BY a.identity_id,date_format(convert_tz(from_unixtime(bb.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') ORDER BY bb.`timestamp` desc )  AS rn
	,a.identity_id
	,cast(cast(a.ask as decimal(45,18)) / 1000000000000000000 as decimal(27,18)) as 'ask'
	from profile_ask_updated a 
	left join block bb on a.block_number = bb.`number`
    where a.block_number>@staging and a.block_number<=@sync),
	ask_2 as (select identity_id, block_date, block_ts_hour, ask from ask_1 where rn = 1)
    
    update staging_stake as a
    inner join ask_2 as b on a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour and a.identity_id=b.identity_id
    set a.ask=b.ask;
    
    #fill gaps in Ask table
	WITH 
    ask_3 as (SELECT identity_id,block_date,block_ts_hour,ask
	,count(ask) OVER (PARTITION BY identity_id ORDER BY block_date asc, block_ts_hour asc )  AS value_partition 
    FROM staging_stake 
    where block_date>=@stats_start_window_date and block_ts_hour>=@stats_start_window),
        
    ask_4 as (select identity_id,block_date,block_ts_hour,ask
    ,first_value(ask) OVER (PARTITION BY identity_id, value_partition ORDER BY block_date,block_ts_hour)  AS ask_result 
    from ask_3)
	
    update staging_stake as a
    inner join ask_4 as b on a.identity_id=b.identity_id and a.block_date=b.block_date and a.block_ts_hour=b.block_ts_hour
    set a.ask=b.ask_result
    where a.ask is null;

   
    #now i can update node_stats nodeStake values based on staging_stake table
    WITH 
    latest_stake_ask_0 as (select block_date,identity_id, stake, ask
    ,row_number() over (partition by block_date, identity_id order by block_ts_hour desc) as rn
    from staging_stake
    where block_date>=@stats_start_window_date and block_ts_hour>=@stats_start_window),
    latest_stake_ask_1 as (select block_date,identity_id, stake, ask from latest_stake_ask_0 where rn=1)
    
    update stats_node as a
    inner join latest_stake_ask_1 as b on a.identity_id=b.identity_id and a.block_date=b.block_date
    set a.ask = b.ask, a.node_stake=b.stake;
     

    #update sync_status with new staging block_number
    UPDATE sync_status
    SET block_num = @sync
    WHERE parameter = 'staging_table';

   COMMIT;
END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Final view structure for view `_raw_v_nodes_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_daily` AS with `nodeids_dates_0` as (select `staging_stake`.`identity_id` AS `nodeId`,`staging_stake`.`block_date` AS `date_val`,`staging_stake`.`stake` AS `stake`,row_number() OVER (PARTITION BY `staging_stake`.`identity_id`,`staging_stake`.`block_date` ORDER BY `staging_stake`.`block_ts_hour` desc )  AS `rn` from `staging_stake`), `nodeids_dates` as (select `nodeids_dates_0`.`nodeId` AS `nodeId`,`nodeids_dates_0`.`date_val` AS `date_val`,`nodeids_dates_0`.`rn` AS `rn`,`nodeids_dates_0`.`stake` AS `stake` from `nodeids_dates_0` where (`nodeids_dates_0`.`rn` = 1)), `ask_1` as (select row_number() OVER (PARTITION BY `a`.`identity_id`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) ORDER BY `bb`.`timestamp` desc )  AS `rn`,`a`.`identity_id` AS `identity_id`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,`a`.`ask` AS `ask` from (`profile_ask_updated` `a` left join `block` `bb` on((`a`.`block_number` = `bb`.`number`)))), `ask_2` as (select `ask_1`.`identity_id` AS `identity_id`,`ask_1`.`block_date` AS `block_date`,`ask_1`.`ask` AS `ask` from `ask_1` where (`ask_1`.`rn` = 1)), `node_stats_0` as (select `a`.`nodeId` AS `nodeId`,`a`.`date_val` AS `date_val`,max(`a`.`stake`) AS `nodeStake`,sum(`c`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`c`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(sum(`c`.`estimated_earnings_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `estimated_earnings_any_epoch_cum`,sum(sum(`c`.`estimated_earnings_1st_epoch_only`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `estimated_earnings_1st_epoch_only_cum`,sum(`c`.`commit_any_epoch`) AS `commit_any_epoch`,sum(sum(`c`.`commit_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `commit_any_epoch_cum`,sum(`c`.`commit_1st_epoch`) AS `commit_1st_epoch`,sum(sum(`c`.`commit_1st_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `commit_1st_epoch_cum`,`e`.`paidout` AS `paidout`,sum(`e`.`paidout`) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `paidout_cum` from ((`nodeids_dates` `a` left join `staging_commit_submitted` `c` on(((`a`.`nodeId` = `c`.`identity_id`) and (`a`.`date_val` = `c`.`block_date`)))) left join (select `staging_proof_submitted`.`identity_id` AS `identity_id`,`staging_proof_submitted`.`block_date` AS `block_date`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` group by `staging_proof_submitted`.`identity_id`,`staging_proof_submitted`.`block_date`) `e` on(((`a`.`nodeId` = `e`.`identity_id`) and (`a`.`date_val` = `e`.`block_date`)))) group by `a`.`nodeId`,`a`.`date_val`), `node_stats_1` as (select `n`.`nodeId` AS `nodeId`,`n`.`date_val` AS `date_val`,`n`.`nodeStake` AS `nodeStake`,`n`.`estimated_earnings_any_epoch` AS `estimated_earnings_any_epoch`,`n`.`estimated_earnings_1st_epoch_only` AS `estimated_earnings_1st_epoch_only`,`n`.`estimated_earnings_any_epoch_cum` AS `estimated_earnings_any_epoch_cum`,`n`.`estimated_earnings_1st_epoch_only_cum` AS `estimated_earnings_1st_epoch_only_cum`,`n`.`commit_any_epoch` AS `commit_any_epoch`,`n`.`commit_any_epoch_cum` AS `commit_any_epoch_cum`,`n`.`commit_1st_epoch` AS `commit_1st_epoch`,`n`.`commit_1st_epoch_cum` AS `commit_1st_epoch_cum`,`n`.`paidout` AS `paidout`,`n`.`paidout_cum` AS `paidout_cum`,`ask_2`.`ask` AS `ask`,count(`ask_2`.`ask`) OVER (PARTITION BY `n`.`nodeId` ORDER BY `n`.`date_val` )  AS `value_partition` from (`node_stats_0` `n` left join `ask_2` on(((`n`.`nodeId` = `ask_2`.`identity_id`) and (`n`.`date_val` = `ask_2`.`block_date`))))), `node_stats_2` as (select `n`.`nodeId` AS `nodeId`,`n`.`date_val` AS `date_val`,`n`.`nodeStake` AS `nodeStake`,`n`.`estimated_earnings_any_epoch` AS `estimated_earnings_any_epoch`,`n`.`estimated_earnings_1st_epoch_only` AS `estimated_earnings_1st_epoch_only`,`n`.`estimated_earnings_any_epoch_cum` AS `estimated_earnings_any_epoch_cum`,`n`.`estimated_earnings_1st_epoch_only_cum` AS `estimated_earnings_1st_epoch_only_cum`,`n`.`commit_any_epoch` AS `commit_any_epoch`,`n`.`commit_any_epoch_cum` AS `commit_any_epoch_cum`,`n`.`commit_1st_epoch` AS `commit_1st_epoch`,`n`.`commit_1st_epoch_cum` AS `commit_1st_epoch_cum`,`n`.`paidout` AS `paidout`,`n`.`paidout_cum` AS `paidout_cum`,`n`.`ask` AS `ask`,`n`.`value_partition` AS `value_partition`,first_value(`n`.`ask`) OVER (PARTITION BY `n`.`nodeId`,`n`.`value_partition` ORDER BY `n`.`date_val` )  AS `ask_result` from `node_stats_1` `n`) select `a`.`nodeId` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date_val` AS `date`,`a`.`nodeStake` AS `nodeStake`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly`,ifnull(`a`.`commit_any_epoch_cum`,0) AS `cumulativePubsCommited`,ifnull(`a`.`commit_1st_epoch_cum`,0) AS `cumulativePubsCommited1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch_cum`,0) AS `cumulativeEstimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only_cum`,0) AS `cumulativeEstimatedEarnings1stEpochOnly`,ifnull(`a`.`paidout`,0) AS `payouts`,ifnull(`a`.`paidout_cum`,0) AS `cumulativePayouts`,cast((cast(`a`.`ask_result` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `ask` from (`node_stats_2` `a` left join `v_nodes_barebone` `b` on((`a`.`nodeId` = `b`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_last30d` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_last7d` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_last7d_raw`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_last7d_raw`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_last7d_raw` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts` + interval -(168) hour) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_nodes_stats_latest`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_nodes_stats_latest`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_nodes_stats_latest` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` group by `staging_commit_submitted`.`identity_id`), `nodes_1` as (select `a`.`identity_id` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`commits` `a` left join `paidout` `b` on((`a`.`identity_id` = `b`.`identity_id`))) left join `v_nodes` `c` on((`a`.`identity_id` = `c`.`nodeId`)))) select `nodes_1`.`nodeId` AS `nodeId`,`nodes_1`.`networkId` AS `networkId`,`nodes_1`.`tokenName` AS `tokenName`,`nodes_1`.`tokenSymbol` AS `tokenSymbol`,`nodes_1`.`nodeOwner` AS `nodeOwner`,`nodes_1`.`nodeGroup` AS `nodeGroup`,`nodes_1`.`nodeStake` AS `nodeStake`,`nodes_1`.`nodeAsk` AS `nodeAsk`,`nodes_1`.`cumulativePayouts` AS `cumulativePayouts`,`nodes_1`.`estimatedEarnings` AS `estimatedEarnings`,`nodes_1`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`nodes_1`.`pubsCommited` AS `pubsCommited`,`nodes_1`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly` from `nodes_1` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_daily` AS with recursive `dates_cte` as (select (select cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) from `block` order by `block`.`number` limit 1) AS `date_val` union all select (`dates_cte`.`date_val` + interval 1 day) AS `DATE_ADD(date_val, INTERVAL 1 DAY)` from `dates_cte` where (`dates_cte`.`date_val` < (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`))), `dates_cte_2` as (select `a`.`date_val` AS `date_val` from (`dates_cte` `a` left join (select distinct `staging_pub`.`block_date` AS `block_date` from `staging_pub`) `b` on((`a`.`date_val` = `b`.`block_date`))) where ((`b`.`block_date` = 0) or (`b`.`block_date` is null))) select `a`.`block_date` AS `date`,avg(`a`.`size`) AS `avgPubSize`,avg(`a`.`epochs_number`) AS `avgEpochsNumber`,avg(`a`.`token_amount`) AS `avgPubPrice`,avg(`a`.`bid`) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,sum(`a`.`token_amount`) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` group by `a`.`block_date` union all select `dates_cte_2`.`date_val` AS `date_val`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0` from `dates_cte_2` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_hourly`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_hourly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_hourly` AS with recursive `dates_cte0` as (select (select date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') from `block` order by `block`.`number` limit 1) AS `ts_val` union all select (`dates_cte0`.`ts_val` + interval 1 hour) AS `DATE_ADD(ts_val, INTERVAL 1 HOUR)` from `dates_cte0` where (`dates_cte0`.`ts_val` < (select `v_sys_staging_date`.`block_ts_hour` from `v_sys_staging_date`))), `dates_cte` as (select cast(`dates_cte0`.`ts_val` as date) AS `date_val`,`dates_cte0`.`ts_val` AS `ts_val` from `dates_cte0`), `dates_cte_2` as (select `a`.`date_val` AS `date_val`,`a`.`ts_val` AS `ts_val` from (`dates_cte` `a` left join (select distinct `staging_pub`.`block_date` AS `block_date`,`staging_pub`.`block_ts_hour` AS `block_ts_hour` from `staging_pub`) `b` on(((`a`.`date_val` = `b`.`block_date`) and (`a`.`ts_val` = `b`.`block_ts_hour`)))) where ((`b`.`block_date` = 0) or (`b`.`block_date` is null))) select `a`.`block_date` AS `date`,`a`.`block_ts_hour` AS `datetime`,avg(`a`.`size`) AS `avgPubSize`,avg(`a`.`epochs_number`) AS `avgEpochsNumber`,avg(`a`.`token_amount`) AS `avgPubPrice`,avg(`a`.`bid`) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,sum(`a`.`token_amount`) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` group by `a`.`block_date`,`a`.`block_ts_hour` union all select `dates_cte_2`.`date_val` AS `date_val`,`dates_cte_2`.`ts_val` AS `ts_val`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0` from `dates_cte_2` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_last24h`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_last24h` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_ts` + interval -(2) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(25) hour) from `v_sys_staging_date`)) and (`a`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(1440) minute) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_last30d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_last7d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_ts` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(10080) minute) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `_raw_v_pubs_stats_monthly`
--

/*!50001 DROP VIEW IF EXISTS `_raw_v_pubs_stats_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `_raw_v_pubs_stats_monthly` AS with recursive `dates_cte` as (select (select cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) from `block` order by `block`.`number` limit 1) AS `date_val` union all select (`dates_cte`.`date_val` + interval 1 day) AS `DATE_ADD(date_val, INTERVAL 1 DAY)` from `dates_cte` where (`dates_cte`.`date_val` < (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`))), `dates_cte_2` as (select `a`.`date_val` AS `date_val` from (`dates_cte` `a` left join (select distinct `staging_pub`.`block_date` AS `block_date` from `staging_pub`) `b` on((`a`.`date_val` = `b`.`block_date`))) where ((`b`.`block_date` = 0) or (`b`.`block_date` is null))), `daily` as (select `a`.`block_date` AS `date`,sum(`a`.`size`) AS `size`,sum(`a`.`epochs_number`) AS `epochs_number`,sum(`a`.`token_amount`) AS `token_amount`,sum(`a`.`bid`) AS `bid`,count(`a`.`token_id`) AS `totalPubs`,sum(`a`.`token_amount`) AS `totalTracSpent`,sum((case when (`a`.`size` = 145) then 1 else 0 end)) AS `privatePubs` from `staging_pub` `a` group by `a`.`block_date` union all select `dates_cte_2`.`date_val` AS `date_val`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0`,0 AS `0` from `dates_cte_2`) select date_format(`daily`.`date`,'%Y-%m-01') AS `date`,(sum(`daily`.`size`) / sum(`daily`.`totalPubs`)) AS `avgPubSize`,(sum(`daily`.`epochs_number`) / sum(`daily`.`totalPubs`)) AS `avgEpochsNumber`,(sum(`daily`.`token_amount`) / sum(`daily`.`totalPubs`)) AS `avgPubPrice`,(sum(`daily`.`bid`) / sum(`daily`.`totalPubs`)) AS `avgBid`,sum(`daily`.`totalPubs`) AS `totalPubs`,sum(`daily`.`totalTracSpent`) AS `totalTracSpent`,round(((sum(`daily`.`privatePubs`) / sum(`daily`.`totalPubs`)) * 100),0) AS `privatePubsPercentage` from `daily` group by date_format(`daily`.`date`,'%Y-%m-01') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_asset_history`
--

/*!50001 DROP VIEW IF EXISTS `v_asset_history`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_asset_history` AS select 'AssetMinted' AS `event`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`d`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,`a`.`state` AS `minted_state`,concat(`ac`.`contract_address`,`c`.`keyword`) AS `minted_keyword`,`c`.`hash_function_id` AS `minted_hash_function_id`,`c`.`start_time` AS `minted_start_time`,`c`.`epochs_number` AS `minted_epochs_number`,`c`.`epoch_length` AS `minted_epoch_length`,`c`.`token_amount` AS `minted_token_amount`,`c`.`size` AS `minted_size`,`c`.`triples_number` AS `minted_triples_number`,`c`.`chunks_number` AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((((`content_asset_asset_minted` `a` left join (select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`start_time` AS `start_time`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,`a`.`token_amount` AS `token_amount`,`b`.`create_asset_size` AS `size`,`b`.`create_asset_triples_number` AS `triples_number`,`b`.`create_asset_chunks_number` AS `chunks_number` from (`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`))))) `c` on(((`a`.`asset_contract_id` = `c`.`asset_contract_id`) and (`a`.`token_id` = `c`.`token_id`)))) left join `content_asset_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'Transfer' AS `Transfer`,`a`.`token_id` AS `token_id`,`addc`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,`a`.`from` AS `transfer_from`,`a`.`to` AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((`content_asset_storage_transfer` `a` left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `content_asset_storage_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`from` <> '0x0000000000000000000000000000000000000000') union all select 'AssetStateUpdated' AS `event`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`c`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,`a`.`state_index` AS `state_updated_state_index`,`a`.`update_token_amount` AS `state_updated_update_token_amount`,(case when (`b`.`token_id` is not null) then 'StateFinalized' end) AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from (((((`content_asset_asset_state_updated` `a` left join `commit_manager_v1_u1_state_finalized` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`) and (`a`.`state_index` = `b`.`state_index`)))) left join `content_asset_tx` `c` on(((`a`.`block_number` = `c`.`block_number`) and (`a`.`transaction_index` = `c`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetStateUpdatedCencelled' AS `AssetStateUpdatedCencelled`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,`a`.`state_index` AS `update_cancelled_state_index`,`a`.`returned_token_amount` AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_state_update_canceled` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetStoringPeriodExtended' AS `AssetStoringPeriodExtended`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,`a`.`epochs_number` AS `storing_period_extended_epochs_number`,`a`.`token_amount` AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_storing_period_extended` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetUpdatePaymentIncreased' AS `AssetUpdatePaymentIncreased`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,`a`.`token_amount` AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_asset_update_payment_increased` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetPaymentIncreased' AS `AssetPaymentIncreased`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,`a`.`token_amount` AS `payment_increased_token_amount`,NULL AS `burnt_returned_token_amount` from ((((`content_asset_payment_increased` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select 'AssetBurnt' AS `AssetBurnt`,`a`.`token_id` AS `token_id`,`ac`.`contract_address` AS `asset_contract`,`a`.`log_index` AS `log_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`addc`.`contract_address` AS `address`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,date_format(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour`,NULL AS `minted_state`,NULL AS `minted_keyword`,NULL AS `minted_hash_function_id`,NULL AS `minted_start_time`,NULL AS `minted_epochs_number`,NULL AS `minted_epoch_length`,NULL AS `minted_token_amount`,NULL AS `minted_size`,NULL AS `minted_triples_number`,NULL AS `minted_chunks_number`,NULL AS `transfer_from`,NULL AS `transfer_to`,NULL AS `state_updated_state_index`,NULL AS `state_updated_update_token_amount`,NULL AS `state_updated_finalized`,NULL AS `update_cancelled_state_index`,NULL AS `update_cancelled_returned_token_amount`,NULL AS `storing_period_extended_epochs_number`,NULL AS `storing_period_extended_token_amount`,NULL AS `asset_update_payment_increased_token_amount`,NULL AS `payment_increased_token_amount`,`a`.`returned_token_amount` AS `burnt_returned_token_amount` from ((((`content_asset_asset_burnt` `a` left join `content_asset_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `contracts` `ac` on((`a`.`asset_contract_id` = `ac`.`contract_id`))) left join `contracts` `addc` on((`a`.`contract_id` = `addc`.`contract_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes` AS with `latest_stake_0` as (select `staging_stake`.`identity_id` AS `identity_id`,`staging_stake`.`stake` AS `stake`,`staging_stake`.`ask` AS `ask` from `staging_stake` where ((`staging_stake`.`block_date` = (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` = (select `v_sys_staging_date`.`block_ts_hour` from `v_sys_staging_date`)))), `nodes_0` as (select `a`.`nodeId` AS `nodeId`,`a`.`networkId` AS `networkId`,`a`.`tokenName` AS `tokenName`,`a`.`tokenSymbol` AS `tokenSymbol`,`a`.`nodeOwner` AS `nodeOwner`,`a`.`nodeGroup` AS `nodeGroup`,`a`.`createProfile_adminWallet` AS `createProfile_adminWallet`,`a`.`createProfile_adminWallet_hash` AS `createProfile_adminWallet_hash`,`a`.`current_adminWallet_hashes` AS `current_adminWallet_hashes`,`a`.`createProfile_blockNumber` AS `createProfile_blockNumber`,`a`.`createProfile_txHash` AS `createProfile_txHash`,`a`.`createProfile_ts` AS `createProfile_ts`,`a`.`createProfile_date` AS `createProfile_date`,((to_days(curdate()) - to_days(`a`.`createProfile_date`)) + 1) AS `nodeAgeDays`,`b`.`stake` AS `nodeStake`,`b`.`ask` AS `nodeAsk` from (`v_nodes_barebone` `a` left join `latest_stake_0` `b` on((`a`.`nodeId` = `b`.`identity_id`))) where (`b`.`ask` is not null)) select `nodes_0`.`nodeId` AS `nodeId`,`nodes_0`.`networkId` AS `networkId`,`nodes_0`.`tokenName` AS `tokenName`,`nodes_0`.`tokenSymbol` AS `tokenSymbol`,`nodes_0`.`nodeOwner` AS `nodeOwner`,`nodes_0`.`nodeGroup` AS `nodeGroup`,`nodes_0`.`createProfile_adminWallet` AS `createProfile_adminWallet`,`nodes_0`.`createProfile_adminWallet_hash` AS `createProfile_adminWallet_hash`,`nodes_0`.`current_adminWallet_hashes` AS `current_adminWallet_hashes`,`nodes_0`.`createProfile_blockNumber` AS `createProfile_blockNumber`,`nodes_0`.`createProfile_txHash` AS `createProfile_txHash`,`nodes_0`.`createProfile_ts` AS `createProfile_ts`,`nodes_0`.`createProfile_date` AS `createProfile_date`,`nodes_0`.`nodeAgeDays` AS `nodeAgeDays`,`nodes_0`.`nodeStake` AS `nodeStake`,`nodes_0`.`nodeAsk` AS `nodeAsk` from `nodes_0` union all select 0 AS `NodeId`,'avgNode' AS `NetworkId`,'avgNode' AS `TokenName`,'avgNode' AS `TokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,NULL AS `createProfile_adminWallet`,NULL AS `createProfile_adminWallet_hash`,NULL AS `current_adminWallet_hashes`,NULL AS `createProfile_blockNumber`,NULL AS `createProfile_txHash`,NULL AS `createProfile_ts`,NULL AS `createProfile_date`,0 AS `nodeAgeDays`,avg(`nodes_0`.`nodeStake`) AS `nodeStake`,avg(`nodes_0`.`nodeAsk`) AS `nodeAsk` from `nodes_0` where (`nodes_0`.`nodeStake` >= 50000) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_activity_last1min`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last1min`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_activity_last1min` AS with `activity_1` as (select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_commit_submitted` `a` join `commit_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_u1_commit_submitted` `a` join `commit_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_proof_submitted` `a` join `proof_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_u1_proof_submitted` `a` join `proof_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AskUpdated' AS `event_name`,cast((cast(`a`.`ask` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`profile_ask_updated` `a` join `profile_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'KeyAdded' AS `event_name`,`a`.`key` AS `event_value_1` from ((`identity_storage_key_added` `a` join `identity_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'StakeIncreased' AS `event_name`,cast((cast(`a`.`new_stake` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`staking_stake_increased` `a` left join (select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_tx`.`hash` AS `hash` from `proof_manager_v1_tx` where (`proof_manager_v1_tx`.`block_number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_u1_tx`.`hash` AS `hash` from `proof_manager_v1_u1_tx` where (`proof_manager_v1_u1_tx`.`block_number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`))))) `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`br`.`nodeId` AS `nodeId`,`br`.`tokenName` AS `tokenName`,`br`.`tokenSymbol` AS `tokenSymbol`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from ((((`activity_1` `a` left join `v_nodes_barebone` `br` on((`a`.`identity_id` = `br`.`nodeId`))) left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_activity_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_activity_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_activity_last24h` AS with `activity_1` as (select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_commit_submitted` `a` left join `commit_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'CommitSubmitted' AS `event_name`,cast((cast(((`b`.`token_amount` / 3) / `b`.`epochs_number`) as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`commit_manager_v1_u1_commit_submitted` `a` left join `commit_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `service_agreement_v1_service_agreement_v1_created` `b` on(((`a`.`token_id` = `b`.`token_id`) and (`a`.`asset_contract_id` = `b`.`asset_contract_id`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_proof_submitted` `a` left join `proof_manager_v1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'ProofSubmitted' AS `event_name`,cast((cast(`tt`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from (((`proof_manager_v1_u1_proof_submitted` `a` left join `proof_manager_v1_u1_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `token_transfer` `tt` on(((`a`.`block_number` = `tt`.`block_number`) and (`a`.`transaction_index` = `tt`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AskUpdated' AS `event_name`,cast((cast(`a`.`ask` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`profile_ask_updated` `a` left join `profile_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'KeyAdded' AS `event_name`,`a`.`key` AS `event_value_1` from ((`identity_storage_key_added` `a` left join `identity_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`identity_id` AS `identity_id`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,NULL AS `asset_contract_id`,NULL AS `token_id`,`tx`.`hash` AS `transaction_hash`,'StakeIncreased' AS `event_name`,cast((cast(`a`.`new_stake` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`staking_stake_increased` `a` left join (select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_tx`.`hash` AS `hash` from `proof_manager_v1_tx` where (`proof_manager_v1_tx`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`transaction_index` AS `transaction_index`,`proof_manager_v1_u1_tx`.`hash` AS `hash` from `proof_manager_v1_u1_tx` where (`proof_manager_v1_u1_tx`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1))) `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`a`.`block_number` >= (select `block`.`number` from `block` FORCE INDEX (`v_nodes_activity`) where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)) order by `block`.`number` limit 1)) and (`a`.`block_number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`br`.`nodeId` AS `nodeId`,`br`.`tokenName` AS `tokenName`,`br`.`tokenSymbol` AS `tokenSymbol`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from ((((`activity_1` `a` left join `v_nodes_barebone` `br` on((`a`.`identity_id` = `br`.`nodeId`))) left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_barebone`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_barebone`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_barebone` AS with `added_admin_keys` as (select `identity_storage_key_added`.`identity_id` AS `identity_id`,`identity_storage_key_added`.`key` AS `key` from `identity_storage_key_added` where (`identity_storage_key_added`.`purpose` = 1)), `removed_keys` as (select `a`.`identity_id` AS `identity_id`,`b`.`remove_key_key` AS `remove_key_key` from (`identity_storage_key_removed` `a` left join `identity_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`) and (`b`.`function` = 'removeKey'))))), `actual_keys` as (select `a`.`identity_id` AS `identity_id`,`a`.`key` AS `key` from (`added_admin_keys` `a` left join `removed_keys` `b` on(((`a`.`identity_id` = `b`.`identity_id`) and (`a`.`key` = `b`.`remove_key_key`)))) where (`b`.`identity_id` is null)), `actual_keys_concat` as (select `actual_keys`.`identity_id` AS `identity_id`,group_concat(`actual_keys`.`key` separator ',') AS `admin_keys_hashes` from `actual_keys` group by `actual_keys`.`identity_id`) select `a`.`identity_id` AS `nodeId`,(case when (`b`.`create_profile_node_id` = '0x5cac41237127f94c2d21dae0b14bfefa998806302e357127ed9d44860b322a2314a5ce338d2aec67cd3ded5c9adeed60718ce26c') then 'invalidNetworkID1' else convert(unhex(substr(`b`.`create_profile_node_id`,3,92)) using utf8mb4) end) AS `networkId`,`b`.`create_profile_shares_token_name` AS `tokenName`,`b`.`create_profile_shares_token_symbol` AS `tokenSymbol`,NULL AS `nodeOwner`,(case when (left(`b`.`create_profile_shares_token_symbol`,6) = 'TLNODE') then 'Trace Labs' when (`b`.`create_profile_shares_token_symbol` in ('TechnoTesseract','QuantumRealm','CyberstormCentral','StellarSynapse','SynthwaveSanctuary','GalacticGateway','CyberVortex','ViperVerse','DreamMachine','OrionBreeze','NovaLuna','AstroSphere','SolarFlare','Tars','GalacticCore','CometCruiser','CelestialCloud','LunaLander','CosmoCluster','SaturnStation','StarshipSynth','CosmicCrypt','InterstellarNode','FusionLink','ElextraStream','TitanLink','PulsarVertex','CodeDynamo','AuroraByte','EonSecure')) then 'Trace Labs' else 'Community' end) AS `nodeGroup`,`b`.`create_profile_admin_wallet` AS `createProfile_adminWallet`,`c`.`admin_key` AS `createProfile_adminWallet_hash`,`d`.`admin_keys_hashes` AS `current_adminWallet_hashes`,`a`.`block_number` AS `createProfile_blockNumber`,`b`.`hash` AS `createProfile_txHash`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `createProfile_ts`,cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `createProfile_date` from ((((`profile_profile_created` `a` left join `profile_tx` `b` on(((`a`.`contract_id` = `b`.`to_id`) and (`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `identity_identity_created` `c` on(((`a`.`block_number` = `c`.`block_number`) and (`a`.`transaction_index` = `c`.`transaction_index`)))) left join `actual_keys_concat` `d` on((`a`.`identity_id` = `d`.`identity_id`))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stake`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stake`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stake` AS select `stats_node`.`identity_id` AS `nodeId`,`stats_node`.`block_date` AS `date`,`stats_node`.`node_stake` AS `nodeStake` from `stats_node` union all select 0 AS `nodeId`,`stats_node`.`block_date` AS `date`,avg(`stats_node`.`node_stake`) AS `nodeStake` from `stats_node` where (`stats_node`.`node_stake` >= 50000) group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_daily` AS with `nodes_0` as (select `a`.`identity_id` AS `nodeId`,`a`.`block_date` AS `date`,`a`.`node_stake` AS `nodeStake`,`a`.`commit_any_epoch` AS `pubsCommited`,`a`.`commit_1st_epoch` AS `pubsCommited1stEpochOnly`,sum(`a`.`commit_any_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePubsCommited`,sum(`a`.`commit_1st_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimated_earnings_any_epoch` AS `estimatedEarnings`,`a`.`estimated_earnings_1st_epoch_only` AS `estimatedEarnings1stEpochOnly`,sum(`a`.`estimated_earnings_any_epoch`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativeEstimatedEarnings`,sum(`a`.`estimated_earnings_1st_epoch_only`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,sum(`a`.`payouts`) OVER (PARTITION BY `a`.`identity_id` ORDER BY `a`.`block_date` )  AS `cumulativePayouts`,`a`.`ask` AS `ask` from `stats_node` `a`) select `a`.`nodeId` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date` AS `date`,`a`.`nodeStake` AS `nodeStake`,`a`.`pubsCommited` AS `pubsCommited`,`a`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`a`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`a`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimatedEarnings` AS `estimatedEarnings`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`a`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`a`.`ask` AS `ask` from (`nodes_0` `a` join `v_nodes_barebone` `b` on((`a`.`nodeId` = `b`.`nodeId`))) union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`stats_node`.`block_date` AS `date`,avg(`stats_node`.`node_stake`) AS `nodeStake`,avg(`stats_node`.`commit_any_epoch`) AS `pubsCommited`,avg(`stats_node`.`commit_1st_epoch`) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_node`.`estimated_earnings_any_epoch`) AS `estimatedEarnings`,avg(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_node`.`payouts`) AS `payouts`,NULL AS `NULL`,avg(`stats_node`.`ask`) AS `ask` from `stats_node` where (`stats_node`.`node_stake` >= 50000) group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_daily` AS select `stats_node`.`block_date` AS `date`,sum(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`stats_node`.`estimated_earnings_any_epoch`) - sum(`stats_node`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`stats_node`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,sum(sum(`stats_node`.`commit_1st_epoch`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum((sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`))) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeCommitsSubmitted2plusEpochs`,sum(`stats_node`.`payouts`) AS `payouts`,sum(sum(`stats_node`.`payouts`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativePayouts`,sum(`stats_node`.`proofs_submitted`) AS `proofsSubmitted`,sum(sum(`stats_node`.`proofs_submitted`)) OVER (ORDER BY `stats_node`.`block_date` )  AS `cumulativeProofsSubmitted`,sum(`stats_node`.`node_stake`) AS `combinedNodesStake`,(sum(`stats_node`.`node_stake`) / sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end))) AS `avgNodeStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk`,(sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) / sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end))) AS `avgAsk` from `stats_node` group by `stats_node`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_hourly_7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_hourly_7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_hourly_7d` AS with `dates` as (select `staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,sum(`staging_stake`.`stake`) AS `stake`,sum((case when (`staging_stake`.`stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`staging_stake`.`stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`staging_stake`.`stake` >= 50000) then `staging_stake`.`ask` else 0 end)) AS `combined_ask` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`))) group by `staging_stake`.`block_date`,`staging_stake`.`block_ts_hour`), `commits` as (select `staging_commit_submitted`.`block_date` AS `block_date`,`staging_commit_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_commit_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_commit_submitted`.`block_date`,`staging_commit_submitted`.`block_ts_hour`), `paidouts` as (select `staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout`,count(`staging_proof_submitted`.`value`) AS `proofs_submitted` from `staging_proof_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_proof_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`) select `a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`c`.`estimated_earnings_1st_epoch_only` AS `estimatedEarnings1stEpochOnly`,(`c`.`estimated_earnings_any_epoch` - `c`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings2plusEpochs`,`c`.`commit_1st_epoch` AS `commitsSubmitted1stEpochOnly`,sum(`c`.`commit_1st_epoch`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(`c`.`commit_any_epoch` - `c`.`commit_1st_epoch`) AS `commitsSubmitted2plusEpochs`,sum((`c`.`commit_any_epoch` - `c`.`commit_1st_epoch`)) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeCommitsSubmitted2plusEpochs`,`p`.`paidout` AS `payouts`,sum(`p`.`paidout`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativePayouts`,`p`.`proofs_submitted` AS `proofsSubmitted`,sum(`p`.`proofs_submitted`) OVER (ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `cumulativeProofsSubmitted`,`a`.`stake` AS `combinedNodesStake`,(`a`.`stake` / `a`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`a`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`a`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`a`.`combined_ask` AS `combinedAsk`,(`a`.`combined_ask` / `a`.`nodesWithMoreThan50kStake`) AS `avgAsk` from ((`dates` `a` left join `commits` `c` on(((`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join `paidouts` `p` on(((`a`.`date_val` = `p`.`block_date`) and (`a`.`ts_val` = `p`.`block_ts_hour`)))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_monthly` AS with `stake_0` as (select `stats_node`.`block_date` AS `block_date`,sum(`stats_node`.`node_stake`) AS `node_stake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk`,row_number() OVER (PARTITION BY date_format(`stats_node`.`block_date`,'%Y-%m-01') ORDER BY `stats_node`.`block_date` desc )  AS `rn` from `stats_node` group by `stats_node`.`block_date`), `stake_1` as (select date_format(`stake_0`.`block_date`,'%Y-%m-01') AS `date`,`stake_0`.`node_stake` AS `node_stake`,`stake_0`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`stake_0`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`stake_0`.`combinedAsk` AS `combinedAsk` from `stake_0` where (`stake_0`.`rn` = 1)), `grouped_0` as (select date_format(`a`.`block_date`,'%Y-%m-01') AS `date`,sum(`a`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`a`.`estimated_earnings_any_epoch`) - sum(`a`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`a`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,sum(sum(`a`.`commit_1st_epoch`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeCommitsSubmitted1stEpochOnly`,(sum(`a`.`commit_any_epoch`) - sum(`a`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum((sum(`a`.`commit_any_epoch`) - sum(`a`.`commit_1st_epoch`))) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeCommitsSubmitted2plusEpochs`,sum(`a`.`payouts`) AS `payouts`,sum(sum(`a`.`payouts`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePayouts`,sum(`a`.`proofs_submitted`) AS `proofsSubmitted`,sum(sum(`a`.`proofs_submitted`)) OVER (ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeProofsSubmitted` from `stats_node` `a` group by date_format(`a`.`block_date`,'%Y-%m-01')) select `a`.`date` AS `date`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`estimatedEarnings2plusEpochs` AS `estimatedEarnings2plusEpochs`,`a`.`commitsSubmitted1stEpochOnly` AS `commitsSubmitted1stEpochOnly`,`a`.`cumulativeCommitsSubmitted1stEpochOnly` AS `cumulativeCommitsSubmitted1stEpochOnly`,`a`.`commitsSubmitted2plusEpochs` AS `commitsSubmitted2plusEpochs`,`a`.`cumulativeCommitsSubmitted2plusEpochs` AS `cumulativeCommitsSubmitted2plusEpochs`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`a`.`proofsSubmitted` AS `proofsSubmitted`,`a`.`cumulativeProofsSubmitted` AS `cumulativeProofsSubmitted`,`b`.`node_stake` AS `combinedNodesStake`,(`b`.`node_stake` / `b`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`b`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`b`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`b`.`combinedAsk` AS `combinedAsk`,(`b`.`combinedAsk` / `b`.`nodesWithMoreThan50kStake`) AS `avgAsk` from (`grouped_0` `a` join `stake_1` `b` on((`a`.`date` = `b`.`date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_grouped_total`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_grouped_total`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_grouped_total` AS with `stake_0` as (select sum(`stats_node`.`node_stake`) AS `node_stake`,sum((case when (`stats_node`.`node_stake` >= 50000) then 1 else 0 end)) AS `nodesWithMoreThan50kStake`,sum((case when (`stats_node`.`node_stake` < 50000) then 1 else 0 end)) AS `nodesWithLessThan50kStake`,sum((case when (`stats_node`.`node_stake` >= 50000) then `stats_node`.`ask` else 0 end)) AS `combinedAsk` from `stats_node` where (`stats_node`.`block_date` = (select `v_sys_staging_date`.`block_date` from `v_sys_staging_date`)) group by `stats_node`.`block_date`), `grouped_0` as (select sum(`stats_node`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,(sum(`stats_node`.`estimated_earnings_any_epoch`) - sum(`stats_node`.`estimated_earnings_1st_epoch_only`)) AS `estimatedEarnings2plusEpochs`,sum(`stats_node`.`commit_1st_epoch`) AS `commitsSubmitted1stEpochOnly`,(sum(`stats_node`.`commit_any_epoch`) - sum(`stats_node`.`commit_1st_epoch`)) AS `commitsSubmitted2plusEpochs`,sum(`stats_node`.`payouts`) AS `payouts`,sum(`stats_node`.`proofs_submitted`) AS `proofsSubmitted` from `stats_node`) select `a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`estimatedEarnings2plusEpochs` AS `estimatedEarnings2plusEpochs`,`a`.`commitsSubmitted1stEpochOnly` AS `commitsSubmitted1stEpochOnly`,`a`.`commitsSubmitted2plusEpochs` AS `commitsSubmitted2plusEpochs`,`a`.`payouts` AS `payouts`,`a`.`proofsSubmitted` AS `proofsSubmitted`,`b`.`node_stake` AS `combinedNodesStake`,(`b`.`node_stake` / `b`.`nodesWithMoreThan50kStake`) AS `avgNodeStake`,`b`.`nodesWithMoreThan50kStake` AS `nodesWithMoreThan50kStake`,`b`.`nodesWithLessThan50kStake` AS `nodesWithLessThan50kStake`,`b`.`combinedAsk` AS `combinedAsk`,(`b`.`combinedAsk` / `b`.`nodesWithMoreThan50kStake`) AS `avgAsk` from (`grouped_0` `a` join `stake_0` `b`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_hourly_7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_hourly_7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_hourly_7d` AS with `nodeids_dates` as (select `staging_stake`.`identity_id` AS `nodeId`,`staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,`staging_stake`.`stake` AS `stake`,`staging_stake`.`ask` AS `ask` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`)))), `node_stats_0` as (select `a`.`nodeId` AS `nodeId`,`a`.`date_val` AS `date_val`,`a`.`ts_val` AS `ts_val`,max(`a`.`stake`) AS `nodeStake`,max(`a`.`ask`) AS `ask`,sum(`c`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`c`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(sum(`c`.`estimated_earnings_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `estimated_earnings_any_epoch_cum`,sum(sum(`c`.`estimated_earnings_1st_epoch_only`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val` )  AS `estimated_earnings_1st_epoch_only_cum`,sum(`c`.`commit_any_epoch`) AS `commit_any_epoch`,sum(sum(`c`.`commit_any_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `commit_any_epoch_cum`,sum(`c`.`commit_1st_epoch`) AS `commit_1st_epoch`,sum(sum(`c`.`commit_1st_epoch`)) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `commit_1st_epoch_cum`,`e`.`paidout` AS `paidout`,sum(`e`.`paidout`) OVER (PARTITION BY `a`.`nodeId` ORDER BY `a`.`date_val`,`a`.`ts_val` )  AS `paidout_cum` from ((`nodeids_dates` `a` left join `staging_commit_submitted` `c` on(((`a`.`nodeId` = `c`.`identity_id`) and (`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join (select `staging_proof_submitted`.`identity_id` AS `identity_id`,`staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where (`staging_proof_submitted`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) group by `staging_proof_submitted`.`identity_id`,`staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`) `e` on(((`a`.`nodeId` = `e`.`identity_id`) and (`a`.`date_val` = `e`.`block_date`) and (`a`.`ts_val` = `e`.`block_ts_hour`)))) where ((`c`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) or (`c`.`block_date` is null)) group by `a`.`nodeId`,`a`.`date_val`,`a`.`ts_val`), `dates_avg_node` as (select `staging_stake`.`block_date` AS `date_val`,`staging_stake`.`block_ts_hour` AS `ts_val`,avg(`staging_stake`.`stake`) AS `stake`,avg(`staging_stake`.`ask`) AS `ask`,count(`staging_stake`.`block_date`) AS `node_count` from `staging_stake` where ((`staging_stake`.`block_date` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(8) day) from `v_sys_staging_date`)) and (`staging_stake`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`)) and (`staging_stake`.`stake` >= 50000)) group by `staging_stake`.`block_date`,`staging_stake`.`block_ts_hour`), `commits_avg_node` as (select `staging_commit_submitted`.`block_date` AS `block_date`,`staging_commit_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_commit_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_commit_submitted`.`block_date`,`staging_commit_submitted`.`block_ts_hour`), `paidout_avg_node` as (select `staging_proof_submitted`.`block_date` AS `block_date`,`staging_proof_submitted`.`block_ts_hour` AS `block_ts_hour`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` FORCE INDEX (`v_nodes_stats_hourly_7d_avgnode`) where (`staging_proof_submitted`.`block_date` >= (select cast((date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),'%Y-%m-%d %H:00:00') + interval -(168) hour) as date) from `block` order by `block`.`number` desc limit 1)) group by `staging_proof_submitted`.`block_date`,`staging_proof_submitted`.`block_ts_hour`), `node_stats_0_avg_node` as (select `a`.`date_val` AS `date_val`,`a`.`ts_val` AS `ts_val`,`a`.`stake` AS `nodeStake`,`a`.`ask` AS `ask`,(`c`.`estimated_earnings_any_epoch` / `a`.`node_count`) AS `estimated_earnings_any_epoch`,(`c`.`estimated_earnings_1st_epoch_only` / `a`.`node_count`) AS `estimated_earnings_1st_epoch_only`,(`c`.`commit_any_epoch` / `a`.`node_count`) AS `commit_any_epoch`,(`c`.`commit_1st_epoch` / `a`.`node_count`) AS `commit_1st_epoch`,(`p`.`paidout` / `a`.`node_count`) AS `paidout` from ((`dates_avg_node` `a` left join `commits_avg_node` `c` on(((`a`.`date_val` = `c`.`block_date`) and (`a`.`ts_val` = `c`.`block_ts_hour`)))) left join `paidout_avg_node` `p` on(((`a`.`date_val` = `p`.`block_date`) and (`a`.`ts_val` = `p`.`block_ts_hour`))))) select `a`.`nodeId` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`a`.`nodeStake` AS `nodeStake`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly`,ifnull(`a`.`commit_any_epoch_cum`,0) AS `cumulativePubsCommited`,ifnull(`a`.`commit_1st_epoch_cum`,0) AS `cumulativePubsCommited1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`estimated_earnings_any_epoch_cum`,0) AS `cumulativeEstimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only_cum`,0) AS `cumulativeEstimatedEarnings1stEpochOnly`,ifnull(`a`.`paidout`,0) AS `payouts`,ifnull(`a`.`paidout_cum`,0) AS `cumulativePayouts`,`a`.`ask` AS `ask` from (`node_stats_0` `a` left join `v_nodes_barebone` `b` on((`a`.`nodeId` = `b`.`nodeId`))) union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`a`.`date_val` AS `date`,`a`.`ts_val` AS `datetime`,`a`.`nodeStake` AS `nodeStake`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,ifnull(`a`.`paidout`,0) AS `payouts`,NULL AS `NULL`,`a`.`ask` AS `ask` from `node_stats_0_avg_node` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last1h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last1h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last1h` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(2) hour) AS `t` from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last24h` AS with `paidout` as (select `staging_proof_submitted`.`identity_id` AS `identity_id`,sum(`staging_proof_submitted`.`value`) AS `paidout` from `staging_proof_submitted` where ((`staging_proof_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(2) day) as date) from `v_sys_staging_date`)) and (`staging_proof_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) AS `t` from `v_sys_staging_date`))) group by `staging_proof_submitted`.`identity_id`), `commits` as (select `staging_commit_submitted`.`identity_id` AS `identity_id`,sum(`staging_commit_submitted`.`estimated_earnings_any_epoch`) AS `estimated_earnings_any_epoch`,sum(`staging_commit_submitted`.`estimated_earnings_1st_epoch_only`) AS `estimated_earnings_1st_epoch_only`,sum(`staging_commit_submitted`.`commit_any_epoch`) AS `commit_any_epoch`,sum(`staging_commit_submitted`.`commit_1st_epoch`) AS `commit_1st_epoch` from `staging_commit_submitted` where ((`staging_commit_submitted`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(2) day) as date) from `v_sys_staging_date`)) and (`staging_commit_submitted`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) AS `t` from `v_sys_staging_date`))) group by `staging_commit_submitted`.`identity_id`) select `c`.`nodeId` AS `nodeId`,`c`.`networkId` AS `networkId`,`c`.`tokenName` AS `tokenName`,`c`.`tokenSymbol` AS `tokenSymbol`,`c`.`nodeOwner` AS `nodeOwner`,`c`.`nodeGroup` AS `nodeGroup`,`c`.`nodeStake` AS `nodeStake`,`c`.`nodeAsk` AS `nodeAsk`,ifnull(`b`.`paidout`,0) AS `cumulativePayouts`,ifnull(`a`.`estimated_earnings_any_epoch`,0) AS `estimatedEarnings`,ifnull(`a`.`estimated_earnings_1st_epoch_only`,0) AS `estimatedEarnings1stEpochOnly`,ifnull(`a`.`commit_any_epoch`,0) AS `pubsCommited`,ifnull(`a`.`commit_1st_epoch`,0) AS `pubsCommited1stEpochOnly` from ((`v_nodes` `c` left join `paidout` `b` on((`c`.`nodeId` = `b`.`identity_id`))) left join `commits` `a` on((`a`.`identity_id` = `c`.`nodeId`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last30d` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) where (`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(30) day) as date) from `v_sys_staging_date`)) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_last7d` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) where (`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(7) day) as date) from `v_sys_staging_date`)) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_latest`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_latest`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_latest` AS select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`b`.`nodeStake` AS `nodeStake`,`b`.`nodeAsk` AS `nodeAsk`,ifnull(sum(`a`.`payouts`),0) AS `cumulativePayouts`,ifnull(sum(`a`.`estimated_earnings_any_epoch`),0) AS `estimatedEarnings`,ifnull(sum(`a`.`estimated_earnings_1st_epoch_only`),0) AS `estimatedEarnings1stEpochOnly`,ifnull(sum(`a`.`commit_any_epoch`),0) AS `pubsCommited`,ifnull(sum(`a`.`commit_1st_epoch`),0) AS `pubsCommited1stEpochOnly` from (`stats_node` `a` join `v_nodes` `b` on((`a`.`identity_id` = `b`.`nodeId`))) group by `a`.`identity_id`,`b`.`networkId`,`b`.`tokenName`,`b`.`tokenSymbol`,`b`.`nodeOwner`,`b`.`nodeGroup`,`b`.`nodeStake`,`b`.`nodeAsk` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_nodes_stats_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_nodes_stats_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_nodes_stats_monthly` AS with `stake_ask_0` as (select `stats_node`.`identity_id` AS `identity_id`,`stats_node`.`block_date` AS `block_date`,`stats_node`.`node_stake` AS `node_stake`,`stats_node`.`ask` AS `ask`,row_number() OVER (PARTITION BY `stats_node`.`identity_id`,date_format(`stats_node`.`block_date`,'%Y-%m-01') ORDER BY `stats_node`.`block_date` desc )  AS `rn` from `stats_node`), `stake_ask_1` as (select `stake_ask_0`.`identity_id` AS `identity_id`,date_format(`stake_ask_0`.`block_date`,'%Y-%m-01') AS `date`,`stake_ask_0`.`node_stake` AS `node_stake`,`stake_ask_0`.`ask` AS `ask` from `stake_ask_0` where (`stake_ask_0`.`rn` = 1)), `stats_0` as (select `a`.`identity_id` AS `identity_id`,date_format(`a`.`block_date`,'%Y-%m-01') AS `date`,sum(`a`.`commit_any_epoch`) AS `pubsCommited`,sum(`a`.`commit_1st_epoch`) AS `pubsCommited1stEpochOnly`,sum(sum(`a`.`commit_any_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePubsCommited`,sum(sum(`a`.`commit_1st_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePubsCommited1stEpochOnly`,sum(`a`.`estimated_earnings_any_epoch`) AS `estimatedEarnings`,sum(`a`.`estimated_earnings_1st_epoch_only`) AS `estimatedEarnings1stEpochOnly`,sum(sum(`a`.`estimated_earnings_any_epoch`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeEstimatedEarnings`,sum(sum(`a`.`estimated_earnings_1st_epoch_only`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativeEstimatedEarnings1stEpochOnly`,sum(`a`.`payouts`) AS `payouts`,sum(sum(`a`.`payouts`)) OVER (PARTITION BY `a`.`identity_id` ORDER BY date_format(`a`.`block_date`,'%Y-%m-01') )  AS `cumulativePayouts` from `stats_node` `a` group by `a`.`identity_id`,date_format(`a`.`block_date`,'%Y-%m-01')), `stats_1` as (select `a`.`identity_id` AS `nodeId`,`b`.`networkId` AS `networkId`,`b`.`tokenName` AS `tokenName`,`b`.`tokenSymbol` AS `tokenSymbol`,`b`.`nodeOwner` AS `nodeOwner`,`b`.`nodeGroup` AS `nodeGroup`,`a`.`date` AS `date`,`c`.`node_stake` AS `nodeStake`,`a`.`pubsCommited` AS `pubsCommited`,`a`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`a`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`a`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`a`.`estimatedEarnings` AS `estimatedEarnings`,`a`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`a`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`a`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`a`.`payouts` AS `payouts`,`a`.`cumulativePayouts` AS `cumulativePayouts`,`c`.`ask` AS `ask` from ((`stats_0` `a` join `v_nodes_barebone` `b` on((`a`.`identity_id` = `b`.`nodeId`))) join `stake_ask_1` `c` on(((`a`.`identity_id` = `c`.`identity_id`) and (`a`.`date` = `c`.`date`))))) select `stats_1`.`nodeId` AS `nodeId`,`stats_1`.`networkId` AS `networkId`,`stats_1`.`tokenName` AS `tokenName`,`stats_1`.`tokenSymbol` AS `tokenSymbol`,`stats_1`.`nodeOwner` AS `nodeOwner`,`stats_1`.`nodeGroup` AS `nodeGroup`,`stats_1`.`date` AS `date`,`stats_1`.`nodeStake` AS `nodeStake`,`stats_1`.`pubsCommited` AS `pubsCommited`,`stats_1`.`pubsCommited1stEpochOnly` AS `pubsCommited1stEpochOnly`,`stats_1`.`cumulativePubsCommited` AS `cumulativePubsCommited`,`stats_1`.`cumulativePubsCommited1stEpochOnly` AS `cumulativePubsCommited1stEpochOnly`,`stats_1`.`estimatedEarnings` AS `estimatedEarnings`,`stats_1`.`estimatedEarnings1stEpochOnly` AS `estimatedEarnings1stEpochOnly`,`stats_1`.`cumulativeEstimatedEarnings` AS `cumulativeEstimatedEarnings`,`stats_1`.`cumulativeEstimatedEarnings1stEpochOnly` AS `cumulativeEstimatedEarnings1stEpochOnly`,`stats_1`.`payouts` AS `payouts`,`stats_1`.`cumulativePayouts` AS `cumulativePayouts`,`stats_1`.`ask` AS `ask` from `stats_1` union all select 0 AS `nodeId`,'avgNode' AS `networkId`,'avgNode' AS `tokenName`,'avgNode' AS `tokenSymbol`,'avgNode' AS `nodeOwner`,'avgNode' AS `nodeGroup`,`stats_1`.`date` AS `date`,avg(`stats_1`.`nodeStake`) AS `nodeStake`,avg(`stats_1`.`pubsCommited`) AS `pubsCommited`,avg(`stats_1`.`pubsCommited1stEpochOnly`) AS `pubsCommited1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_1`.`estimatedEarnings`) AS `estimatedEarnings`,avg(`stats_1`.`estimatedEarnings1stEpochOnly`) AS `estimatedEarnings1stEpochOnly`,NULL AS `NULL`,NULL AS `NULL`,avg(`stats_1`.`payouts`) AS `payouts`,NULL AS `NULL`,avg(`stats_1`.`ask`) AS `ask` from `stats_1` where (`stats_1`.`nodeStake` >= 50000) group by `stats_1`.`date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs` AS select `b`.`contract_address` AS `contract_address`,`a`.`token_id` AS `token_id`,concat(`b`.`contract_address`,`a`.`keyword`) AS `keyword`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`c`.`chain_id` AS `chain_id`,`ch`.`chain_name` AS `chain_name`,`a`.`size` AS `size`,`a`.`triples_number` AS `triples_number`,`a`.`chunks_number` AS `chunks_number`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,((`a`.`epoch_length` / 3600) / 24) AS `epoch_length_days`,`a`.`token_amount` AS `token_amount`,`a`.`bid` AS `bid`,`a`.`transaction_hash` AS `transaction_hash`,`a`.`transaction_index` AS `transaction_index`,`a`.`block_number` AS `block_number`,`a`.`block_timestamp` AS `block_timestamp`,`a`.`block_ts` AS `block_ts`,`a`.`block_date` AS `block_date`,`a`.`block_ts_hour` AS `block_ts_hour`,`a`.`state_index` AS `state_index`,`a`.`state` AS `state`,concat('[',`a`.`previous_states`,']') AS `previous_states`,`a`.`from` AS `publisher`,concat(left(`a`.`from`,6),'...',right(`a`.`from`,4)) AS `publisher_short`,`a`.`owner` AS `owner`,`a`.`winners` AS `winners` from (((`staging_pub` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_activity_last1min`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last1min`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_activity_last1min` AS with `activity_1` as (select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetCreated' AS `event_name`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetTransferred' AS `event_name`,`a`.`to` AS `event_value_1` from ((`content_asset_storage_transfer` `a` join `content_asset_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)) and (`a`.`from` <> '0x0000000000000000000000000000000000000000') and (`a`.`to` <> '0x0000000000000000000000000000000000000000')) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetBurnt' AS `event_name`,cast((cast(`a`.`returned_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_burnt` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetUpdated' AS `event_name`,cast((cast(`a`.`update_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_state_updated` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 60) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`a`.`from` AS `signer`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from (((`activity_1` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_activity_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_activity_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_activity_last24h` AS with `activity_1` as (select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetCreated' AS `event_name`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`service_agreement_v1_service_agreement_v1_created` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `a`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetTransferred' AS `event_name`,`a`.`to` AS `event_value_1` from ((`content_asset_storage_transfer` `a` join `content_asset_storage_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)) and (`a`.`from` <> '0x0000000000000000000000000000000000000000') and (`a`.`to` <> '0x0000000000000000000000000000000000000000')) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetBurnt' AS `event_name`,cast((cast(`a`.`returned_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_burnt` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`))) union all select `tx`.`from` AS `from`,convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,`a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`tx`.`hash` AS `transaction_hash`,'AssetUpdated' AS `event_name`,cast((cast(`a`.`update_token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `event_value_1` from ((`content_asset_asset_state_updated` `a` join `content_asset_tx` `tx` on(((`a`.`block_number` = `tx`.`block_number`) and (`a`.`transaction_index` = `tx`.`transaction_index`)))) join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where ((`bb`.`number` >= (select min(`block`.`number`) from `block` where (`block`.`timestamp` >= (select (`v_sys_sync_date`.`timestamp` - 86400) from `v_sys_sync_date`)))) and (`bb`.`number` <= (select `v_sys_sync_date`.`number` from `v_sys_sync_date`)))) select `c`.`chain_id` AS `chain_id`,`a`.`from` AS `signer`,concat('did:dkg:',`ch`.`ual_chain_name`,':',`c`.`chain_id`,'/',`b`.`contract_address`,'/',`a`.`token_id`) AS `UAL`,`a`.`block_ts` AS `datetime`,`a`.`asset_contract_id` AS `assetContractId`,`a`.`token_id` AS `tokenId`,`a`.`transaction_hash` AS `transactionHash`,`a`.`event_name` AS `eventName`,`a`.`event_value_1` AS `eventValue1` from (((`activity_1` `a` left join `contracts` `b` on((`a`.`asset_contract_id` = `b`.`contract_id`))) join (select `profile_tx`.`chain_id` AS `chain_id` from `profile_tx` limit 1) `c`) join `othubdb`.`blockchains` `ch` on((`c`.`chain_id` = `ch`.`chain_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_daily`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_daily`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_daily` AS select `a`.`block_date` AS `date`,ifnull((sum(`a`.`total_size`) / sum(`a`.`total_pubs`)),0) AS `avgPubSize`,ifnull((sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)),0) AS `avgEpochsNumber`,ifnull((sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)),0) AS `avgPubPrice`,ifnull((sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)),0) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,ifnull(round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0),0) AS `privatePubsPercentage`,sum(sum(`a`.`total_trac_spent`)) OVER (ORDER BY `a`.`block_date` )  AS `cumulativeTotalTracSpent`,sum(sum(`a`.`total_pubs`)) OVER (ORDER BY `a`.`block_date` )  AS `cumulativePubs` from `stats_pub` `a` group by `a`.`block_date` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_hourly`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_hourly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_hourly` AS select `a`.`block_date` AS `date`,`a`.`block_ts_hour` AS `datetime`,ifnull((`a`.`total_size` / `a`.`total_pubs`),0) AS `avgPubSize`,ifnull((`a`.`total_epochs` / `a`.`total_pubs`),0) AS `avgEpochsNumber`,ifnull((`a`.`total_trac_spent` / `a`.`total_pubs`),0) AS `avgPubPrice`,ifnull((`a`.`total_bid` / `a`.`total_pubs`),0) AS `avgBid`,`a`.`total_pubs` AS `totalPubs`,`a`.`total_trac_spent` AS `totalTracSpent`,round((ifnull((`a`.`private_pubs` / `a`.`total_pubs`),0) * 100),0) AS `privatePubsPercentage`,sum(`a`.`total_trac_spent`) OVER (ORDER BY `a`.`block_date`,`a`.`block_ts_hour` )  AS `cumulativeTotalTracSpent`,sum(`a`.`total_pubs`) OVER (ORDER BY `a`.`block_date`,`a`.`block_ts_hour` )  AS `cumulativePubs` from `stats_pub` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last1h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last1h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last1h` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,ifnull(avg(`a`.`size`),0) AS `avgPubSize`,ifnull(avg(`a`.`epochs_number`),0) AS `avgEpochsNumber`,ifnull(avg(`a`.`token_amount`),0) AS `avgPubPrice`,ifnull(avg(`a`.`bid`),0) AS `avgBid`,count(`a`.`token_id`) AS `totalPubs`,ifnull(sum(`a`.`token_amount`),0) AS `totalTracSpent`,round(((sum((case when (`a`.`size` = 145) then 1 else 0 end)) / count(`a`.`token_id`)) * 100),0) AS `privatePubsPercentage` from `staging_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_ts` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(2) hour) from `v_sys_staging_date`)) and (`a`.`block_ts` >= (select (`v_sys_staging_date`.`block_ts` + interval -(60) minute) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last24h`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last24h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last24h` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(1) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(24) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last30d`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last30d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last30d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(31) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(720) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_last7d`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_last7d`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_last7d` AS select (select `v_sys_staging_date`.`block_ts` from `v_sys_staging_date`) AS `datetime`,(sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` where ((`a`.`block_date` >= (select cast((`v_sys_staging_date`.`block_date` + interval -(8) day) as date) from `v_sys_staging_date`)) and (`a`.`block_ts_hour` >= (select (`v_sys_staging_date`.`block_ts_hour` + interval -(168) hour) from `v_sys_staging_date`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_monthly`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_monthly`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_monthly` AS with `daily` as (select `stats_pub`.`block_date` AS `date`,sum(`stats_pub`.`total_size`) AS `size`,sum(`stats_pub`.`total_epochs`) AS `epochs_number`,sum(`stats_pub`.`total_bid`) AS `bid`,sum(`stats_pub`.`total_pubs`) AS `totalPubs`,sum(`stats_pub`.`total_trac_spent`) AS `totalTracSpent`,sum(`stats_pub`.`private_pubs`) AS `privatePubs` from `stats_pub` group by `stats_pub`.`block_date`) select date_format(`daily`.`date`,'%Y-%m-01') AS `date`,(sum(`daily`.`size`) / sum(`daily`.`totalPubs`)) AS `avgPubSize`,(sum(`daily`.`epochs_number`) / sum(`daily`.`totalPubs`)) AS `avgEpochsNumber`,(sum(`daily`.`totalTracSpent`) / sum(`daily`.`totalPubs`)) AS `avgPubPrice`,(sum(`daily`.`bid`) / sum(`daily`.`totalPubs`)) AS `avgBid`,sum(`daily`.`totalPubs`) AS `totalPubs`,sum(`daily`.`totalTracSpent`) AS `totalTracSpent`,round(((sum(`daily`.`privatePubs`) / sum(`daily`.`totalPubs`)) * 100),0) AS `privatePubsPercentage`,sum(sum(`daily`.`totalTracSpent`)) OVER (ORDER BY date_format(`daily`.`date`,'%Y-%m-01') )  AS `cumulativeTotalTracSpent`,sum(sum(`daily`.`totalPubs`)) OVER (ORDER BY date_format(`daily`.`date`,'%Y-%m-01') )  AS `cumulativePubs` from `daily` group by date_format(`daily`.`date`,'%Y-%m-01') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_pubs_stats_total`
--

/*!50001 DROP VIEW IF EXISTS `v_pubs_stats_total`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_pubs_stats_total` AS select (sum(`a`.`total_size`) / sum(`a`.`total_pubs`)) AS `avgPubSize`,(sum(`a`.`total_epochs`) / sum(`a`.`total_pubs`)) AS `avgEpochsNumber`,(sum(`a`.`total_trac_spent`) / sum(`a`.`total_pubs`)) AS `avgPubPrice`,(sum(`a`.`total_bid`) / sum(`a`.`total_pubs`)) AS `avgBid`,sum(`a`.`total_pubs`) AS `totalPubs`,sum(`a`.`total_trac_spent`) AS `totalTracSpent`,round(((sum(`a`.`private_pubs`) / sum(`a`.`total_pubs`)) * 100),0) AS `privatePubsPercentage` from `stats_pub` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_notif_contracts_change`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_notif_contracts_change`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_notif_contracts_change` AS with `a` as (select `hub_asset_storage_changed`.`block_number` AS `block_number` from `hub_asset_storage_changed` union all select `hub_contract_changed`.`block_number` AS `block_number` from `hub_contract_changed` union all select `hub_new_asset_storage`.`block_number` AS `block_number` from `hub_new_asset_storage` union all select `hub_new_contract`.`block_number` AS `block_number` from `hub_new_contract`) select cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date` from (`a` left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (cast(convert_tz(from_unixtime(`bb`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) >= (cast(curdate() as date) - interval 2 day)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_date`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_date`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_date` AS select `block`.`number` AS `number`,`block`.`timestamp` AS `timestamp`,cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour` from `block` where (`block`.`number` = (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table') limit 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_commit_submitted`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_commit_submitted`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_commit_submitted` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`service_agreement_v1_commit_submitted` `a` left join `service_agreement_v1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`commit_manager_v1_commit_submitted` `a` left join `commit_manager_v1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`identity_id` AS `identity_id`,`a`.`keyword` AS `keyword`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epoch` AS `epoch`,`a`.`score` AS `score`,0 AS `state_index`,`a`.`transaction_index` AS `transaction_index`,`b`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp` from ((`commit_manager_v1_u1_commit_submitted` `a` left join `commit_manager_v1_u1_tx` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`state_index` = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_proof_submitted`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_proof_submitted`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_proof_submitted` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`service_agreement_v1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `service_agreement_v1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`proof_manager_v1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `proof_manager_v1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) where (`a`.`block_number` <> 2881732) union all select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,`a`.`epoch` AS `epoch`,`a`.`identity_id` AS `identity_id`,`a`.`transaction_index` AS `transaction_index`,`d`.`hash` AS `transaction_hash`,`a`.`contract_id` AS `contract_id`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,ifnull(cast((cast(`b`.`value` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)),0) AS `value` from (((`proof_manager_v1_u1_proof_submitted` `a` left join `token_transfer` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `proof_manager_v1_u1_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_insert_new_pub`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_insert_new_pub`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_insert_new_pub` AS select `a`.`asset_contract_id` AS `asset_contract_id`,`a`.`token_id` AS `token_id`,`a`.`keyword` AS `keyword`,ifnull(`d`.`create_asset_size`,0) AS `size`,ifnull(`d`.`create_asset_triples_number`,0) AS `triples_number`,ifnull(`d`.`create_asset_chunks_number`,0) AS `chunks_number`,`a`.`hash_function_id` AS `hash_function_id`,`a`.`epochs_number` AS `epochs_number`,`a`.`epoch_length` AS `epoch_length`,cast((cast(`a`.`token_amount` as decimal(45,18)) / 1000000000000000000) as decimal(27,18)) AS `token_amount`,(case when (`d`.`create_asset_size` is not null) then cast(((((cast(`a`.`token_amount` as decimal(45,18)) / `a`.`epochs_number`) / 3) / (`d`.`create_asset_size` / 1024)) / 1000000000000000000) as decimal(27,18)) else 0 end) AS `bid`,`d`.`hash` AS `transaction_hash`,`a`.`transaction_index` AS `transaction_index`,`a`.`block_number` AS `block_number`,`bb`.`timestamp` AS `timestamp`,0 AS `state_index`,ifnull(`b`.`state`,0) AS `state`,NULL AS `previous_states`,ifnull(`d`.`from`,'0x0') AS `from` from (((`service_agreement_v1_service_agreement_v1_created` `a` left join `content_asset_asset_minted` `b` on(((`a`.`block_number` = `b`.`block_number`) and (`a`.`transaction_index` = `b`.`transaction_index`)))) left join `content_asset_tx` `d` on(((`a`.`block_number` = `d`.`block_number`) and (`a`.`transaction_index` = `d`.`transaction_index`)))) left join `block` `bb` on((`a`.`block_number` = `bb`.`number`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_staging_update_dead`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_staging_update_dead`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_staging_update_dead` AS select (case when (((select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block')) - (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table'))) > 100) then ((select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block')) - (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'staging_table'))) else NULL end) AS `sync_delta` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_sys_sync_date`
--

/*!50001 DROP VIEW IF EXISTS `v_sys_sync_date`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_sys_sync_date` AS select `block`.`number` AS `number`,`block`.`timestamp` AS `timestamp`,cast(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') as date) AS `block_date`,convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC') AS `block_ts`,date_format(convert_tz(from_unixtime(`block`.`timestamp`),_utf8mb4'SYSTEM',_utf8mb4'UTC'),_utf8mb4'%Y-%m-%d %H:00:00') AS `block_ts_hour` from `block` where (`block`.`number` = (select `sync_status`.`block_num` from `sync_status` where (`sync_status`.`parameter` = 'last_synced_block') limit 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_tx_all`
--

/*!50001 DROP VIEW IF EXISTS `v_tx_all`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_tx_all` AS select `assertion_tx`.`block_number` AS `block_number`,`assertion_tx`.`hash` AS `hash`,'assertion_tx' AS `table` from `assertion_tx` union all select `commit_manager_v1_tx`.`block_number` AS `block_number`,`commit_manager_v1_tx`.`hash` AS `hash`,'commit_manager_v1_tx' AS `commit_manager_v1_tx` from `commit_manager_v1_tx` union all select `commit_manager_v1_u1_tx`.`block_number` AS `block_number`,`commit_manager_v1_u1_tx`.`hash` AS `hash`,'commit_manager_v1_u1_tx' AS `commit_manager_v1_u1_tx` from `commit_manager_v1_u1_tx` union all select `content_asset_tx`.`block_number` AS `block_number`,`content_asset_tx`.`hash` AS `hash`,'content_asset_tx' AS `content_asset_tx` from `content_asset_tx` union all select `hub_tx`.`block_number` AS `block_number`,`hub_tx`.`hash` AS `hash`,'hub_tx' AS `hub_tx` from `hub_tx` union all select `identity_tx`.`block_number` AS `block_number`,`identity_tx`.`hash` AS `hash`,'identity_tx' AS `identity_tx` from `identity_tx` union all select `other_tx`.`block_number` AS `block_number`,`other_tx`.`hash` AS `hash`,'other_tx' AS `other_tx` from `other_tx` union all select `profile_tx`.`block_number` AS `block_number`,`profile_tx`.`hash` AS `hash`,'profile_tx' AS `profile_tx` from `profile_tx` union all select `proof_manager_v1_tx`.`block_number` AS `block_number`,`proof_manager_v1_tx`.`hash` AS `hash`,'proof_manager_v1_tx' AS `proof_manager_v1_tx` from `proof_manager_v1_tx` union all select `proof_manager_v1_u1_tx`.`block_number` AS `block_number`,`proof_manager_v1_u1_tx`.`hash` AS `hash`,'proof_manager_v1_u1_tx' AS `proof_manager_v1_u1_tx` from `proof_manager_v1_u1_tx` union all select `service_agreement_v1_tx`.`block_number` AS `block_number`,`service_agreement_v1_tx`.`hash` AS `hash`,'service_agreement_v1_tx' AS `service_agreement_v1_tx` from `service_agreement_v1_tx` union all select `sharding_table_tx`.`block_number` AS `block_number`,`sharding_table_tx`.`hash` AS `hash`,'sharding_table_tx' AS `sharding_table_tx` from `sharding_table_tx` union all select `staking_tx`.`block_number` AS `block_number`,`staking_tx`.`hash` AS `hash`,'staking_tx' AS `staking_tx` from `staking_tx` union all select `token_tx`.`block_number` AS `block_number`,`token_tx`.`hash` AS `hash`,'token_tx' AS `token_tx` from `token_tx` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-01-25  9:39:59
